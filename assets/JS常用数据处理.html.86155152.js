import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{o,c,b as n,a as e,e as t,d as s,r as l}from"./app.a63c222e.js";const i={},u=t(`<h1 id="js\u5E38\u7528\u6570\u636E\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#js\u5E38\u7528\u6570\u636E\u5904\u7406" aria-hidden="true">#</a> JS\u5E38\u7528\u6570\u636E\u5904\u7406</h1><p>\u672C\u6587\u4E3B\u8981\u5BF9\u5DE5\u4F5C\u4E2D\u5E38\u7528\u7684\u6570\u636E\u7C7B\u578B\u7684<code>\u5224\u65AD</code>\u3001<code>\u904D\u5386</code>\u3001<code>\u8F6C\u5316</code>\u4E09\u65B9\u9762\u8FDB\u884C\u5F52\u7EB3\u603B\u7ED3\uFF0C\u4E5F\u662F\u9762\u8BD5\u4E2D\u7ECF\u5E38\u4F1A\u9047\u5230\u7684\u8003\u70B9\uFF0C\u4E3B\u8981\u6709\u4EE5\u4E0B\u51E0\u79CD\u6570\u636E\uFF1A</p><ol><li><code>Number</code></li><li><code>String</code></li><li><code>Symbol</code></li><li><code>Set/Map</code></li><li><code>Function</code></li><li><code>Array(\u91CD\u70B9)</code></li><li><code>Object(\u91CD\u70B9)</code></li></ol><h2 id="\u4E00\u3001number" tabindex="-1"><a class="header-anchor" href="#\u4E00\u3001number" aria-hidden="true">#</a> \u4E00\u3001Number</h2><h3 id="_1-\u5224\u65AD" tabindex="-1"><a class="header-anchor" href="#_1-\u5224\u65AD" aria-hidden="true">#</a> 1. \u5224\u65AD</h3><h3 id="_1-1-number-isnan" tabindex="-1"><a class="header-anchor" href="#_1-1-number-isnan" aria-hidden="true">#</a> 1.1 Number.isNaN()</h3><blockquote><p>\u5224\u65AD\u662F\u5426\u4E3ANaN</p><p><code>isNaN</code>\u53EA\u662F\u68C0\u9A8C\u4E00\u4E2A\u503C\u662F\u5426 <code>\u4E0D\u662F\u4E00\u4E2A\u6570\u5B57</code>\u3002<code>isNaN</code>\u7684\u5168\u79F0\u662F\u201Cis Not a Number\u201D\uFF0C\u4ECE\u5B57\u9762\u610F\u601D\u4E5F\u53EF\u4EE5\u7406\u89E3\u5B83\u7684\u4F5C\u7528\u3002</p><p>\u4F46\u662F\uFF0C\u5982\u679C\u8981\u5224\u65AD\u4E00\u4E2A\u503C\u662F\u5426\u4E25\u683C\u7B49\u4E8ENaN\uFF0C\u5168\u5C40\u7684<code>isNaN</code>\u8C8C\u4F3C\u5C31\u65E0\u6CD5\u505A\u5230\u4E86\uFF0C\u56E0\u4E3A\u4F20\u8FDB\u53BB\u4EFB\u4F55\u4E0D\u80FD\u8F6C\u5316\u6210\u6570\u5B57\u7684\u503C\uFF0C\u90FD\u4F1A\u5F97\u5230<code>true</code>\u3002\u56E0\u4E3A\u5168\u5C40\u7684<code>isNaN</code>\u4F1A\u628A\u4F20\u5165\u7684\u503C\u505A\u7C7B\u578B\u8F6C\u6362\uFF0C\u5148\u8F6C\u6362\u6210\u6570\u5B57\u578B\uFF0C\u518D\u5224\u65AD\u662F\u5426==<code>NaN</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span>  <span class="token comment">//true</span>
<span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token string">&#39;123&#39;</span><span class="token punctuation">)</span>   <span class="token comment">//false\uFF0C\u53EF\u8F6C\u6362\u6210number</span>
<span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>    <span class="token comment">//false\uFF0C\u53EF\u8F6C\u6362\u6210number</span>
<span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token string">&#39;this is a str&#39;</span><span class="token punctuation">)</span>   <span class="token comment">//true\uFF0C\u8F6C\u6362\u6210\u6570\u5B57\u662FNaN</span>
<span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span>   <span class="token comment">//true, undefined\u8F6C\u6362\u6210\u6570\u5B57\u662FNaN</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F88\u663E\u7136\u5B57\u7B26\u4E32\u5E76\u4E0D\u662F\u4E00\u4E2A\u6570\u5B57\uFF0C\u4E5F\u4E0D\u662FNaN\u3002\u4E3A\u4E86\u7EA0\u6B63\u8FD9\u4E2Abug\uFF0CES6\u4E2D\u63D0\u4F9B\u4E86<code>Number.isNaN</code>\u7528\u4E8E\u5224\u65AD\u4E00\u4E2A\u503C\u662F\u5426\u4E25\u683C\u7B49\u4E8ENaN\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span>  <span class="token comment">//true</span>
Number<span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span>  <span class="token comment">//true</span>

<span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token string">&#39;this is a str&#39;</span><span class="token punctuation">)</span>   <span class="token comment">// true</span>
Number<span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token string">&#39;this is a str&#39;</span><span class="token punctuation">)</span>   <span class="token comment">//false</span>
<span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span>   <span class="token comment">// true</span>
Number<span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span>   <span class="token comment">//false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\`Number.isNaN\`\u7528\u4E8E\u5224\u65AD\u4E00\u4E2A\u503C\u662F\u5426\u4E25\u683C\u7B49\u4E8ENaN</span>
Number<span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span>      <span class="token comment">// true</span>
<span class="token function">isNaN</span><span class="token punctuation">(</span> <span class="token string">&#39;NaN&#39;</span> <span class="token punctuation">)</span>         <span class="token comment">// true</span>
Number<span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span> <span class="token string">&#39;NaN&#39;</span> <span class="token punctuation">)</span>  <span class="token comment">// false  \u5DF2\u5BF9isNaN\u65B9\u6CD5\u8FDB\u884C\u4FEE\u6B63</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-number-isinteger" tabindex="-1"><a class="header-anchor" href="#_1-2-number-isinteger" aria-hidden="true">#</a> 1.2 Number.isInteger()</h3><blockquote><p>\u5224\u65AD\u662F\u5426\u4E3A\u6574\u6570</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Number<span class="token punctuation">.</span><span class="token function">isInteger</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
Number<span class="token punctuation">.</span><span class="token function">isInteger</span><span class="token punctuation">(</span><span class="token number">25.0</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
Number<span class="token punctuation">.</span><span class="token function">isInteger</span><span class="token punctuation">(</span><span class="token number">25.1</span><span class="token punctuation">)</span> <span class="token comment">// false</span>

<span class="token comment">// \u6216\u8005</span>
<span class="token keyword">function</span> <span class="token function">integer</span> <span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">typeof</span> num <span class="token operator">===</span> <span class="token string">&#39;number&#39;</span> <span class="token operator">&amp;&amp;</span> num<span class="token operator">%</span><span class="token number">1</span> <span class="token operator">===</span> <span class="token number">0</span>
<span class="token punctuation">}</span>
<span class="token function">integer</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span>    <span class="token comment">// true</span>
<span class="token function">integer</span><span class="token punctuation">(</span><span class="token number">25.1</span><span class="token punctuation">)</span>  <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-\u8F6C\u5316" tabindex="-1"><a class="header-anchor" href="#_2-\u8F6C\u5316" aria-hidden="true">#</a> 2. \u8F6C\u5316</h2><h3 id="_2-1-number-parseint-number-parsefloat" tabindex="-1"><a class="header-anchor" href="#_2-1-number-parseint-number-parsefloat" aria-hidden="true">#</a> 2.1 Number.parseInt()/Number.parseFloat()</h3><blockquote><p>ES6\u5DF2\u5C06parseInt\u548CparseFloat\u79FB\u690D\u5230Number\u5BF9\u8C61\u4E0A</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// ES5\u7684\u5199\u6CD5</span>
<span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">&#39;12.34&#39;</span><span class="token punctuation">)</span>     <span class="token comment">// 12</span>
<span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token string">&#39;123.45#&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 123.45</span>

<span class="token comment">// ES6\u7684\u5199\u6CD5</span>
Number<span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">&#39;12.34&#39;</span><span class="token punctuation">)</span>     <span class="token comment">// 12</span>
Number<span class="token punctuation">.</span><span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token string">&#39;123.45#&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 123.45</span>

Number<span class="token punctuation">.</span>parseInt <span class="token operator">===</span> parseInt     <span class="token comment">// true</span>
Number<span class="token punctuation">.</span>parseFloat <span class="token operator">===</span> parseFloat <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-tofixed" tabindex="-1"><a class="header-anchor" href="#_2-2-tofixed" aria-hidden="true">#</a> 2.2 toFixed()</h3><blockquote><p>\u4FDD\u7559\u6307\u5B9A\u5C0F\u6570\u4F4D\uFF0C\u4F1A\u56DB\u820D\u4E94\u5165\uFF0C\u6CE8\u610F\u5C0F\u6570\u70B9\u4E0E\u70B9\u8FD0\u7B97\u7B26\u7684\u533A\u5206</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token number">5.673</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>  <span class="token comment">// 5.7</span>
<span class="token punctuation">(</span><span class="token number">5.673</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>  <span class="token comment">// 5.67</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-math-round-math-ceil-math-floor-math-trunc" tabindex="-1"><a class="header-anchor" href="#_2-3-math-round-math-ceil-math-floor-math-trunc" aria-hidden="true">#</a> 2.3 Math.round/Math.ceil/Math.floor/Math.trunc</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u56DB\u820D\u4E94\u5165</span>
Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token number">3.2</span><span class="token punctuation">)</span>  <span class="token comment">// 3</span>
Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token number">5.6</span><span class="token punctuation">)</span> <span class="token comment">// 6</span>

<span class="token comment">// \u5411\u4E0A\u53D6\u6574</span>
Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span><span class="token number">3.2</span><span class="token punctuation">)</span>  <span class="token comment">// 4</span>
Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span><span class="token number">5.6</span><span class="token punctuation">)</span>  <span class="token comment">// 6</span>

<span class="token comment">// \u5411\u4E0B\u53D6\u6574</span>
Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token number">3.2</span><span class="token punctuation">)</span>  <span class="token comment">// 3</span>
Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token number">5.6</span><span class="token punctuation">)</span>  <span class="token comment">// 5</span>

<span class="token comment">// \u53BB\u9664\u5C0F\u6570\u90E8\u5206\uFF0C\u8FD4\u56DE\u6574\u6570\u90E8\u5206</span>
Math<span class="token punctuation">.</span><span class="token function">trunc</span><span class="token punctuation">(</span><span class="token number">4.9</span><span class="token punctuation">)</span>     <span class="token comment">//  4</span>
Math<span class="token punctuation">.</span><span class="token function">trunc</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">4.9</span><span class="token punctuation">)</span>    <span class="token comment">// -4</span>
Math<span class="token punctuation">.</span><span class="token function">trunc</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0.1234</span><span class="token punctuation">)</span> <span class="token comment">// -0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="\u4E8C\u3001string" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u3001string" aria-hidden="true">#</a> \u4E8C\u3001String</h1><h2 id="_1-\u5224\u65AD-1" tabindex="-1"><a class="header-anchor" href="#_1-\u5224\u65AD-1" aria-hidden="true">#</a> 1. \u5224\u65AD</h2><h3 id="_1-1-includes-\u6570\u7EC4\u4E5F\u6709\u6B64\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_1-1-includes-\u6570\u7EC4\u4E5F\u6709\u6B64\u65B9\u6CD5" aria-hidden="true">#</a> 1.1 includes() (\u6570\u7EC4\u4E5F\u6709\u6B64\u65B9\u6CD5)</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&#39;abc&#39;</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span>  <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_1-2-indexof-\u53C2\u6570\u53EA\u80FD\u4E3A\u5B57\u7B26\u4E32-\u6570\u7EC4\u4E5F\u6709\u6B64\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_1-2-indexof-\u53C2\u6570\u53EA\u80FD\u4E3A\u5B57\u7B26\u4E32-\u6570\u7EC4\u4E5F\u6709\u6B64\u65B9\u6CD5" aria-hidden="true">#</a> 1.2 indexOf() \u53C2\u6570\u53EA\u80FD\u4E3A\u5B57\u7B26\u4E32(\u6570\u7EC4\u4E5F\u6709\u6B64\u65B9\u6CD5)</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&#39;abc&#39;</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span>  <span class="token comment">// 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_1-3-search-\u53C2\u6570\u53EF\u4E3A\u5B57\u7B26\u4E32\u6216\u6B63\u5219" tabindex="-1"><a class="header-anchor" href="#_1-3-search-\u53C2\u6570\u53EF\u4E3A\u5B57\u7B26\u4E32\u6216\u6B63\u5219" aria-hidden="true">#</a> 1.3 search() \u53C2\u6570\u53EF\u4E3A\u5B57\u7B26\u4E32\u6216\u6B63\u5219</h3><blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&#39;abc&#39;</span><span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span>   <span class="token comment">// 1</span>

<span class="token keyword">const</span> paragraph <span class="token operator">=</span> <span class="token string">&#39;The quick brown fox jumps over the lazy dog. If the dog barked, was it really lazy?&#39;</span><span class="token punctuation">;</span>
<span class="token comment">// any character that is not a word character or whitespace</span>
<span class="token keyword">const</span> regex <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[^\\w\\s]</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>paragraph<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>regex<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//=&gt; lazy dog. </span>
<span class="token comment">// expected output: 43</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>paragraph<span class="token punctuation">[</span>paragraph<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>regex<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// expected output: &quot;.&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><h3 id="_1-4-match" tabindex="-1"><a class="header-anchor" href="#_1-4-match" aria-hidden="true">#</a> 1.4 match()</h3><p><strong><code>match()</code></strong> \u65B9\u6CD5\u68C0\u7D22\u8FD4\u56DE\u4E00\u4E2A\u5B57\u7B26\u4E32\u5339\u914D\u6B63\u5219\u8868\u8FBE\u5F0F\u7684\u7ED3\u679C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&#39;abc&#39;</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span>   <span class="token comment">// [&#39;b&#39;]</span>

<span class="token keyword">const</span> paragraph <span class="token operator">=</span> <span class="token string">&#39;The quick brown fox jumps over the lazy dog. It barked.&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> regex <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[A-Z]</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">;</span>
<span class="token keyword">const</span> found <span class="token operator">=</span> paragraph<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>regex<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>found<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// expected output: Array [&quot;T&quot;, &quot;I&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-\u8F6C\u5316-1" tabindex="-1"><a class="header-anchor" href="#_2-\u8F6C\u5316-1" aria-hidden="true">#</a> 2. \u8F6C\u5316</h2><h3 id="_3-1-trim" tabindex="-1"><a class="header-anchor" href="#_3-1-trim" aria-hidden="true">#</a> 3.1 trim()</h3><blockquote><p>\u53BB\u9664\u524D\u540E\u7A7A\u683C</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&#39; abc  &#39;</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">// &#39;abc&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-2-split" tabindex="-1"><a class="header-anchor" href="#_3-2-split" aria-hidden="true">#</a> 3.2 split()</h3><blockquote><p>\u4EE5\u6307\u5B9A\u7B26\u53F7\u5C06\u5B57\u7B26\u4E32\u62C6\u5206\u4E3A\u6570\u7EC4</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&#39;a b   c&#39;</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token comment">// [&#39;a&#39;, &#39;b&#39;, &#39;&#39;, &#39;&#39;, &#39;c&#39;]   b\u548Cc\u4E4B\u95F4\u6709\u4E09\u4E2A\u7A7A\u683C\uFF0C\u6240\u4EE5\u4E09\u4E2A\u7A7A\u683C\u4F1A\u5F97\u5230\u5939\u7740\u7684\u4E24\u4E2A\u7A7A\u683C\u3002</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-replace" tabindex="-1"><a class="header-anchor" href="#_3-3-replace" aria-hidden="true">#</a> 3.3 replace()</h3>`,39),r=s("replace"),k={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/replace#%E6%8C%87%E5%AE%9A%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%E4%BD%9C%E4%B8%BA%E5%8F%82%E6%95%B0",target:"_blank",rel:"noopener noreferrer"},d=s("\u6307\u5B9A\u4E00\u4E2A\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570"),m=n("p",null,"\u4F60\u53EF\u4EE5\u6307\u5B9A\u4E00\u4E2A\u51FD\u6570\u4F5C\u4E3A\u7B2C\u4E8C\u4E2A\u53C2\u6570\u3002\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u5F53\u5339\u914D\u6267\u884C\u540E\uFF0C\u8BE5\u51FD\u6570\u5C31\u4F1A\u6267\u884C\u3002 \u51FD\u6570\u7684\u8FD4\u56DE\u503C\u4F5C\u4E3A\u66FF\u6362\u5B57\u7B26\u4E32\u3002 (\u6CE8\u610F\uFF1A\u4E0A\u9762\u63D0\u5230\u7684\u7279\u6B8A\u66FF\u6362\u53C2\u6570\u5728\u8FD9\u91CC\u4E0D\u80FD\u88AB\u4F7F\u7528\u3002) \u53E6\u5916\u8981\u6CE8\u610F\u7684\u662F\uFF0C\u5982\u679C\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F\u6B63\u5219\u8868\u8FBE\u5F0F\uFF0C\u5E76\u4E14\u5176\u4E3A\u5168\u5C40\u5339\u914D\u6A21\u5F0F\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u65B9\u6CD5\u5C06\u88AB\u591A\u6B21\u8C03\u7528\uFF0C\u6BCF\u6B21\u5339\u914D\u90FD\u4F1A\u88AB\u8C03\u7528\u3002",-1),v=n("p",null,"\u4E0B\u9762\u662F\u8BE5\u51FD\u6570\u7684\u53C2\u6570\uFF1A",-1),b=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"\u53D8\u91CF\u540D"),n("th",{style:{"text-align":"left"}},"\u4EE3\u8868\u7684\u503C")])],-1),h=n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,"match")]),n("td",{style:{"text-align":"left"}},"\u5339\u914D\u7684\u5B50\u4E32\u3002\uFF08\u5BF9\u5E94\u4E8E\u4E0A\u8FF0\u7684$&\u3002\uFF09")],-1),g=n("td",{style:{"text-align":"left"}},[n("code",null,"p1,p2, ...")],-1),f={style:{"text-align":"left"}},y=s("\u5047\u5982 replace() \u65B9\u6CD5\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F\u4E00\u4E2A"),j={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp",target:"_blank",rel:"noopener noreferrer"},x=n("code",null,"RegExp",-1),_=s(" \u5BF9\u8C61\uFF0C\u5219\u4EE3\u8868\u7B2C n \u4E2A\u62EC\u53F7\u5339\u914D\u7684\u5B57\u7B26\u4E32\u3002\uFF08\u5BF9\u5E94\u4E8E\u4E0A\u8FF0\u7684$1\uFF0C$2\u7B49\u3002\uFF09\u4F8B\u5982\uFF0C\u5982\u679C\u662F\u7528 "),w=n("code",null,"/(\\a+)(\\b+)/",-1),q=s(" \u8FD9\u4E2A\u6765\u5339\u914D\uFF0C"),N=n("code",null,"p1",-1),O=s(" \u5C31\u662F\u5339\u914D\u7684 "),S=n("code",null,"\\a+",-1),E=s("\uFF0C"),F=n("code",null,"p2",-1),A=s(" \u5C31\u662F\u5339\u914D\u7684 "),I=n("code",null,"\\b+",-1),M=s("\u3002"),z=n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,"offset")]),n("td",{style:{"text-align":"left"}},[s("\u5339\u914D\u5230\u7684\u5B50\u5B57\u7B26\u4E32\u5728\u539F\u5B57\u7B26\u4E32\u4E2D\u7684\u504F\u79FB\u91CF\u3002\uFF08\u6BD4\u5982\uFF0C\u5982\u679C\u539F\u5B57\u7B26\u4E32\u662F "),n("code",null,"'abcd'"),s("\uFF0C\u5339\u914D\u5230\u7684\u5B50\u5B57\u7B26\u4E32\u662F "),n("code",null,"'bc'"),s("\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u53C2\u6570\u5C06\u4F1A\u662F 1\uFF09")])],-1),B=n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,"string")]),n("td",{style:{"text-align":"left"}},"\u88AB\u5339\u914D\u7684\u539F\u5B57\u7B26\u4E32\u3002")],-1),V=n("tr",null,[n("td",{style:{"text-align":"left"}},"NamedCaptureGroup"),n("td",{style:{"text-align":"left"}},"\u547D\u540D\u6355\u83B7\u7EC4\u5339\u914D\u7684\u5BF9\u8C61")],-1),C=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5927\u5C0F\u5199\u4E92\u6362</span>
<span class="token keyword">function</span> <span class="token function">change</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">([a-z]*)([A-Z]*)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">m<span class="token punctuation">,</span> m1<span class="token punctuation">,</span> m2</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> m1<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> m2<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;Aabb_Cc&#39;</span>
<span class="token function">change</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>   <span class="token comment">// &quot;aABB_cC&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-4-concat-\u6570\u7EC4\u4E5F\u6709\u6B64\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_3-4-concat-\u6570\u7EC4\u4E5F\u6709\u6B64\u65B9\u6CD5" aria-hidden="true">#</a> 3.4 concat() (\u6570\u7EC4\u4E5F\u6709\u6B64\u65B9\u6CD5)</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&#39;a&#39;</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">&#39;bc&#39;</span><span class="token punctuation">)</span>  <span class="token comment">// &#39;abc&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-5-slice-\u4F4D\u7F6E-\u4F4D\u7F6E-\u6570\u7EC4\u4E5F\u6709\u6B64\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_3-5-slice-\u4F4D\u7F6E-\u4F4D\u7F6E-\u6570\u7EC4\u4E5F\u6709\u6B64\u65B9\u6CD5" aria-hidden="true">#</a> 3.5 slice(\u4F4D\u7F6E\uFF0C\u4F4D\u7F6E) (\u6570\u7EC4\u4E5F\u6709\u6B64\u65B9\u6CD5)</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&#39;abcde&#39;</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>   <span class="token comment">// &#39;b&#39;  </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-6-substring-\u4F4D\u7F6E-\u4F4D\u7F6E" tabindex="-1"><a class="header-anchor" href="#_3-6-substring-\u4F4D\u7F6E-\u4F4D\u7F6E" aria-hidden="true">#</a> 3.6 substring(\u4F4D\u7F6E\uFF0C\u4F4D\u7F6E)</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u53C2\u6570\u5982\u679C\u662F\u8D1F\u6570\uFF0C\u4F1A\u53D8\u4E3A0\uFF0C\u4E00\u53C2\u5927\u4E8E\u4E8C\u53C2\u5219\u4F1A\u4E92\u6362\u4F4D\u7F6E</span>
<span class="token string">&#39;abcde&#39;</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>   <span class="token comment">// &#39;ab&#39;   \u76F8\u5F53\u4E8Esubstring(0, 2)  </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-7-substr-\u4F4D\u7F6E-\u957F\u5EA6" tabindex="-1"><a class="header-anchor" href="#_3-7-substr-\u4F4D\u7F6E-\u957F\u5EA6" aria-hidden="true">#</a> 3.7 substr(\u4F4D\u7F6E\uFF0C\u957F\u5EA6)</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&#39;abcde&#39;</span><span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>   <span class="token comment">// &#39;bc&#39;  </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h1 id="\u4E09\u3001symbol" tabindex="-1"><a class="header-anchor" href="#\u4E09\u3001symbol" aria-hidden="true">#</a> \u4E09\u3001Symbol</h1><blockquote><p>\u72EC\u4E00\u65E0\u4E8C\u7684\u503C\uFF0C\u76F4\u63A5\u8C03\u7528\uFF0C\u4E0D\u4F7F\u7528new</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">typeof</span> s  <span class="token comment">// &quot;symbol&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_1-\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#_1-\u904D\u5386" aria-hidden="true">#</a> 1. \u904D\u5386</h2><h3 id="_1-1-object-getownpropertysymbols" tabindex="-1"><a class="header-anchor" href="#_1-1-object-getownpropertysymbols" aria-hidden="true">#</a> 1.1 Object.getOwnPropertySymbols()</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span>

obj<span class="token punctuation">[</span>a<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;Hello&#39;</span>
obj<span class="token punctuation">[</span>b<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;World&#39;</span>

<span class="token keyword">const</span> objectSymbols <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getOwnPropertySymbols</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>

objectSymbols  <span class="token comment">// [Symbol(a), Symbol(b)]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-reflect-ownkeys" tabindex="-1"><a class="header-anchor" href="#_1-2-reflect-ownkeys" aria-hidden="true">#</a> 1.2 Reflect.ownKeys()</h3><blockquote><p>\u8FD4\u56DE\u6240\u6709\u7C7B\u578B\u7684\u952E\u540D</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;my_key&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token keyword">enum</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token literal-property property">nonEnum</span><span class="token operator">:</span> <span class="token number">3</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

Reflect<span class="token punctuation">.</span><span class="token function">ownKeys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>  <span class="token comment">//  [&quot;enum&quot;, &quot;nonEnum&quot;, Symbol(my_key)]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="\u56DB\u3001set-map" tabindex="-1"><a class="header-anchor" href="#\u56DB\u3001set-map" aria-hidden="true">#</a> \u56DB\u3001Set/Map</h1><h2 id="_1-set" tabindex="-1"><a class="header-anchor" href="#_1-set" aria-hidden="true">#</a> 1. Set</h2><blockquote><p>\u7C7B\u4F3C\u4E8E\u6570\u7EC4\uFF0C\u65E0\u91CD\u590D\u503C\uFF0C\u53C2\u6570\u4E3A\u5177\u6709<code>iterable\u63A5\u53E3</code>\u7684\u6570\u636E\u3002</p></blockquote><h3 id="_1-\u5224\u65AD-2" tabindex="-1"><a class="header-anchor" href="#_1-\u5224\u65AD-2" aria-hidden="true">#</a> 1. \u5224\u65AD</h3><ul><li><code>\u2460add(value)</code>\uFF1A\u6DFB\u52A0\u67D0\u4E2A\u503C\uFF0C\u8FD4\u56DE Set \u7ED3\u6784\u672C\u8EAB\u3002</li><li><code>\u2461delete(value)</code>\uFF1A\u5220\u9664\u67D0\u4E2A\u503C\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C\uFF0C\u8868\u793A\u5220\u9664\u662F\u5426\u6210\u529F\u3002</li><li><code>\u2462has(value)</code>\uFF1A\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C\uFF0C\u8868\u793A\u8BE5\u503C\u662F\u5426\u4E3ASet\u7684\u6210\u5458\u3002</li><li><code>\u2463clear()</code>\uFF1A\u6E05\u9664\u6240\u6709\u6210\u5458\uFF0C\u6CA1\u6709\u8FD4\u56DE\u503C\u3002</li></ul><h3 id="_2-\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#_2-\u904D\u5386" aria-hidden="true">#</a> 2. \u904D\u5386</h3><h4 id="_2-1-\u8FD4\u56DE\u904D\u5386\u5668" tabindex="-1"><a class="header-anchor" href="#_2-1-\u8FD4\u56DE\u904D\u5386\u5668" aria-hidden="true">#</a> 2.1 \u8FD4\u56DE\u904D\u5386\u5668</h4><ul><li><code>\u2460keys()</code>\uFF1A\u8FD4\u56DE\u952E\u540D\u7684\u904D\u5386\u5668</li><li><code>\u2461values()</code>\uFF1A\u8FD4\u56DE\u952E\u503C\u7684\u904D\u5386\u5668</li><li><code>\u2462entries()</code>\uFF1A\u8FD4\u56DE\u952E\u503C\u5BF9\u7684\u904D\u5386\u5668</li><li><strong><code>\u2463forEach()</code>\uFF1A\u4F7F\u7528\u56DE\u8C03\u51FD\u6570\u904D\u5386\u6BCF\u4E2A\u6210\u5458</strong></li></ul><h3 id="_3-\u8F6C\u5316" tabindex="-1"><a class="header-anchor" href="#_3-\u8F6C\u5316" aria-hidden="true">#</a> 3. \u8F6C\u5316</h3><h4 id="_3-1-\u53BB\u91CD" tabindex="-1"><a class="header-anchor" href="#_3-1-\u53BB\u91CD" aria-hidden="true">#</a> 3.1 \u53BB\u91CD</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6570\u7EC4\u53BB\u91CD</span>
<span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span>   <span class="token comment">// [1, 2]</span>

<span class="token comment">// \u5B57\u7B26\u4E32\u53BB\u91CD</span>
<span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token string">&#39;ababbc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>  <span class="token comment">// &#39;abc&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-2-\u5E76\u96C6-\u4EA4\u96C6-\u5DEE\u96C6" tabindex="-1"><a class="header-anchor" href="#_3-2-\u5E76\u96C6-\u4EA4\u96C6-\u5DEE\u96C6" aria-hidden="true">#</a> 3.2 \u5E76\u96C6/\u4EA4\u96C6/\u5DEE\u96C6</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment">// \u5E76\u96C6</span>
<span class="token keyword">let</span> union <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>a<span class="token punctuation">,</span> <span class="token operator">...</span>b<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token comment">// [1, 2, 3, 4]</span>
<span class="token comment">// \u6216\u8005</span>
<span class="token keyword">function</span> <span class="token function">uni</span> <span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    array<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>arr<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> 
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>
<span class="token function">uni</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">...</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment">//  [1, 2, 3, 4]</span>

<span class="token comment">// \u4EA4\u96C6</span>
<span class="token keyword">let</span> intersect <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>a<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span>  <span class="token comment">// [2, 3]</span>
<span class="token comment">// \u6216\u8005</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// [2, 3]</span>

<span class="token comment">// \u5DEE\u96C6</span>
<span class="token keyword">let</span> difference <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>a<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span>b<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token comment">// [1]</span>
<span class="token comment">// \u6216\u8005</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// [1]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-map" tabindex="-1"><a class="header-anchor" href="#_2-map" aria-hidden="true">#</a> 2. Map</h2><blockquote><p>\u7C7B\u4F3C\u4E8E\u5BF9\u8C61\uFF0C\u4E5F\u662F\u952E\u503C\u5BF9\u7684\u96C6\u5408\uFF0C\u4F46\u201C\u952E\u201D\u7684\u8303\u56F4\u4E0D\u9650\u4E8E\u5B57\u7B26\u4E32\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Author&#39;</span><span class="token punctuation">]</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
map       <span class="token comment">// {&quot;name&quot; =&gt; &quot;\u5F20\u4E09&quot;, &quot;title&quot; =&gt; &quot;Author&quot;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-\u5224\u65AD-3" tabindex="-1"><a class="header-anchor" href="#_1-\u5224\u65AD-3" aria-hidden="true">#</a> 1. \u5224\u65AD</h3><ul><li>\u2460<strong>size\u5C5E\u6027</strong></li><li>\u2461set(key, value)</li><li>\u2462get(key)</li><li>\u2463has(key)</li><li>\u2464delete(key)</li><li>\u2465clear()</li></ul><h3 id="_2-\u904D\u5386-1" tabindex="-1"><a class="header-anchor" href="#_2-\u904D\u5386-1" aria-hidden="true">#</a> 2. \u904D\u5386</h3><ul><li>keys()\uFF1A\u8FD4\u56DE\u952E\u540D\u7684\u904D\u5386\u5668\u3002</li><li>values()\uFF1A\u8FD4\u56DE\u952E\u503C\u7684\u904D\u5386\u5668\u3002</li><li>entries()\uFF1A\u8FD4\u56DE\u6240\u6709\u6210\u5458\u7684\u904D\u5386\u5668\u3002</li><li>forEach()\uFF1A\u904D\u5386 Map \u7684\u6240\u6709\u6210\u5458\u3002</li></ul><h1 id="\u4E94\u3001function" tabindex="-1"><a class="header-anchor" href="#\u4E94\u3001function" aria-hidden="true">#</a> \u4E94\u3001Function</h1><h2 id="_1-\u5224\u65AD-4" tabindex="-1"><a class="header-anchor" href="#_1-\u5224\u65AD-4" aria-hidden="true">#</a> 1. \u5224\u65AD</h2><h3 id="_1-1-function-prototype\u662F\u51FD\u6570-\u7531js\u5F15\u64CE\u751F\u6210" tabindex="-1"><a class="header-anchor" href="#_1-1-function-prototype\u662F\u51FD\u6570-\u7531js\u5F15\u64CE\u751F\u6210" aria-hidden="true">#</a> 1.1 Function.prototype\u662F\u51FD\u6570\uFF0C\u7531JS\u5F15\u64CE\u751F\u6210</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">\u51FD\u6570</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>__proto__ <span class="token operator">===</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype

Object <span class="token keyword">instanceof</span> <span class="token class-name">Object</span> <span class="token comment">// true            Object.__proto__===Function.prototype    Function.prototype.__proto__===Object.prototype</span>
Function <span class="token keyword">instanceof</span> <span class="token class-name">Function</span> <span class="token comment">// true     Function.__proto__===Function.prototype</span>
Function <span class="token keyword">instanceof</span> <span class="token class-name">Object</span> <span class="token comment">// true        Function.__proto__===Function.prototype   Function.prototype.__proto__===Object.prototype</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-this\u6307\u5411" tabindex="-1"><a class="header-anchor" href="#_1-2-this\u6307\u5411" aria-hidden="true">#</a> 1.2 this\u6307\u5411</h3><blockquote><p>ES5\u4E2Dthis\u6C38\u8FDC\u6307\u5411\u6700\u540E\u8C03\u7528\u5B83\u7684\u90A3\u4E2A\u5BF9\u8C61\uFF0C\u53EF\u4F7F\u7528call\uFF0Capply\uFF0Cbind\u6539\u53D8\u6307\u5411</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u624B\u5199call</span>
<span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">mycall</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token keyword">this</span> <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;not funciton&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    obj <span class="token operator">=</span> obj <span class="token operator">||</span> window
    obj<span class="token punctuation">.</span>fn <span class="token operator">=</span> <span class="token keyword">this</span>
    <span class="token keyword">let</span> arg <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arguments<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> obj<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token operator">...</span>arg<span class="token punctuation">)</span>
    <span class="token keyword">delete</span> obj<span class="token punctuation">.</span>fn
    <span class="token keyword">return</span> result
<span class="token punctuation">}</span> 

<span class="token comment">// \u624B\u5199apply</span>
<span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">myapply</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token keyword">this</span> <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;not funciton&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    context <span class="token operator">=</span> context <span class="token operator">||</span> window
    context<span class="token punctuation">.</span>fn <span class="token operator">=</span> <span class="token keyword">this</span>
    <span class="token keyword">let</span> result
    <span class="token keyword">if</span> <span class="token punctuation">(</span>arguments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        result <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token operator">...</span>arguments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        result <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">delete</span> context<span class="token punctuation">.</span>fn
    <span class="token keyword">return</span> result
<span class="token punctuation">}</span>

<span class="token comment">// \u624B\u5199bind</span>
<span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">mybind</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token keyword">this</span> <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;Error&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> _this <span class="token operator">=</span> <span class="token keyword">this</span>
    <span class="token keyword">let</span> arg <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arguments<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token comment">// \u51FD\u6570\u662F\u53EF\u4EE5new\u7684\uFF0C\u6240\u4EE5\u8981\u5904\u7406\u8FD9\u4E2A\u95EE\u9898\uFF0C\u4F7F\u7528\u7EC4\u5408\u7EE7\u627F</span>
    <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token constant">F</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token keyword">instanceof</span> <span class="token class-name">F</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">_this</span><span class="token punctuation">(</span><span class="token operator">...</span>arg<span class="token punctuation">,</span> <span class="token operator">...</span>arguments<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">_this</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> arg<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token operator">...</span>arguments<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>ES6\u7684\u7BAD\u5934\u51FD\u6570this\u6307\u5411\u5B9A\u4E49\u5B83\u7684\u5BF9\u8C61\uFF0C\u6216\u8005\u662F\u7BAD\u5934\u51FD\u6570\u6240\u5728\u7684\u51FD\u6570\u4F5C\u7528\u57DF</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token function-variable function">fn</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>a<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
obj<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// undefined \u5BF9\u8C61\u4E2D\u7684\u7BAD\u5934\u51FD\u6570\u7684this\u6307\u5411\u7684\u662F\u5B83\u6240\u5904\u7684\u4E0A\u4E0B\u6587window\uFF0C\u6240\u4EE5\u4E0D\u8981\u5728\u5BF9\u8C61\u4E2D\u4F7F\u7528\u7BAD\u5934\u51FD\u6570</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="\u516D\u3001array" tabindex="-1"><a class="header-anchor" href="#\u516D\u3001array" aria-hidden="true">#</a> \u516D\u3001Array</h1><h2 id="_1-\u5224\u65AD-5" tabindex="-1"><a class="header-anchor" href="#_1-\u5224\u65AD-5" aria-hidden="true">#</a> 1. \u5224\u65AD</h2><h3 id="_1-1-\u662F\u5426\u4E3A\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#_1-1-\u662F\u5426\u4E3A\u6570\u7EC4" aria-hidden="true">#</a> 1.1 \u662F\u5426\u4E3A\u6570\u7EC4</h3><ol><li><code>Array.isArray()</code></li><li><code>Object.prototype.toString.call()</code> \u4E07\u80FD\u6CD5</li><li><code>instanceof</code></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u539F\u7406\uFF1A\u5B9E\u4F8B\u7684\u539F\u578B\u94FE\u4E0A\u662F\u5426\u5B58\u5728\u53F3\u4FA7\u53D8\u91CF\u7684\u539F\u578B</span>
<span class="token keyword">function</span> <span class="token function">new_instance_of</span><span class="token punctuation">(</span><span class="token parameter">leftVaule<span class="token punctuation">,</span> rightVaule</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
    <span class="token keyword">let</span> rightProto <span class="token operator">=</span> rightVaule<span class="token punctuation">.</span>prototype<span class="token punctuation">;</span> <span class="token comment">// \u53D6\u53F3\u8868\u8FBE\u5F0F\u7684 prototype \u503C</span>
    leftVaule <span class="token operator">=</span> leftVaule<span class="token punctuation">.</span>__proto__<span class="token punctuation">;</span> <span class="token comment">// \u53D6\u5DE6\u8868\u8FBE\u5F0F\u7684__proto__\u503C</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    	<span class="token keyword">if</span> <span class="token punctuation">(</span>leftVaule <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>	
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>leftVaule <span class="token operator">===</span> rightProto<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>	
        <span class="token punctuation">}</span> 
        leftVaule <span class="token operator">=</span> leftVaule<span class="token punctuation">.</span>__proto__ 
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-includes-\u5305\u542B\u9879-\u8D77\u59CB\u4F4D\u7F6E" tabindex="-1"><a class="header-anchor" href="#_1-2-includes-\u5305\u542B\u9879-\u8D77\u59CB\u4F4D\u7F6E" aria-hidden="true">#</a> 1.2 includes(\u5305\u542B\u9879, \u8D77\u59CB\u4F4D\u7F6E)</h3><blockquote><p>\u5224\u65AD\u6570\u7EC4\u662F\u5426\u5305\u542B\u67D0\u4E2A\u503C\uFF0C\u8FD4\u56DE\u7684\u662F\u5E03\u5C14\u503C</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_2-\u904D\u5386-2" tabindex="-1"><a class="header-anchor" href="#_2-\u904D\u5386-2" aria-hidden="true">#</a> 2. \u904D\u5386</h2><h3 id="_2-1-\u539F\u6570\u7EC4\u4E0D\u53D8" tabindex="-1"><a class="header-anchor" href="#_2-1-\u539F\u6570\u7EC4\u4E0D\u53D8" aria-hidden="true">#</a> 2.1 \u539F\u6570\u7EC4\u4E0D\u53D8</h3><blockquote><p>\u4E00\u53C2\u4E3A\u51FD\u6570(value, index, arr) =&gt; {}\uFF0C \u4E8C\u53C2\u4E3Athis\u6307\u5411</p></blockquote><ul><li><code>map()</code> \u8FD4\u56DE\u7531rerurn\u503C\u7EC4\u6210\u7684\u6570\u7EC4\uFF0C\u591A\u7528\u4E8E\u5C06\u6570\u636E\u5904\u7406\u4E3A\u9700\u8981\u7684\u683C\u5F0F</li><li><code>filter()</code> \u8FD4\u56DE\u7531return true\u7684\u503C\u7EC4\u6210\u7684\u6570\u7EC4</li><li><code>every()</code> \u8FD4\u56DE\u5E03\u5C14\u503C</li><li><code>some()</code> \u8FD4\u56DE\u5E03\u5C14\u503C</li><li><code>forEach()</code> \u540Cfor\u5FAA\u73AF\uFF0C\u65E0\u8FD4\u56DE\u503C</li><li><code>reduce()</code> \u591A\u503C\u53D8\u4E3A\u5355\u503C</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u8FD4\u56DE\u6700\u5927\u503C</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x <span class="token operator">&gt;</span> y <span class="token operator">?</span> x <span class="token operator">:</span> y <span class="token punctuation">)</span>  <span class="token comment">// 3</span>

<span class="token comment">// \u8FD4\u56DE\u6700\u957F\u5B57\u7B26\u4E32</span>
<span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;abc&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ab&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> y<span class="token punctuation">.</span>length <span class="token operator">?</span> x <span class="token operator">:</span> y<span class="token punctuation">)</span>  <span class="token comment">// &#39;abc&#39;</span>

<span class="token comment">// \u6C42\u548C</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x <span class="token operator">+</span> y<span class="token punctuation">)</span>  <span class="token comment">// 6</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u591A\u7528\u4E8E\u62FC\u63A5\u62C6\u5206</p></blockquote><ul><li><code>join()</code> \u6307\u5B9A\u5B57\u7B26\u5C06\u6570\u7EC4\u62FC\u63A5\u4E3A\u5B57\u7B26\u4E32</li><li><code>slice()</code> \u622A\u53D6\u6570\u7EC4\u6216\u5B57\u7B26\u4E32</li><li><code>concat()</code> \u8FDE\u63A5\u6570\u7EC4\u6216\u5B57\u7B26\u4E32</li></ul><blockquote><p>for\u5FAA\u73AF</p></blockquote><ul><li><code>for</code></li><li><code>for in</code> \u591A\u7528\u4E8E\u952E</li><li><code>for of</code> \u591A\u7528\u4E8E\u503C\uFF0C\u5BF9\u8C61\u4E0D\u53EF\u7528</li></ul><h3 id="_2-2-\u539F\u6570\u7EC4\u6539\u53D8" tabindex="-1"><a class="header-anchor" href="#_2-2-\u539F\u6570\u7EC4\u6539\u53D8" aria-hidden="true">#</a> 2.2 \u539F\u6570\u7EC4\u6539\u53D8</h3><ul><li><code>reverse()</code> \u53CD\u5E8F</li><li><code>sort()</code> \u4F20\u5165\u6392\u5E8F\u53C2\u6570</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5347\u5E8F</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x <span class="token operator">-</span> y<span class="token punctuation">)</span>    <span class="token comment">// [1, 2, 3]</span>

<span class="token comment">// \u4E71\u5E8F</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">0.5</span><span class="token punctuation">)</span>    <span class="token comment">// [2, 3, 1]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>splice(\u4F4D\u7F6E\uFF0C\u4E2A\u6570\uFF0C\u589E\u52A0\u503C)</code> \u53EF\u5220\u9664\u6216\u589E\u52A0\uFF0C\u8FD4\u56DE\u5220\u9664\u503C</li><li><code>push()</code> \u8FD4\u56DE\u957F\u5EA6</li><li><code>pop()</code> \u8FD4\u56DE\u5220\u9664\u503C</li><li><code>unshift()</code> \u8FD4\u56DE\u957F\u5EA6</li><li><code>shift()</code> \u8FD4\u56DE\u5220\u9664\u503C</li></ul><h3 id="_2-1-find-value-index-arr-this" tabindex="-1"><a class="header-anchor" href="#_2-1-find-value-index-arr-this" aria-hidden="true">#</a> 2.1 find((value, index, arr) =&gt; {}, this)</h3><blockquote><p>\u8FD4\u56DE<strong>\u7B2C\u4E00\u4E2A</strong>\u7B26\u5408\u6761\u4EF6\u7684\u6570\u7EC4\u6210\u5458</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">n</span> <span class="token operator">=&gt;</span> n <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token comment">// -5  \u6CE8\u610F\u4E0D\u662F\u8FD4\u56DE\u6570\u7EC4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-findindex-value-index-arr-this" tabindex="-1"><a class="header-anchor" href="#_2-2-findindex-value-index-arr-this" aria-hidden="true">#</a> 2.2 findIndex((value, index, arr) =&gt; {}, this)</h3><blockquote><p>\u8FD4\u56DE<strong>\u7B2C\u4E00\u4E2A</strong>\u7B26\u5408\u6761\u4EF6\u7684\u6570\u7EC4\u6210\u5458\u7684\u4F4D\u7F6E</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token parameter">n</span> <span class="token operator">=&gt;</span> n <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token comment">// 2 </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-keys-\u3001values-\u3001entries" tabindex="-1"><a class="header-anchor" href="#_2-3-keys-\u3001values-\u3001entries" aria-hidden="true">#</a> 2.3 keys()\u3001values()\u3001entries()</h3><blockquote><p>\u8FD4\u56DE\u6570\u7EC4\u7684\u904D\u5386\u5668\u5BF9\u8C61\uFF0C\u53EF\u7528<code>for of</code>\u6216\u6269\u5C55\u8FD0\u7B97\u7B26\u5C06\u503C\u904D\u5386\u51FA\u6765</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token keyword">of</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 0</span>
<span class="token comment">// 1</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> elem <span class="token keyword">of</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>elem<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// &#39;a&#39;</span>
<span class="token comment">// &#39;b&#39;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> <span class="token punctuation">[</span>index<span class="token punctuation">,</span> elem<span class="token punctuation">]</span> <span class="token keyword">of</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> elem<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 0 &#39;a&#39;</span>
<span class="token comment">// 1 &#39;b&#39;</span>

<span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 
<span class="token punctuation">[</span><span class="token operator">...</span>arr<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>     <span class="token comment">// [1,2,3] </span>
<span class="token punctuation">[</span><span class="token operator">...</span>arr<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>       <span class="token comment">// [0,1,2] </span>
<span class="token punctuation">[</span><span class="token operator">...</span>arr<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment">// [ [0,1], [1,2], [2,3] ] </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-\u8F6C\u5316-1" tabindex="-1"><a class="header-anchor" href="#_3-\u8F6C\u5316-1" aria-hidden="true">#</a> 3. \u8F6C\u5316</h2><h3 id="_3-1-\u89E3\u6784\u8D4B\u503C" tabindex="-1"><a class="header-anchor" href="#_3-1-\u89E3\u6784\u8D4B\u503C" aria-hidden="true">#</a> 3.1 \u89E3\u6784\u8D4B\u503C</h3><ol><li>\u8BBE\u7F6E\u53D8\u91CF\u548C\u9ED8\u8BA4\u503C\uFF0Cundefined\u4E3A\u65E0\u503C\uFF0Cnull\u4E3A\u6709\u503C</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">]</span>
a  <span class="token comment">// 1</span>
b  <span class="token comment">// [2]</span>
c  <span class="token comment">// 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>\u4EA4\u6362\u53D8\u91CF\u503C</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> y <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">[</span>x<span class="token punctuation">,</span> y<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>y<span class="token punctuation">,</span> x<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-\u7C7B\u6570\u7EC4\u8F6C\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#_3-2-\u7C7B\u6570\u7EC4\u8F6C\u6570\u7EC4" aria-hidden="true">#</a> 3.2 \u7C7B\u6570\u7EC4\u8F6C\u6570\u7EC4</h3><ul><li>\u5C06<code>DOM\u5BF9\u8C61</code>\u3001<code>arguments\u7C7B\u6570\u7EC4</code>\u3001<code>\u5177\u6709length\u5C5E\u6027\u7684\u5BF9\u8C61</code>\u3001<code>\u5B57\u7B26\u4E32</code>\u7B49\u7C7B\u6570\u7EC4\u8F6C\u4E3A\u771F\u6B63\u7684\u6570\u7EC4\u3002</li></ul><ol><li><code>Array.from()</code></li></ol><ul><li><code>Array.from</code>\u652F\u6301\u8F6C\u5316\u5177\u6709<code>Iterator\u63A5\u53E3</code>\u7684\u5BF9\u8C61\uFF0C\u540C\u65F6\u8FD8\u652F\u6301\u8F6C\u5316\u65E0<code>Iterator\u63A5\u53E3</code>\u4F46\u7C7B\u4F3C\u6570\u7EC4\u7684\u5BF9\u8C61\uFF0C\u5373\u5E26\u6709<code>length</code>\u5C5E\u6027\u7684\u5BF9\u8C61\u3002</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span>   <span class="token comment">// [ &quot;h&quot;, &quot;e&quot;, &quot;l&quot;, &quot;l&quot;, &quot;o&quot; ] </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li><code>Array.prototype.slice.call()</code></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span>  <span class="token comment">// [ &quot;h&quot;, &quot;e&quot;, &quot;l&quot;, &quot;l&quot;, &quot;o&quot; ] </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li><code>[...\u7C7B\u6570\u7EC4]</code></li></ol><ul><li>\u6269\u5C55\u8FD0\u7B97\u7B26\u5185\u90E8\u8C03\u7528\u7684\u662F\u6570\u636E\u7ED3\u6784\u7684<code>Iterator\u63A5\u53E3</code>\uFF0C\u56E0\u6B64\u53EA\u6709<code>Iterator\u63A5\u53E3</code>\u7684\u5BF9\u8C61\u624D\u53EF\u4EE5\u7528\u6269\u5C55\u8FD0\u7B97\u7B26\u8F6C\u4E3A\u771F\u6B63\u7684\u6570\u7EC4\u3002</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">[</span><span class="token operator">...</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">]</span>   <span class="token comment">// [ &quot;h&quot;, &quot;e&quot;, &quot;l&quot;, &quot;l&quot;, &quot;o&quot; ]   </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li><code>split</code></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&#39;hello&#39;</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>  <span class="token comment">// [ &quot;h&quot;, &quot;e&quot;, &quot;l&quot;, &quot;l&quot;, &quot;o&quot; ]  </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-3-\u6570\u7EC4\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#_3-3-\u6570\u7EC4\u62F7\u8D1D" aria-hidden="true">#</a> 3.3 \u6570\u7EC4\u62F7\u8D1D</h3><ol><li><code>[...arr]</code></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span>   <span class="token comment">// [1, 2] </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li><code>Object.assign()</code></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment">// [1, 2]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li><code>slice()</code></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// [1, 2]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li><code>concat()</code></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment">// [1, 2]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-4-\u5408\u5E76\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#_3-4-\u5408\u5E76\u6570\u7EC4" aria-hidden="true">#</a> 3.4 \u5408\u5E76\u6570\u7EC4</h3><ol><li><code>concat</code></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6CE8\u610Fconcat\u7684\u53C2\u6570\u5982\u679C\u4F20\u7684\u662F\u6570\u7EC4\uFF0C\u5219\u4F1A\u5C06\u6570\u7EC4\u7684\u6210\u5458\u53D6\u51FA\u6765\u4E0E\u524D\u8005\u5408\u5E76\uFF0C\u800C\u4E0D\u662F\u5408\u5E76\u8FD9\u4E2A\u6570\u7EC4</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>  <span class="token comment">// [1, 2]</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment">// \u5F97\u5230[1, 2]\uFF0C\u800C\u4E0D\u662F[1, [2]]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li><code>[...arr1, ...arr2]</code></li></ol><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>[...[1, 2], ...[3, 4]]  // [1, 2, 3, 4]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-5-\u6570\u7EC4\u53BB\u91CD" tabindex="-1"><a class="header-anchor" href="#_3-5-\u6570\u7EC4\u53BB\u91CD" aria-hidden="true">#</a> 3.5 \u6570\u7EC4\u53BB\u91CD</h3><ol><li><code>Set\u65B9\u6CD5</code></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span>  <span class="token comment">// [1, 2, 3]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li>\u6570\u7EC4\u904D\u5386\u6CD5</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">uni</span> <span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    array<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>arr<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> 
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>

<span class="token function">uni</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment">// [1, 2, 3]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>\u6570\u7EC4\u4E0B\u6807\u6CD5</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">uni</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> data<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> index<span class="token punctuation">,</span> arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> arr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">===</span> index<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">uni</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment">// [1, 2, 3]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>\u5BF9\u8C61\u952E\u503C\u6CD5</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">uni</span> <span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    array<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>obj<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
            obj<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>

<span class="token function">uni</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment">// [1, 2, 3]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-6-\u6570\u7EC4\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#_3-6-\u6570\u7EC4\u6392\u5E8F" aria-hidden="true">#</a> 3.6 \u6570\u7EC4\u6392\u5E8F</h3><h3 id="_3-7-\u6570\u7EC4\u62C9\u5E73" tabindex="-1"><a class="header-anchor" href="#_3-7-\u6570\u7EC4\u62C9\u5E73" aria-hidden="true">#</a> 3.7 \u6570\u7EC4\u62C9\u5E73</h3><ol><li>flat(\u5C42\u6570)</li></ol><blockquote><p>\u5C06\u6570\u7EC4<code>\u62C9\u5E73</code></p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u53EF\u8BBE\u7F6E\u62C9\u5E73\u5C42\u6570</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">flat</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>   <span class="token comment">// [1, 2, 3, [4, 5]]</span>

<span class="token comment">// \u5C42\u6570\u4E0D\u9650\u4F7F\u7528Infinity</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">flat</span><span class="token punctuation">(</span><span class="token number">Infinity</span><span class="token punctuation">)</span>  <span class="token comment">// [1, 2, 3]</span>

<span class="token keyword">function</span> <span class="token function">flat</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">function</span> <span class="token function">handle</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token function">handle</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">:</span> array<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;should be array&#39;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span> 
    <span class="token punctuation">}</span>
    <span class="token function">handle</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
    <span class="token keyword">return</span> array
<span class="token punctuation">}</span> 

<span class="token function">flat</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>   <span class="token comment">// [1, 2, 3]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="\u4E03\u3001object" tabindex="-1"><a class="header-anchor" href="#\u4E03\u3001object" aria-hidden="true">#</a> \u4E03\u3001Object</h1><h2 id="_1-\u5224\u65AD-6" tabindex="-1"><a class="header-anchor" href="#_1-\u5224\u65AD-6" aria-hidden="true">#</a> 1. \u5224\u65AD</h2><h3 id="_1-1-object-is" tabindex="-1"><a class="header-anchor" href="#_1-1-object-is" aria-hidden="true">#</a> 1.1 Object.is()</h3><blockquote><p>\u6BD4\u8F83\u4E24\u4E2A\u503C\u662F\u5426\u76F8\u7B49\uFF0C\u4E3A===</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">+</span><span class="token number">0</span> <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">0</span>      <span class="token comment">//true</span>
<span class="token number">NaN</span> <span class="token operator">===</span> <span class="token number">NaN</span>    <span class="token comment">// false</span>

Object<span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token operator">+</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token comment">// false</span>
Object<span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">,</span> <span class="token number">NaN</span><span class="token punctuation">)</span>  <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-reflect-has" tabindex="-1"><a class="header-anchor" href="#_1-2-reflect-has" aria-hidden="true">#</a> 1.2 Reflect.has()</h3><blockquote><p>\u540Cin\u4F5C\u7528</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Reflect<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>Object<span class="token punctuation">,</span> <span class="token string">&#39;toString&#39;</span><span class="token punctuation">)</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_2-\u904D\u5386-3" tabindex="-1"><a class="header-anchor" href="#_2-\u904D\u5386-3" aria-hidden="true">#</a> 2. \u904D\u5386</h2><h3 id="_2-1-in-\u53EF\u904D\u5386\u81EA\u8EAB\u53CA\u539F\u578B\u4E0A\u7684\u53EF\u679A\u4E3E\u548C\u4E0D\u53EF\u679A\u4E3E\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#_2-1-in-\u53EF\u904D\u5386\u81EA\u8EAB\u53CA\u539F\u578B\u4E0A\u7684\u53EF\u679A\u4E3E\u548C\u4E0D\u53EF\u679A\u4E3E\u5C5E\u6027" aria-hidden="true">#</a> 2.1 in (\u53EF\u904D\u5386\u81EA\u8EAB\u53CA\u539F\u578B\u4E0A\u7684\u53EF\u679A\u4E3E\u548C\u4E0D\u53EF\u679A\u4E3E\u5C5E\u6027)</h3><h3 id="_2-2-for-in-\u53EF\u904D\u5386\u81EA\u8EAB\u53CA\u539F\u578B\u4E0A\u7684\u53EF\u679A\u4E3E\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#_2-2-for-in-\u53EF\u904D\u5386\u81EA\u8EAB\u53CA\u539F\u578B\u4E0A\u7684\u53EF\u679A\u4E3E\u5C5E\u6027" aria-hidden="true">#</a> 2.2 for in (\u53EF\u904D\u5386\u81EA\u8EAB\u53CA\u539F\u578B\u4E0A\u7684\u53EF\u679A\u4E3E\u5C5E\u6027)</h3><h3 id="_2-3-object-getownpropertynames-\u53EF\u904D\u5386\u81EA\u8EAB\u53EF\u679A\u4E3E\u548C\u4E0D\u53EF\u679A\u4E3E\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#_2-3-object-getownpropertynames-\u53EF\u904D\u5386\u81EA\u8EAB\u53EF\u679A\u4E3E\u548C\u4E0D\u53EF\u679A\u4E3E\u5C5E\u6027" aria-hidden="true">#</a> 2.3 Object.getOwnPropertyNames (\u53EF\u904D\u5386\u81EA\u8EAB\u53EF\u679A\u4E3E\u548C\u4E0D\u53EF\u679A\u4E3E\u5C5E\u6027)</h3><h3 id="_2-4-object-hasownproperty-\u53EF\u904D\u5386\u81EA\u8EAB\u53EF\u679A\u4E3E\u548C\u4E0D\u53EF\u679A\u4E3E\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#_2-4-object-hasownproperty-\u53EF\u904D\u5386\u81EA\u8EAB\u53EF\u679A\u4E3E\u548C\u4E0D\u53EF\u679A\u4E3E\u5C5E\u6027" aria-hidden="true">#</a> 2.4 Object.hasOwnProperty() (\u53EF\u904D\u5386\u81EA\u8EAB\u53EF\u679A\u4E3E\u548C\u4E0D\u53EF\u679A\u4E3E\u5C5E\u6027)</h3><h3 id="_2-5-object-keys-object-values-object-entries-\u53EF\u904D\u5386\u81EA\u8EAB\u53EF\u679A\u4E3E\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#_2-5-object-keys-object-values-object-entries-\u53EF\u904D\u5386\u81EA\u8EAB\u53EF\u679A\u4E3E\u5C5E\u6027" aria-hidden="true">#</a> 2.5 Object.keys/Object.values/Object.entries (\u53EF\u904D\u5386\u81EA\u8EAB\u53EF\u679A\u4E3E\u5C5E\u6027)</h3><h3 id="_2-6-reflect-ownkeys-\u7B49\u540C\u4E8Eobject-getownpropertynames\u4E0Eobject-getownpropertysymbols\u4E4B\u548C" tabindex="-1"><a class="header-anchor" href="#_2-6-reflect-ownkeys-\u7B49\u540C\u4E8Eobject-getownpropertynames\u4E0Eobject-getownpropertysymbols\u4E4B\u548C" aria-hidden="true">#</a> 2.6 Reflect.ownKeys() (\u7B49\u540C\u4E8EObject.getOwnPropertyNames\u4E0EObject.getOwnPropertySymbols\u4E4B\u548C)</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token string">&#39;bar&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">baz</span><span class="token operator">:</span> <span class="token number">42</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>   <span class="token comment">// [&quot;foo&quot;, &quot;baz&quot;]</span>

Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token number">100</span><span class="token operator">:</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">:</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token operator">:</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token comment">// [&quot;b&quot;, &quot;c&quot;, &quot;a&quot;]</span>
<span class="token comment">// \u5C5E\u6027\u540D\u4E3A\u6570\u503C\u7684\u5C5E\u6027 \uFF0C\u662F\u6309\u7167\u6570\u503C\u5927\u5C0F\uFF0C\u4ECE\u5C0F\u5230\u5927\u904D\u5386\u7684\uFF0C\u56E0\u6B64\u8FD4\u56DE\u7684\u987A\u5E8F\u662Fb\u3001c\u3001a =&gt;\u8BF4\u767D\u4E86\u5F53\u7A00\u758F\u6570\u7EC4\u770B\u5F85\u4E86</span>

Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token string">&#39;bar&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">baz</span><span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">}</span><span class="token punctuation">)</span>   <span class="token comment">// [ [&quot;foo&quot;, &quot;bar&quot;], [&quot;baz&quot;, 42] ]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-\u8F6C\u5316-2" tabindex="-1"><a class="header-anchor" href="#_3-\u8F6C\u5316-2" aria-hidden="true">#</a> 3. \u8F6C\u5316</h2><h3 id="_3-1-\u89E3\u6784\u8D4B\u503C-1" tabindex="-1"><a class="header-anchor" href="#_3-1-\u89E3\u6784\u8D4B\u503C-1" aria-hidden="true">#</a> 3.1 \u89E3\u6784\u8D4B\u503C</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u8BBE\u7F6E\u53D8\u91CF\u53CA\u522B\u540D</span>
<span class="token keyword">let</span> <span class="token punctuation">{</span> x<span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span>m<span class="token punctuation">,</span> <span class="token operator">...</span>z <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">4</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
x <span class="token comment">// 1</span>
y <span class="token comment">// \u62A5\u9519</span>
m <span class="token comment">// 2</span>
z <span class="token comment">// { a: 3, b: 4 }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-\u8F6C\u4E3A\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#_3-2-\u8F6C\u4E3A\u5BF9\u8C61" aria-hidden="true">#</a> 3.2 \u8F6C\u4E3A\u5BF9\u8C61</h3><ol><li><code>{...}</code></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6570\u7EC4\u8F6C\u5BF9\u8C61</span>
<span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">[</span><span class="token string">&#39;x&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;y&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span>  <span class="token comment">// {0: &quot;x&quot;, 1: &quot;y&quot;}</span>

<span class="token comment">// \u5B57\u7B26\u4E32\u8F6C\u5BF9\u8C61</span>
<span class="token punctuation">{</span><span class="token operator">...</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">}</span>     <span class="token comment">// {0: &quot;h&quot;, 1: &quot;e&quot;, 2: &quot;l&quot;, 3: &quot;l&quot;, 4: &quot;o&quot;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li><code>Object.fromEntries</code></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5C06\u952E\u503C\u5BF9\u8F6C\u5316\u4E3A\u5BF9\u8C61</span>
<span class="token keyword">const</span> entries <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;bar&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;baz&#39;</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

Object<span class="token punctuation">.</span><span class="token function">fromEntries</span><span class="token punctuation">(</span>entries<span class="token punctuation">)</span>   <span class="token comment">// { foo: &quot;bar&quot;, baz: 42 }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-\u5408\u5E76\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#_3-3-\u5408\u5E76\u5BF9\u8C61" aria-hidden="true">#</a> 3.3 \u5408\u5E76\u5BF9\u8C61</h3><ol><li><code>{...}</code></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token operator">...</span><span class="token punctuation">{</span><span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">}</span>  <span class="token comment">// {x: 1, y: 2}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li><p><code>Object.assign()</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> target <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> source <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">5</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> returnedTarget <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> source<span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// expected output: Object { a: 1, b: 4, c: 5 }</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>returnedTarget<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// expected output: Object { a: 1, b: 4, c: 5 }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token comment">// {x: 1, y: 2}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-4-\u5BF9\u8C61\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#_3-4-\u5BF9\u8C61\u62F7\u8D1D" aria-hidden="true">#</a> 3.4 \u5BF9\u8C61\u62F7\u8D1D</h3><h4 id="_1-\u6D45\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#_1-\u6D45\u62F7\u8D1D" aria-hidden="true">#</a> 1. \u6D45\u62F7\u8D1D</h4><ol><li><code>{...obj}</code></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">}</span>  <span class="token comment">// {x: 1}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li><code>Objcet.assign()</code></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">y</span> <span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">}</span>  <span class="token comment">// {x: 1, y: 2}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-\u6DF1\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#_2-\u6DF1\u62F7\u8D1D" aria-hidden="true">#</a> 2. \u6DF1\u62F7\u8D1D</h4><ol><li><code>JOSN.stringify()/JSON.parse()</code></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// {a: 1, b: {x: 3}}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol><li><code>\u9012\u5F52\u62F7\u8D1D</code></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">deepClone</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> copy <span class="token operator">=</span> obj <span class="token keyword">instanceof</span> <span class="token class-name">Array</span> <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            copy<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">?</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">:</span> obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> copy
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,164);function J(T,P){const a=l("ExternalLinkIcon");return o(),c("div",null,[u,n("p",null,[n("strong",null,[r,n("a",k,[d,e(a)])])]),m,v,n("table",null,[b,n("tbody",null,[h,n("tr",null,[g,n("td",f,[y,n("a",j,[x,e(a)]),_,w,q,N,O,S,E,F,A,I,M])]),z,B,V])]),C])}var G=p(i,[["render",J],["__file","JS\u5E38\u7528\u6570\u636E\u5904\u7406.html.vue"]]);export{G as default};
