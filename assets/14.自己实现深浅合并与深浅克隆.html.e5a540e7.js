import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";import{o,c,b as n,a as p,e as t,d as s,r as l}from"./app.a63c222e.js";const i={},u=t(`<h1 id="\u81EA\u5DF1\u5B9E\u73B0\u6DF1\u6D45\u5408\u5E76\u4E0E\u6DF1\u6D45\u514B\u9686" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5DF1\u5B9E\u73B0\u6DF1\u6D45\u5408\u5E76\u4E0E\u6DF1\u6D45\u514B\u9686" aria-hidden="true">#</a> \u81EA\u5DF1\u5B9E\u73B0\u6DF1\u6D45\u5408\u5E76\u4E0E\u6DF1\u6D45\u514B\u9686</h1><h2 id="_1-\u5148\u770B\u770Bjquery\u4E2D\u7684extend\u5408\u5E76" tabindex="-1"><a class="header-anchor" href="#_1-\u5148\u770B\u770Bjquery\u4E2D\u7684extend\u5408\u5E76" aria-hidden="true">#</a> 1.\u5148\u770B\u770BjQuery\u4E2D\u7684extend\u5408\u5E76</h2><h3 id="\u8BED\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u8BED\u6CD5" aria-hidden="true">#</a> \u8BED\u6CD5</h3><p><em>$</em>.extend( target [, object1 ] [, objectN ] )</p><p>\u6307\u793A\u662F\u5426\u6DF1\u5EA6\u5408\u5E76</p><p><em>$</em>.extend( [deep ], target, object1 [, objectN ] )</p><p>**<em><strong>\u8B66\u544A: \u4E0D\u652F\u6301\u7B2C\u4E00\u4E2A\u53C2\u6570\u4F20\u9012 false \u3002</strong></em></p><p><em><strong>\u5982\u679C\u53EA\u4E3A$.extend()\u6307\u5B9A\u4E86\u4E00\u4E2A\u53C2\u6570\uFF0C\u5219\u610F\u5473\u7740\u53C2\u6570target\u88AB\u7701\u7565\u3002\u6B64\u65F6\uFF0Ctarget\u5C31\u662FjQuery\u5BF9\u8C61\u672C\u8EAB\u3002\u901A\u8FC7\u8FD9\u79CD\u65B9\u5F0F\uFF0C\u6211\u4EEC\u53EF\u4EE5\u4E3A\u5168\u5C40\u5BF9\u8C61jQuery\u6DFB\u52A0\u65B0\u7684\u51FD\u6570\u3002</strong></em></p><table><thead><tr><th style="text-align:left;">\u53C2\u6570</th><th style="text-align:left;">\u63CF\u8FF0</th></tr></thead><tbody><tr><td style="text-align:left;"><em>deep</em></td><td style="text-align:left;">\u53EF\u9009\u3002 Boolean\u7C7B\u578B \u6307\u793A\u662F\u5426\u6DF1\u5EA6\u5408\u5E76\u5BF9\u8C61\uFF0C\u9ED8\u8BA4\u4E3Afalse\u3002\u5982\u679C\u8BE5\u503C\u4E3Atrue\uFF0C\u4E14\u591A\u4E2A\u5BF9\u8C61\u7684\u67D0\u4E2A\u540C\u540D\u5C5E\u6027\u4E5F\u90FD\u662F\u5BF9\u8C61\uFF0C\u5219\u8BE5&quot;\u5C5E\u6027\u5BF9\u8C61&quot;\u7684\u5C5E\u6027\u4E5F\u5C06\u8FDB\u884C\u5408\u5E76\u3002</td></tr><tr><td style="text-align:left;"><em>target</em></td><td style="text-align:left;">Object\u7C7B\u578B \u76EE\u6807\u5BF9\u8C61\uFF0C\u5176\u4ED6\u5BF9\u8C61\u7684\u6210\u5458\u5C5E\u6027\u5C06\u88AB\u9644\u52A0\u5230\u8BE5\u5BF9\u8C61\u4E0A\u3002</td></tr><tr><td style="text-align:left;"><em>object1</em></td><td style="text-align:left;">\u53EF\u9009\u3002 Object\u7C7B\u578B \u7B2C\u4E00\u4E2A\u88AB\u5408\u5E76\u7684\u5BF9\u8C61\u3002</td></tr><tr><td style="text-align:left;"><em>objectN</em></td><td style="text-align:left;">\u53EF\u9009\u3002 Object\u7C7B\u578B \u7B2CN\u4E2A\u88AB\u5408\u5E76\u7684\u5BF9\u8C61\u3002</td></tr></tbody></table><p>\u51E0\u79CD\u5E38\u89C1\u7528\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>$<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token constant">AA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>  <span class="token comment">//\u628AAA\u6269\u5C55\u5230$\u7684\u9759\u6001\u79C1\u6709\u5C5E\u6027\u4E0A</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

$<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>obj1<span class="token punctuation">,</span>obj2<span class="token punctuation">,</span>obj3<span class="token punctuation">)</span> 
<span class="token comment">//\u6D45\u5408\u5E76 obj2\u66FF\u4EE3\u4E86obj1 ,obj3\u66FF\u4EE3\u4E86obj1=&gt;\u6700\u540E\u8FD4\u56DEobj1</span>

$<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span>obj1<span class="token punctuation">,</span>obj2<span class="token punctuation">)</span> <span class="token comment">//\u5B9E\u73B0\u591A\u4E2A\u5BF9\u8C61\u7684\u6DF1\u5408\u5E76</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-\u6DF1\u6D45\u5408\u5E76\u7684\u5B9E\u73B0\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2-\u6DF1\u6D45\u5408\u5E76\u7684\u5B9E\u73B0\u65B9\u6CD5" aria-hidden="true">#</a> 2.\u6DF1\u6D45\u5408\u5E76\u7684\u5B9E\u73B0\u65B9\u6CD5</h2><h3 id="_1-object-assign-obj1-obj2-\u6D45\u5408\u5E76" tabindex="-1"><a class="header-anchor" href="#_1-object-assign-obj1-obj2-\u6D45\u5408\u5E76" aria-hidden="true">#</a> 1.Object.assign(obj1,obj2)\u6D45\u5408\u5E76</h3>`,13),r=n("strong",null,[n("code",null,"Object.assign()")],-1),k=s(" \u65B9\u6CD5\u5C06\u6240\u6709"),d={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable",target:"_blank",rel:"noopener noreferrer"},v=s("\u53EF\u679A\u4E3E"),m=s("\uFF08"),b=n("code",null,"Object.propertyIsEnumerable()",-1),y=s(" \u8FD4\u56DE true\uFF09\u548C"),g={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty",target:"_blank",rel:"noopener noreferrer"},f=s("\u81EA\u6709"),w=s("\uFF08"),j=n("code",null,"Object.hasOwnProperty()",-1),h=s(" \u8FD4\u56DE true\uFF09\u5C5E\u6027\u4ECE\u4E00\u4E2A\u6216\u591A\u4E2A\u6E90\u5BF9\u8C61\u590D\u5236\u5230\u76EE\u6807\u5BF9\u8C61\uFF0C\u8FD4\u56DE\u4FEE\u6539\u540E\u7684\u5BF9\u8C61\u3002"),x=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token operator">...</span>sources<span class="token punctuation">)</span>

<span class="token keyword">const</span> target <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> source <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">5</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> returnedTarget <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> source<span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// expected output: Object { a: 1, b: 4, c: 5 }</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>returnedTarget<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// expected output: Object { a: 1, b: 4, c: 5 }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u6269\u5C55\u8FD0\u7B97\u7B26\u6D45\u5408\u5E76" tabindex="-1"><a class="header-anchor" href="#_2-\u6269\u5C55\u8FD0\u7B97\u7B26\u6D45\u5408\u5E76" aria-hidden="true">#</a> 2.\u6269\u5C55\u8FD0\u7B97\u7B26\u6D45\u5408\u5E76</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> obj<span class="token operator">=</span><span class="token punctuation">{</span>
	<span class="token operator">...</span>obj1<span class="token punctuation">,</span>
	<span class="token operator">...</span>obj2
<span class="token punctuation">}</span>
<span class="token comment">//\u7F3A\u70B9\u662F\u6570\u7EC4\u4E0D\u884C</span>
<span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token operator">...</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token comment">/*let arr=[...[1,2],...[3,4]];console.log(arr)
[1, 2, 3, 4]*/</span>

<span class="token keyword">let</span> arr1<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> arr2<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>arr1<span class="token punctuation">,</span>arr2<span class="token punctuation">)</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>arr1<span class="token punctuation">,</span><span class="token operator">...</span>arr2<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-\u8BE6\u89E3jquery\u662F\u548B\u5B9E\u73B0\u7684" tabindex="-1"><a class="header-anchor" href="#_3-\u8BE6\u89E3jquery\u662F\u548B\u5B9E\u73B0\u7684" aria-hidden="true">#</a> 3.\u8BE6\u89E3jQuery\u662F\u548B\u5B9E\u73B0\u7684</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/*
 * 1.\u628A\u7528\u6237\u81EA\u5B9A\u4E49\u7684\u65B9\u6CD5\u6269\u5C55\u5230 jQuery/jQuery.fn \u4E0A
 *   + \u4E5F\u662F\u5408\u5E76\uFF1A\u628A\u81EA\u5DF1\u4F20\u9012\u8FDB\u6765\u5BF9\u8C61\u4E2D\u7684\u65B9\u6CD5\u5408\u5E76\u5230 $/$.fn \u4E0A
 * 2.\u5B9E\u73B0\u4E24\u4E2A\u53CA\u591A\u4E2A\u5BF9\u8C61\u7684\u5408\u5E76\u300C\u6D45\u6BD4\u8F83\u8FDB\u884C\u6D45\u5408\u5E76 &amp;&amp; \u6DF1\u6BD4\u8F83\u8FDB\u884C\u6DF1\u5EA6\u5408\u5E76\u300D
 *   + \u7C7B\u4F3C\u4E8EObject.assign
 */</span>
<span class="token comment">// $/$.fn.extend({...})</span>
<span class="token comment">// $.extend(true,{...})</span>
<span class="token comment">// $.extend({}, obj1, obj2)</span>
<span class="token comment">// $.extend(true, {}, obj1, obj2)</span>
jQuery<span class="token punctuation">.</span>extend <span class="token operator">=</span> jQuery<span class="token punctuation">.</span>fn<span class="token punctuation">.</span><span class="token function-variable function">extend</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> options<span class="token punctuation">,</span> name<span class="token punctuation">,</span> src<span class="token punctuation">,</span> copy<span class="token punctuation">,</span> copyIsArray<span class="token punctuation">,</span> clone<span class="token punctuation">,</span>
        target <span class="token operator">=</span> arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>
        length <span class="token operator">=</span> arguments<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
        deep <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> target <span class="token operator">===</span> <span class="token string">&quot;boolean&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        deep <span class="token operator">=</span> target<span class="token punctuation">;</span>
        target <span class="token operator">=</span> arguments<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
        i<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token comment">// deep-&gt;\u5E03\u5C14</span>
        <span class="token comment">// target-&gt;\u4F20\u9012\u7684\u7B2C\u4E00\u4E2A\u5BF9\u8C61</span>
        <span class="token comment">// i-&gt;\u5BF9\u5E94\u7684\u662F\u7B2C\u4E8C\u4E2A\u4F20\u9012\u8FDB\u6765\u5BF9\u8C61\u7684\u7D22\u5F15\u300C\u53EF\u80FD\u4E0D\u5B58\u5728\u300D</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> target <span class="token operator">!==</span> <span class="token string">&quot;object&quot;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isFunction</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span> target <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token comment">// \u6CA1\u6709\u4F20\u9012\u7B2C\u4E8C\u4E2A\u5BF9\u8C61\uFF1A\u53EA\u662F\u60F3\u628A\u7B2C\u4E00\u4E2A\u4F20\u9012\u5BF9\u8C61\u4E2D\u7684\u5185\u5BB9\u5408\u5E76\u5230$/$.fn\u4E0A</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        target <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span> <span class="token comment">//-&gt; target=$/$.fn</span>
        i<span class="token operator">--</span><span class="token punctuation">;</span> <span class="token comment">//-&gt;\u6B64\u65F6i\u7D22\u5F15\u5BF9\u5E94\u7684\u662F\u4F20\u9012\u7684\u90A3\u4E2A\u5BF9\u8C61</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// target\u4EE3\u8868\u6700\u7EC8\u8981\u88AB\u66FF\u6362\u7684\u5BF9\u8C61\uFF0C\u6700\u540E\u8FD4\u56DE\u7684\u662Ftarget</span>
    <span class="token comment">// \u63A5\u4E0B\u6765\u7684\u5FAA\u73AF\u5C31\u662F\u62FF\u5230\u5269\u4F59\u4F20\u9012\u7684\u5BF9\u8C61\u300C\u53EF\u80FD\u662F\u4E00\u4E2A\u4E5F\u53EF\u80FD\u662F\u591A\u4E2A\u300D,\u62FF\u4ED6\u4EEC\u4F9D\u6B21\u66FF\u6362target</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// options:\u6BCF\u4E00\u8F6E\u5FAA\u73AF\u62FF\u5230\u7684\u5269\u4F59\u7684\u5176\u4E2D\u4E00\u4E2A\u66FF\u6362target\u7684\u5BF9\u8C61</span>
        options <span class="token operator">=</span> arguments<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>options <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span>name <span class="token keyword">in</span> options<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// copy\u83B7\u53D6\u5BF9\u8C61\u4E2D\u7684\u6BCF\u4E00\u9879\uFF08\u6211\u4EEC\u628A\u8FD9\u4E9B\u9879\u66FF\u6362target\u4E2D\u540C\u540D\u8FD9\u4E00\u9879\uFF09</span>
            copy <span class="token operator">=</span> options<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">;</span>
            copyIsArray <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>copy<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u653E\u7F6E\u5BF9\u8C61\u5957\u5A03\uFF0C\u4F1A\u5F62\u6210\u6B7B\u9012\u5F52</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">===</span> copy<span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>deep <span class="token operator">&amp;&amp;</span> copy <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>jQuery<span class="token punctuation">.</span><span class="token function">isPlainObject</span><span class="token punctuation">(</span>copy<span class="token punctuation">)</span> <span class="token operator">||</span> copyIsArray<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u6DF1\u5408\u5E76 options\u4E2D\u7684\u8FD9\u4E00\u9879\u9700\u8981\u662F\u7EAF\u7CB9\u7684\u5BF9\u8C61\u6216\u8005\u662F\u6570\u7EC4\uFF0C\u6211\u4EEC\u624D\u6709\u5FC5\u8981\u548Ctarget\u4E2D\u5BF9\u5E94\u8FD9\u4E00\u9879\u8FDB\u884C\u6DF1\u5EA6\u5BF9\u6BD4\uFF0C\u4ECE\u800C\u5B9E\u73B0\u6DF1\u5EA6\u5408\u5E76\uFF0C\u5426\u5219\u76F4\u63A5\u7528options\u4E2D\u7684\u8FD9\u4E00\u9879\u66FF\u6362target\u4E2D\u8FD9\u4E00\u9879\u5373\u53EF</span>
                <span class="token comment">//   options\u4E2D\u7684\u8FD9\u4E00\u9879copy  \u5BF9\u8C61/\u6570\u7EC4</span>
                <span class="token comment">//   src\u4EE3\u8868\u7684\u662Ftarget\u4E2D\u7684\u8FD9\u4E00\u9879\u300Cclone\u300D</span>
                src <span class="token operator">=</span> target<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>copyIsArray <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// \u5982\u679Ccopy\u662F\u4E00\u4E2A\u6570\u7EC4\uFF0C\u4F46\u662Fsrc\u4E0D\u662F\uFF0Cclone\u662F\u4E00\u4E2A\u6570\u7EC4</span>
                    clone <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>copyIsArray <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>jQuery<span class="token punctuation">.</span><span class="token function">isPlainObject</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// \u5982\u679Ccopy\u662F\u4E00\u4E2A\u7EAF\u7CB9\u5BF9\u8C61\uFF0C\u4F46\u662Fsrc\u4E0D\u662F\uFF0C\u8BA9clone\u7B49\u4E8E\u7A7A\u5BF9\u8C61</span>
                    clone <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    clone <span class="token operator">=</span> src<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                copyIsArray <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token comment">// \u57FA\u4E8E\u9012\u5F52\u7684\u65B9\u5F0F\u5B9E\u73B0\u5F53\u524D\u9879\u7684\u6DF1\u5EA6\u6BD4\u8F83\u548C\u6DF1\u5EA6\u5408\u5E76</span>
                target<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> jQuery<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>deep<span class="token punctuation">,</span> clone<span class="token punctuation">,</span> copy<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>copy <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u6D45\u5408\u5E76</span>
                target<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> copy<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> target<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span> 

<span class="token keyword">let</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;/api/list&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/json&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">cache</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token literal-property property">arr</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
obj1<span class="token punctuation">.</span>obj1 <span class="token operator">=</span> obj1<span class="token punctuation">;</span>

<span class="token keyword">let</span> obj2 <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">params</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">lx</span><span class="token operator">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&#39;X-Token&#39;</span><span class="token operator">:</span> <span class="token string">&#39;AFED4567FG&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">arr</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">obj1</span><span class="token operator">:</span> obj1
<span class="token punctuation">}</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>_<span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> obj1<span class="token punctuation">,</span> obj2<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token comment">// \u628Aobj2\u5408\u5E76\u5230obj1\u4E2D\uFF0C\u8BA9obj2\u4E2D\u7684\u5185\u5BB9\u66FF\u6362obj1\u4E2D\u7684\u5185\u5BB9\uFF0C\u6700\u540E\u8FD4\u56DEobj1\u300Cobj1\u4F1A\u53D1\u751F\u6539\u53D8\u300D \u201C\u6D45\u5408\u5E76\u201D</span>
<span class="token comment">// console.log(Object.assign(obj1, obj2));</span>
<span class="token comment">// console.log(Object.assign({}, obj1, obj2));  //=&gt;\u8FD9\u6837\u5904\u7406\u6700\u540E\u8FD4\u56DE\u65B0\u7684\u5BF9\u8C61\uFF0Cobj1/obj2\u90FD\u6CA1\u6709\u6539\u53D8</span>

<span class="token comment">/* 
// \u628AjQuery\u5F53\u505A\u5BF9\u8C61\uFF0C\u6269\u5C55\u5230\u5176\u4E0A\u9762\u7684\u79C1\u6709\u7684\u5C5E\u6027\u548C\u65B9\u6CD5\u300C\u5B8C\u5584\u7C7B\u5E93\u300D
$.extend({
    xxx: function () {
        console.log(&#39;xxx&#39;);
    }
});
$.xxx();

// \u5411\u5176\u539F\u578B\u4E0A\u6269\u5C55\u5C5E\u6027\u548C\u65B9\u6CD5\uFF0C\u4F9B\u5176\u5B9E\u4F8B\u201C\u57FA\u4E8EJQ\u9009\u62E9\u5668\u83B7\u53D6\u7684\u7ED3\u679C\u201D\u8C03\u53D6\u4F7F\u7528 \u300C\u5199JQ\u63D2\u4EF6\u300D
$.fn.extend({
    xxx() {
        console.log(&#39;xxx&#39;);
    }
});
$(&#39;.box&#39;).xxx(); 
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-\u81EA\u5DF1\u4EFF\u7167jquery\u5B9E\u73B0\u4E00\u4E2A\u5408\u5E76\u65B9\u6CD5merge" tabindex="-1"><a class="header-anchor" href="#_3-\u81EA\u5DF1\u4EFF\u7167jquery\u5B9E\u73B0\u4E00\u4E2A\u5408\u5E76\u65B9\u6CD5merge" aria-hidden="true">#</a> 3.\u81EA\u5DF1\u4EFF\u7167jQuery\u5B9E\u73B0\u4E00\u4E2A\u5408\u5E76\u65B9\u6CD5merge</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token function-variable function">isPlainObject</span><span class="token operator">=</span><span class="token keyword">function</span> <span class="token function">isPlainObject</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>obj <span class="token operator">&amp;&amp;</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token operator">!==</span><span class="token string">&quot;[object Object]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">let</span> proto<span class="token operator">=</span>Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>proto<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">//Object.create(null) \u4E0D\u662F\u539F\u751F\u5BF9\u8C61</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> proto<span class="token punctuation">.</span>constructor <span class="token operator">==</span> Object<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// console.log(isPlainObject({})) //true</span>
<span class="token comment">// console.log(isPlainObject(1))  //false</span>
<span class="token comment">// console.log(isPlainObject(()=&gt;{})) //false</span>
<span class="token comment">// console.log(isPlainObject(Object.create(null)))//false</span>

<span class="token keyword">var</span> <span class="token function-variable function">isFunction</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">isFunction</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token comment">// Support: Chrome &lt;=57, Firefox &lt;=52</span>
    <span class="token comment">// In some browsers, typeof returns &quot;function&quot; for HTML &lt;object&gt; elements</span>
    <span class="token comment">// (i.e., \`typeof document.createElement( &quot;object&quot; ) === &quot;function&quot;\`).</span>
    <span class="token comment">// We don&#39;t want to classify *any* DOM node as a function.</span>
    <span class="token keyword">return</span> <span class="token keyword">typeof</span> obj <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> obj<span class="token punctuation">.</span>nodeType <span class="token operator">!==</span> <span class="token string">&quot;number&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> <span class="token function-variable function">merge</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>params</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> deep<span class="token punctuation">,</span>
        target<span class="token punctuation">,</span>
        len <span class="token operator">=</span> params<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
        i<span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>len <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u53EA\u6709\u4E00\u4E2A\u53C2\u6570</span>
        deep <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        target <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
        i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>len<span class="token operator">==</span><span class="token number">2</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> params<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">&#39;boolean&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">//2\u4E2A\u53C2\u6570 \u4E00\u4E2Adeep \u4E00\u4E2A src</span>
        deep<span class="token operator">=</span>params<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        target<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">;</span>
        i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u6709\u591A\u4E2A\u53C2\u6570</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> params<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;boolean&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//\u6709deep</span>
            deep <span class="token operator">=</span> params<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            target <span class="token operator">=</span> params<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span><span class="token punctuation">{</span>
            <span class="token comment">//\u65E0deep</span>
            deep<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>
            target<span class="token operator">=</span>params<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//\u56E0\u4E3A\u662F\u5408\u5E76\u5BF9\u8C61 target\u5FC5\u987B\u662F\u5BF9\u8C61</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>target<span class="token operator">===</span><span class="token keyword">null</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> target <span class="token operator">!==</span><span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isFunction</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> target<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span>

    <span class="token keyword">let</span> src<span class="token punctuation">,</span>
        newAttr<span class="token punctuation">,</span>
        oldAttr<span class="token punctuation">,</span>
        newAttrType<span class="token punctuation">,</span>
        copyIsArray<span class="token punctuation">,</span>
        clone<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>len<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        src<span class="token operator">=</span>params<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>src<span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> name <span class="token keyword">in</span> src<span class="token punctuation">)</span><span class="token punctuation">{</span>
            oldAttr<span class="token operator">=</span>target<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">;</span>
            newAttr<span class="token operator">=</span>src<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">;</span>
            newAttrType<span class="token operator">=</span><span class="token keyword">typeof</span> newAttr<span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>deep<span class="token operator">==</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token comment">//\u6D45\u5408\u5E76\u76F4\u63A5\u66FF\u6362</span>
                target<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token operator">=</span>newAttr<span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>newAttrType<span class="token operator">!=</span><span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> newAttrType<span class="token operator">!=</span><span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token comment">//\u6DF1\u5408\u5E76 \u4F46\u662FnewAttr\u662F\u4E2A\u539F\u59CB\u503C</span>
                target<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token operator">=</span>newAttr<span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                copyIsArray <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>newAttr<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>copyIsArray <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>oldAttr<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// \u5982\u679CnewAttr\u662F\u4E00\u4E2A\u6570\u7EC4\uFF0C\u4F46\u662FoldAttr\u4E0D\u662F\uFF0Cclone\u662F\u4E00\u4E2A\u6570\u7EC4</span>
                    clone <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>copyIsArray <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isPlainObject</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// \u5982\u679CnewAttr\u662F\u4E00\u4E2A\u7EAF\u7CB9\u5BF9\u8C61\uFF0C\u4F46\u662FoldAttr\u4E0D\u662F\uFF0C\u8BA9clone\u7B49\u4E8E\u7A7A\u5BF9\u8C61</span>
                    clone <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    clone <span class="token operator">=</span> oldAttr<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                target<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">merge</span><span class="token punctuation">(</span>deep<span class="token punctuation">,</span>clone<span class="token punctuation">,</span>newAttr<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> target
<span class="token punctuation">}</span>

<span class="token keyword">var</span> object1 <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">apple</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token literal-property property">banana</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">weight</span><span class="token operator">:</span> <span class="token number">52</span><span class="token punctuation">,</span> <span class="token literal-property property">price</span><span class="token operator">:</span> <span class="token number">100</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">cherry</span><span class="token operator">:</span> <span class="token number">97</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> object2 <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">banana</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">price</span><span class="token operator">:</span> <span class="token number">200</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">durian</span><span class="token operator">:</span> <span class="token number">100</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span> 
<span class="token comment">// \u5C06 object2 \u9012\u5F52\u5408\u5E76\u5230 object1\u4E2D</span>
<span class="token function">merge</span><span class="token punctuation">(</span> <span class="token boolean">true</span><span class="token punctuation">,</span> object1<span class="token punctuation">,</span> object2 <span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>object1<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-\u5B58\u5728\u7684\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#_1-\u5B58\u5728\u7684\u95EE\u9898" aria-hidden="true">#</a> 1.\u5B58\u5728\u7684\u95EE\u9898</h3><p>\u5BF9\u8C61\u91CC\u5B58\u5728\u9012\u5F52\u548B\u529E\uFF1F</p><p>\u5982</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>
<span class="token keyword">let</span> obj<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">let</span> obj1<span class="token operator">=</span><span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
obj1<span class="token punctuation">.</span>child<span class="token operator">=</span>obj1
<span class="token comment">// \u5C06 object2 \u9012\u5F52\u5408\u5E76\u5230 object1\u4E2D</span>
<span class="token function">merge</span><span class="token punctuation">(</span> <span class="token boolean">true</span><span class="token punctuation">,</span> obj<span class="token punctuation">,</span> obj1 <span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">//\u76F4\u63A5\u62A5\u9519</span>
<span class="token comment">//\u5806\u6808\u6EA2\u51FA</span>
<span class="token comment">/*\u56E0\u4E3A\u9012\u5F52\u7684\u672C\u8D28\u662F\u51FD\u6570\u8C03\u7528\uFF0C\u800C\u51FD\u6570\u8C03\u7528\u8FC7\u7A0B\u4E2D\u4F1A\u4F7F\u7528\u6808\u6765\u4FDD\u5B58\u4E34\u65F6\u53D8\u91CF(\u6808\u4E2D\u4FDD\u5B58\u7740\u672A\u5B8C\u6210\u7684\u51FD\u6570\u8C03\u6362\u7528)\u3002\u5982\u679C\u9012\u5F52\u6C42\u89E3\u7684\u6570\u636E\u89C4\u6A21\u5F88\u5927\uFF0C\u8C03\u7528\u5C42\u6B21\u5F88\u6DF1\uFF0C\u4E00\u76F4\u538B\u5165\u6808\uFF0C\u5C31\u4F1A\u6709\u6808\u6EA2\u51FA\u7684\u98CE\u9669\u3002
VM123:28 Uncaught RangeError: Maximum call stack size exceeded
    at merge (&lt;anonymous&gt;:28:27)
    at merge (&lt;anonymous&gt;:93:30)
    at merge (&lt;anonymous&gt;:93:30)
    at merge (&lt;anonymous&gt;:93:30)
    at merge (&lt;anonymous&gt;:93:30)
    at merge (&lt;anonymous&gt;:93:30)
    at merge (&lt;anonymous&gt;:93:30)
    at merge (&lt;anonymous&gt;:93:30)
    at merge (&lt;anonymous&gt;:93:30)
    at merge (&lt;anonymous&gt;:93:30)*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u9009\u62E9\u76F4\u63A5\u7528\u4E00\u4E2Aset\u6765\u5B58\u50A8copy\u8FC7\u7684\u5BF9\u8C61\uFF0C\u78B0\u5230\u8FD9\u4E9B\u5BF9\u8C61\u76F4\u63A5\u8FD4\u56DE\uFF0C\u4E0D\u5F80\u4E0B\u9012\u5F52</p><p>set\u653E\u5728\u51FD\u6570\u4F5C\u7528\u57DF\u5916\uFF0C\u4EE5\u65B9\u4FBF\u6BCF\u6B21\u6267\u884C\u90FD\u80FD\u201C\u770B\u5230\u5B83\u201D\uFF0C\u5982\u4E0B</p>`,13),A={href:"https://imgse.com/i/vyzsBR",target:"_blank",rel:"noopener noreferrer"},_=n("img",{src:"https://s1.ax1x.com/2022/08/22/vyzsBR.png",alt:"vyzsBR.png"},null,-1),O=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">let</span> merge<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">let</span> alreadyMerged<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">debugger</span><span class="token punctuation">;</span>
        <span class="token keyword">function</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>params</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> deep<span class="token punctuation">,</span>
                target<span class="token punctuation">,</span>
                len <span class="token operator">=</span> params<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
                i<span class="token punctuation">;</span>
        
            <span class="token keyword">if</span> <span class="token punctuation">(</span>len <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">//\u53EA\u6709\u4E00\u4E2A\u53C2\u6570</span>
                deep <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                target <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
                i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>len<span class="token operator">==</span><span class="token number">2</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> params<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">&#39;boolean&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token comment">//2\u4E2A\u53C2\u6570 \u4E00\u4E2Adeep \u4E00\u4E2A src</span>
                deep<span class="token operator">=</span>params<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                target<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">;</span>
                i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">//\u6709\u591A\u4E2A\u53C2\u6570</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> params<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;boolean&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">//\u6709deep</span>
                    deep <span class="token operator">=</span> params<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                    target <span class="token operator">=</span> params<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                    i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span><span class="token punctuation">{</span>
                    <span class="token comment">//\u65E0deep</span>
                    deep<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>
                    target<span class="token operator">=</span>params<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                    i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        
            <span class="token comment">//\u56E0\u4E3A\u662F\u5408\u5E76\u5BF9\u8C61 target\u5FC5\u987B\u662F\u5BF9\u8C61</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>target<span class="token operator">===</span><span class="token keyword">null</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> target <span class="token operator">!==</span><span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isFunction</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> target<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
        
            <span class="token keyword">let</span> src<span class="token punctuation">,</span>
                newAttr<span class="token punctuation">,</span>
                oldAttr<span class="token punctuation">,</span>
                newAttrType<span class="token punctuation">,</span>
                copyIsArray<span class="token punctuation">,</span>
                clone<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>len<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                src<span class="token operator">=</span>params<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>src<span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>
        
                <span class="token keyword">if</span><span class="token punctuation">(</span>alreadyMerged<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> src<span class="token punctuation">;</span>
                <span class="token keyword">else</span> alreadyMerged<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span>
        
                <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> name <span class="token keyword">in</span> src<span class="token punctuation">)</span><span class="token punctuation">{</span>
                    oldAttr<span class="token operator">=</span>target<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">;</span>
                    newAttr<span class="token operator">=</span>src<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">;</span>
                    newAttrType<span class="token operator">=</span><span class="token keyword">typeof</span> newAttr<span class="token punctuation">;</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span>deep<span class="token operator">==</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                        <span class="token comment">//\u6D45\u5408\u5E76\u76F4\u63A5\u66FF\u6362</span>
                        target<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token operator">=</span>newAttr<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>newAttrType<span class="token operator">!=</span><span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> newAttrType<span class="token operator">!=</span><span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                        <span class="token comment">//\u6DF1\u5408\u5E76 \u4F46\u662FnewAttr\u662F\u4E2A\u539F\u59CB\u503C</span>
                        target<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token operator">=</span>newAttr<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                        copyIsArray <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>newAttr<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>copyIsArray <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>oldAttr<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token comment">// \u5982\u679CnewAttr\u662F\u4E00\u4E2A\u6570\u7EC4\uFF0C\u4F46\u662FoldAttr\u4E0D\u662F\uFF0Cclone\u662F\u4E00\u4E2A\u6570\u7EC4</span>
                            clone <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>copyIsArray <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isPlainObject</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token comment">// \u5982\u679CnewAttr\u662F\u4E00\u4E2A\u7EAF\u7CB9\u5BF9\u8C61\uFF0C\u4F46\u662FoldAttr\u4E0D\u662F\uFF0C\u8BA9clone\u7B49\u4E8E\u7A7A\u5BF9\u8C61</span>
                            clone <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                            clone <span class="token operator">=</span> oldAttr<span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                        target<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">merge</span><span class="token punctuation">(</span>deep<span class="token punctuation">,</span>clone<span class="token punctuation">,</span>newAttr<span class="token punctuation">)</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        
        
            <span class="token keyword">return</span> target
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>params</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token function">merge</span><span class="token punctuation">(</span><span class="token operator">...</span>params<span class="token punctuation">)</span>
            alreadyMerged<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u5B8C\u6574\u7248\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_2-\u5B8C\u6574\u7248\u5B9E\u73B0" aria-hidden="true">#</a> 2.\u5B8C\u6574\u7248\u5B9E\u73B0</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> $$<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token function-variable function">isPlainObject</span><span class="token operator">=</span><span class="token keyword">function</span> <span class="token function">isPlainObject</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>obj <span class="token operator">&amp;&amp;</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token operator">!==</span><span class="token string">&quot;[object Object]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token keyword">let</span> proto<span class="token operator">=</span>Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>proto<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">//Object.create(null) \u4E0D\u662F\u539F\u751F\u5BF9\u8C61</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> proto<span class="token punctuation">.</span>constructor <span class="token operator">==</span> Object<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// console.log(isPlainObject({})) //true</span>
    <span class="token comment">// console.log(isPlainObject(1))  //false</span>
    <span class="token comment">// console.log(isPlainObject(()=&gt;{})) //false</span>
    <span class="token comment">// console.log(isPlainObject(Object.create(null)))//false</span>
    
    <span class="token keyword">let</span> <span class="token function-variable function">isFunction</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">isFunction</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
        <span class="token comment">// Support: Chrome &lt;=57, Firefox &lt;=52</span>
        <span class="token comment">// In some browsers, typeof returns &quot;function&quot; for HTML &lt;object&gt; elements</span>
        <span class="token comment">// (i.e., \`typeof document.createElement( &quot;object&quot; ) === &quot;function&quot;\`).</span>
        <span class="token comment">// We don&#39;t want to classify *any* DOM node as a function.</span>
        <span class="token keyword">return</span> <span class="token keyword">typeof</span> obj <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> obj<span class="token punctuation">.</span>nodeType <span class="token operator">!==</span> <span class="token string">&quot;number&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    
    <span class="token keyword">let</span> merge<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">let</span> alreadyMerged<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">debugger</span><span class="token punctuation">;</span>
        <span class="token keyword">function</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>params</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> deep<span class="token punctuation">,</span>
                target<span class="token punctuation">,</span>
                len <span class="token operator">=</span> params<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
                i<span class="token punctuation">;</span>
        
            
    
            <span class="token keyword">if</span> <span class="token punctuation">(</span>len <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">//\u53EA\u6709\u4E00\u4E2A\u53C2\u6570</span>
                deep <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                target <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
                i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>len<span class="token operator">==</span><span class="token number">2</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> params<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">&#39;boolean&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token comment">//2\u4E2A\u53C2\u6570 \u4E00\u4E2Adeep \u4E00\u4E2A src</span>
                deep<span class="token operator">=</span>params<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                target<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">;</span>
                i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">//\u6709\u591A\u4E2A\u53C2\u6570</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> params<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;boolean&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">//\u6709deep</span>
                    deep <span class="token operator">=</span> params<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                    target <span class="token operator">=</span> params<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                    i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span><span class="token punctuation">{</span>
                    <span class="token comment">//\u65E0deep</span>
                    deep<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>
                    target<span class="token operator">=</span>params<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                    i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        
            <span class="token comment">//\u56E0\u4E3A\u662F\u5408\u5E76\u5BF9\u8C61 target\u5FC5\u987B\u662F\u5BF9\u8C61</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>target<span class="token operator">===</span><span class="token keyword">null</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> target <span class="token operator">!==</span><span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isFunction</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> target<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
        
            <span class="token keyword">let</span> src<span class="token punctuation">,</span>
                newAttr<span class="token punctuation">,</span>
                oldAttr<span class="token punctuation">,</span>
                newAttrType<span class="token punctuation">,</span>
                copyIsArray<span class="token punctuation">,</span>
                clone<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>len<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                src<span class="token operator">=</span>params<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>src<span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>
        
                <span class="token keyword">if</span><span class="token punctuation">(</span>alreadyMerged<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> src<span class="token punctuation">;</span>
                <span class="token keyword">else</span> alreadyMerged<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span>
        
                <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> name <span class="token keyword">in</span> src<span class="token punctuation">)</span><span class="token punctuation">{</span>
                    oldAttr<span class="token operator">=</span>target<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">;</span>
                    newAttr<span class="token operator">=</span>src<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">;</span>
                    newAttrType<span class="token operator">=</span><span class="token keyword">typeof</span> newAttr<span class="token punctuation">;</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span>deep<span class="token operator">==</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                        <span class="token comment">//\u6D45\u5408\u5E76\u76F4\u63A5\u66FF\u6362</span>
                        target<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token operator">=</span>newAttr<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>newAttrType<span class="token operator">!=</span><span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> newAttrType<span class="token operator">!=</span><span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                        <span class="token comment">//\u6DF1\u5408\u5E76 \u4F46\u662FnewAttr\u662F\u4E2A\u539F\u59CB\u503C</span>
                        target<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token operator">=</span>newAttr<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                        copyIsArray <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>newAttr<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>copyIsArray <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>oldAttr<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token comment">// \u5982\u679CnewAttr\u662F\u4E00\u4E2A\u6570\u7EC4\uFF0C\u4F46\u662FoldAttr\u4E0D\u662F\uFF0Cclone\u662F\u4E00\u4E2A\u6570\u7EC4</span>
                            clone <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>copyIsArray <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isPlainObject</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token comment">// \u5982\u679CnewAttr\u662F\u4E00\u4E2A\u7EAF\u7CB9\u5BF9\u8C61\uFF0C\u4F46\u662FoldAttr\u4E0D\u662F\uFF0C\u8BA9clone\u7B49\u4E8E\u7A7A\u5BF9\u8C61</span>
                            clone <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                            clone <span class="token operator">=</span> oldAttr<span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                        target<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">merge</span><span class="token punctuation">(</span>deep<span class="token punctuation">,</span>clone<span class="token punctuation">,</span>newAttr<span class="token punctuation">)</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        
        
            <span class="token keyword">return</span> target
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>params</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token function">merge</span><span class="token punctuation">(</span><span class="token operator">...</span>params<span class="token punctuation">)</span>
            alreadyMerged<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>


    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        isPlainObject<span class="token punctuation">,</span>
        isFunction<span class="token punctuation">,</span>
        merge
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">var</span> obj<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">var</span> obj1<span class="token operator">=</span><span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
obj1<span class="token punctuation">.</span>child<span class="token operator">=</span>obj1
<span class="token comment">// \u5C06 object2 \u9012\u5F52\u5408\u5E76\u5230 object1\u4E2D</span>
$$<span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span> <span class="token boolean">true</span><span class="token punctuation">,</span> obj<span class="token punctuation">,</span> obj1 <span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
$$<span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
$$<span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>obj <span class="token punctuation">,</span>obj1 <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-\u6DF1\u6D45\u514B\u9686\u7406\u89E3" tabindex="-1"><a class="header-anchor" href="#_4-\u6DF1\u6D45\u514B\u9686\u7406\u89E3" aria-hidden="true">#</a> 4.\u6DF1\u6D45\u514B\u9686\u7406\u89E3</h2><p>\u9898\u76EE\uFF1A\u514B\u9686\u4EE5\u4E0B\u8FD9\u4E2A\u5BF9\u8C61</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;/api/list&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">cache</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;KEY&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">big</span><span class="token operator">:</span> <span class="token number">10n</span><span class="token punctuation">,</span>
    <span class="token literal-property property">n</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token literal-property property">u</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
    <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/json&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">post</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&#39;X-Token&#39;</span><span class="token operator">:</span> <span class="token string">&#39;xxx&#39;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">arr</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">reg</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\d+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
    <span class="token literal-property property">time</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function-variable function">fn</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">err</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;xxx&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
obj<span class="token punctuation">.</span>obj <span class="token operator">=</span> obj<span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-\u6D45\u514B\u9686" tabindex="-1"><a class="header-anchor" href="#_1-\u6D45\u514B\u9686" aria-hidden="true">#</a> 1.\u6D45\u514B\u9686</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> obj2<span class="token operator">=</span><span class="token punctuation">{</span><span class="token operator">...</span>obj<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2-\u6DF1\u514B\u9686" tabindex="-1"><a class="header-anchor" href="#_2-\u6DF1\u514B\u9686" aria-hidden="true">#</a> 2.\u6DF1\u514B\u9686</h3><h4 id="_1-\u5B9E\u73B0\u6DF1\u514B\u9686\u6700\u4FBF\u6377\u529E\u6CD5" tabindex="-1"><a class="header-anchor" href="#_1-\u5B9E\u73B0\u6DF1\u514B\u9686\u6700\u4FBF\u6377\u529E\u6CD5" aria-hidden="true">#</a> 1.\u5B9E\u73B0\u6DF1\u514B\u9686\u6700\u4FBF\u6377\u529E\u6CD5</h4><p>\u5B9E\u73B0\u6DF1\u514B\u9686\u6700\u4FBF\u6377\u529E\u6CD5 JSON.stringify:\u628A\u5BF9\u8C61/\u6570\u7EC4\u53D8\u4E3AJSON\u5B57\u7B26\u4E32 JSON.parse:\u628AJSON\u5B57\u7B26\u4E32\u53D8\u4E3A\u5BF9\u8C61/\u6570\u7EC4\u300C\u6D4F\u89C8\u5668\u9700\u8981\u91CD\u65B0\u5F00\u8F9F\u6240\u6709\u5185\u5B58\u300D \u3010\u5F0A\u7AEF\u3011</p><ul><li>\u4E0D\u5141\u8BB8\u51FA\u73B0\u5957\u5A03\u64CD\u4F5C</li><li>\u5C5E\u6027\u503C\u4E0D\u80FD\u662FBigInt Uncaught TypeError: Do not know how to serialize a BigInt</li><li>\u4E22\u5931\u4E00\u4E9B\u5185\u5BB9\uFF1A\u53EA\u8981\u5C5E\u6027\u503C\u662F symbol/undefined/function \u8FD9\u4E9B\u7C7B\u578B\u7684</li><li>\u8FD8\u6709\u4FE1\u606F\u4E0D\u51C6\u786E\u7684\uFF0C\u4F8B\u5982\uFF1A\u6B63\u5219-&gt;\u7A7A\u5BF9\u8C61 Error\u5BF9\u8C61-&gt;\u7A7A\u5BF9\u8C61 \u65E5\u671F\u5BF9\u8C61-&gt;\u5B57\u7B26\u4E32 ...</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> newObj <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>Qs.stringify:\u628A\u5BF9\u8C61\u53D8\u4E3Aurlencoded\u683C\u5F0F\u5B57\u7B26\u4E32 \u201Cxxx=xxx&amp;xxx=xxx\u201D</strong></p><p><strong>Qs.parse:\u628Aurlencoded\u683C\u5F0F\u5B57\u7B26\u4E32\u53D8\u4E3A\u5BF9\u8C61</strong></p><p><strong>\u3010\u4E5F\u5B58\u5728\u5F88\u591A\u95EE\u9898\u3011</strong></p><p><strong>console.log(Qs.parse(Qs.stringify(obj)));</strong></p><h4 id="_2-\u6DF1\u514B\u9686\u624B\u5199\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_2-\u6DF1\u514B\u9686\u624B\u5199\u5B9E\u73B0" aria-hidden="true">#</a> 2.\u6DF1\u514B\u9686\u624B\u5199\u5B9E\u73B0</h4><p>\u89E3\u51B3\u4E86\u5BF9\u8C61\u7684\u95EE\u9898\uFF0C\u5141\u8BB8\u51FA\u73B0\u5957\u5A03\u64CD\u4F5C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;/api/list&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">cache</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;KEY&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">big</span><span class="token operator">:</span> <span class="token number">10n</span><span class="token punctuation">,</span>
    <span class="token literal-property property">n</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token literal-property property">u</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
    <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/json&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">post</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&#39;X-Token&#39;</span><span class="token operator">:</span> <span class="token string">&#39;xxx&#39;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">arr</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">reg</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\d+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
    <span class="token literal-property property">time</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function-variable function">fn</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">err</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;xxx&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
obj<span class="token punctuation">.</span>obj <span class="token operator">=</span> obj<span class="token punctuation">;</span>

<span class="token keyword">let</span> $$ <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token comment">// \u4E13\u95E8\u8FDB\u884C\u6570\u636E\u7C7B\u578B\u68C0\u6D4B\u7684\u529E\u6CD5 </span>
    <span class="token keyword">var</span> <span class="token function-variable function">toType</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">toType</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>obj <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> obj <span class="token operator">+</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
        <span class="token comment">//\u539F\u59CB\u503C</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> obj <span class="token operator">!==</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> obj <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">typeof</span> obj<span class="token punctuation">;</span>
        <span class="token keyword">var</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\[object ([0-9A-Za-z]+)\\]$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
            value <span class="token operator">=</span> reg<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> value<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u68C0\u6D4B\u662F\u5426\u4E3A\u7EAF\u7CB9\u7684\u5BF9\u8C61\uFF1A\u76F4\u5C5E\u7C7B\u662FObject \u6216\u8005 obj.__proto__===Object.prototype\uFF08\u6570\u7EC4/\u6B63\u5219\u7B49\u90FD\u4E0D\u662F\uFF09</span>
    <span class="token keyword">var</span> <span class="token function-variable function">isPlainObject</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">isPlainObject</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> proto<span class="token punctuation">,</span> Ctor<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>obj <span class="token operator">||</span> <span class="token function">toType</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token string">&quot;object&quot;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        proto <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>proto<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        Ctor <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>proto<span class="token punctuation">,</span> <span class="token string">&quot;constructor&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> proto<span class="token punctuation">.</span>constructor<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">typeof</span> Ctor <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>Ctor<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>Object<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>



    <span class="token keyword">let</span> clone <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> treated <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">function</span> <span class="token function">clone</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>params</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token keyword">let</span> len <span class="token operator">=</span> arguments<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
            <span class="token keyword">let</span> result<span class="token punctuation">;</span>
            <span class="token keyword">let</span> deep<span class="token punctuation">,</span> target<span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>len <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                deep <span class="token operator">=</span> params<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                    target <span class="token operator">=</span> params<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                deep <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                target <span class="token operator">=</span> params<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>treated<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> target<span class="token punctuation">;</span>
            <span class="token keyword">else</span> treated<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//\u6821\u9A8C\u7C7B\u578B</span>
            <span class="token keyword">let</span> isArray <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">,</span>
                isObject <span class="token operator">=</span> <span class="token function">isPlainObject</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">let</span> keys<span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> target<span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>isArray <span class="token operator">||</span> isObject<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">//\u6570\u7EC4\u6216\u662F\u7EAF\u7CB9\u5BF9\u8C61</span>
                result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">target<span class="token punctuation">.</span>constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                keys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyNames</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">getOwnPropertySymbols</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span>

                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">of</span> keys<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>deep <span class="token operator">==</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token comment">//\u6D45\u62F7\u8D1D</span>
                        result<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> target<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                        <span class="token comment">//\u6DF1\u62F7\u8D1D</span>
                        result<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">clone</span><span class="token punctuation">(</span>deep<span class="token punctuation">,</span> target<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>

                <span class="token keyword">return</span> result<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> target <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">//Number /error/\u81EA\u5B9A\u4E49\u5BF9\u8C61\u7B49</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">target<span class="token punctuation">.</span>constructor</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> target
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">//\u539F\u59CB\u503C \u548C \u51FD\u6570 Symol</span>
                <span class="token keyword">return</span> target
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>params</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">clone</span><span class="token punctuation">(</span><span class="token operator">...</span>params<span class="token punctuation">)</span>
            treated<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        clone
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

$$<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> obj<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,20);function q($,T){const a=l("ExternalLinkIcon");return o(),c("div",null,[u,n("p",null,[r,k,n("a",d,[v,p(a)]),m,b,y,n("a",g,[f,p(a)]),w,j,h]),x,n("p",null,[n("a",A,[_,p(a)])]),O])}var S=e(i,[["render",q],["__file","14.\u81EA\u5DF1\u5B9E\u73B0\u6DF1\u6D45\u5408\u5E76\u4E0E\u6DF1\u6D45\u514B\u9686.html.vue"]]);export{S as default};
