import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{o,c,b as n,a as t,e,d as s,r as i}from"./app.a63c222e.js";const l={},u=e(`<h1 id="promise\u9898\u76EE\u5408\u96C6" tabindex="-1"><a class="header-anchor" href="#promise\u9898\u76EE\u5408\u96C6" aria-hidden="true">#</a> Promise\u9898\u76EE\u5408\u96C6</h1><h2 id="_1-promise\u7684\u51E0\u9053\u57FA\u7840\u9898" tabindex="-1"><a class="header-anchor" href="#_1-promise\u7684\u51E0\u9053\u57FA\u7840\u9898" aria-hidden="true">#</a> 1. Promise\u7684\u51E0\u9053\u57FA\u7840\u9898</h2><h3 id="_1-1" tabindex="-1"><a class="header-anchor" href="#_1-1" aria-hidden="true">#</a> 1.1</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;promise1&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> promise1<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&#39;promise1&#39;
&#39;1&#39; Promise{&lt;pending&gt;}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2" tabindex="-1"><a class="header-anchor" href="#_1-2" aria-hidden="true">#</a> 1.2</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>1 2 4 3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_1-3" tabindex="-1"><a class="header-anchor" href="#_1-3" aria-hidden="true">#</a> 1.3</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>1 2 4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_1-4" tabindex="-1"><a class="header-anchor" href="#_1-4" aria-hidden="true">#</a> 1.4</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;promise1&#39;</span><span class="token punctuation">)</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;resolve1&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> promise2 <span class="token operator">=</span> promise1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> promise1<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> promise2<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FC7\u7A0B\u5206\u6790\uFF1A</p><ul><li>\u4ECE\u4E0A\u81F3\u4E0B\uFF0C\u5148\u9047\u5230<code>new Promise</code>\uFF0C\u6267\u884C\u8BE5\u6784\u9020\u51FD\u6570\u4E2D\u7684\u4EE3\u7801<code>promise1</code></li><li>\u78B0\u5230<code>resolve</code>\u51FD\u6570, \u5C06<code>promise1</code>\u7684\u72B6\u6001\u6539\u53D8\u4E3A<code>resolved</code>, \u5E76\u5C06\u7ED3\u679C\u4FDD\u5B58\u4E0B\u6765</li><li>\u78B0\u5230<code>promise1.then</code>\u8FD9\u4E2A\u5FAE\u4EFB\u52A1\uFF0C\u5C06\u5B83\u653E\u5165\u5FAE\u4EFB\u52A1\u961F\u5217</li><li><code>promise2</code>\u662F\u4E00\u4E2A\u65B0\u7684\u72B6\u6001\u4E3A<code>pending</code>\u7684<code>Promise</code></li><li>\u6267\u884C\u540C\u6B65\u4EE3\u7801<code>1</code>\uFF0C \u540C\u65F6\u6253\u5370\u51FA<code>promise1</code>\u7684\u72B6\u6001\u662F<code>resolved</code></li><li>\u6267\u884C\u540C\u6B65\u4EE3\u7801<code>2</code>\uFF0C\u540C\u65F6\u6253\u5370\u51FA<code>promise2</code>\u7684\u72B6\u6001\u662F<code>pending</code></li><li>\u5B8F\u4EFB\u52A1\u6267\u884C\u5B8C\u6BD5\uFF0C\u67E5\u627E\u5FAE\u4EFB\u52A1\u961F\u5217\uFF0C\u53D1\u73B0<code>promise1.then</code>\u8FD9\u4E2A\u5FAE\u4EFB\u52A1\u4E14\u72B6\u6001\u4E3A<code>resolved</code>\uFF0C\u6267\u884C\u5B83\u3002</li></ul><p>\u7ED3\u679C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&#39;promise1&#39;</span>
<span class="token string">&#39;1&#39;</span> Promise<span class="token punctuation">{</span><span class="token operator">&lt;</span>resolved<span class="token operator">&gt;</span><span class="token operator">:</span> <span class="token string">&#39;resolve1&#39;</span><span class="token punctuation">}</span>
<span class="token string">&#39;2&#39;</span> Promise<span class="token punctuation">{</span><span class="token operator">&lt;</span>pending<span class="token operator">&gt;</span><span class="token punctuation">}</span>
<span class="token string">&#39;resolve1&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-5" tabindex="-1"><a class="header-anchor" href="#_1-5" aria-hidden="true">#</a> 1.5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;start&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>1
&#39;start&#39;
&#39;success&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-6" tabindex="-1"><a class="header-anchor" href="#_1-6" aria-hidden="true">#</a> 1.6</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;success&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;start&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7B54\u6848\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&quot;start&quot;
1
&quot;success&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-promise\u7ED3\u5408settimeout" tabindex="-1"><a class="header-anchor" href="#_2-promise\u7ED3\u5408settimeout" aria-hidden="true">#</a> 2. Promise\u7ED3\u5408setTimeout</h2><h3 id="_2-1" tabindex="-1"><a class="header-anchor" href="#_2-1" aria-hidden="true">#</a> 2.1</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;start&#39;</span><span class="token punctuation">)</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;time&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;resolve&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;end&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&#39;start&#39;
&#39;end&#39;
&#39;resolve&#39;
&#39;time&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-\u9898\u76EE\u4E8C" tabindex="-1"><a class="header-anchor" href="#_2-2-\u9898\u76EE\u4E8C" aria-hidden="true">#</a> 2.2 \u9898\u76EE\u4E8C</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;timerStart&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;success&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;timerEnd&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56E0\u6B64\u6267\u884C\u7ED3\u679C\u4E3A\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>1
2
4
&quot;timerStart&quot;
&quot;timerEnd&quot;
&quot;success&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-\u9898\u76EE\u4E09" tabindex="-1"><a class="header-anchor" href="#_2-3-\u9898\u76EE\u4E09" aria-hidden="true">#</a> 2.3 \u9898\u76EE\u4E09</h3><p>\u9898\u76EE\u4E09\u5206\u4E86\u4E24\u4E2A\u9898\u76EE\uFF0C\u56E0\u4E3A\u770B\u7740\u90FD\u5DEE\u4E0D\u591A\uFF0C\u4E0D\u8FC7\u6267\u884C\u7684\u7ED3\u679C\u5374\u4E0D\u4E00\u6837\uFF0C\u5927\u5BB6\u4E0D\u59A8\u5148\u731C\u731C\u4E0B\u9762\u4E24\u4E2A\u9898\u76EE\u5206\u522B\u6267\u884C\u4EC0\u4E48\uFF1A</p><h4 id="_1" tabindex="-1"><a class="header-anchor" href="#_1" aria-hidden="true">#</a> <strong>(1)</strong>:</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;timer1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;timer3&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;timer2&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;start&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2" tabindex="-1"><a class="header-anchor" href="#_2" aria-hidden="true">#</a> <strong>(2)</strong>:</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;timer1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;promise&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;timer2&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;start&#39;</span><span class="token punctuation">)</span>
<span class="token comment">/*\u4F60\u53EF\u4EE5\u8FD9\u6837\u7406\u89E3\uFF0CPromise.then\u662F\u5FAE\u4EFB\u52A1\uFF0C\u5B83\u4F1A\u88AB\u52A0\u5165\u5230\u672C\u8F6E\u4E2D\u7684\u5FAE\u4EFB\u52A1\u5217\u8868\uFF0C\u800C\u5B9A\u65F6\u5668timer3\u662F\u5B8F\u4EFB\u52A1\uFF0C\u5B83\u4F1A\u88AB\u52A0\u5165\u5230\u4E0B\u4E00\u8F6E\u7684\u5B8F\u4EFB\u52A1\u4E2D\u3002*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u6267\u884C\u7ED3\u679C\uFF1A</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&#39;start&#39;</span>
<span class="token string">&#39;timer1&#39;</span>
<span class="token string">&#39;timer2&#39;</span>
<span class="token string">&#39;timer3&#39;</span>

<span class="token string">&#39;start&#39;</span>
<span class="token string">&#39;timer1&#39;</span>
<span class="token string">&#39;promise&#39;</span>
<span class="token string">&#39;timer2&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3" tabindex="-1"><a class="header-anchor" href="#_3" aria-hidden="true">#</a> \uFF083\uFF09</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;promise1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> timer2 <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;timer2&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> timer1 <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;timer1&#39;</span><span class="token punctuation">)</span>
  Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;promise2&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;start&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u9053\u9898\u7A0D\u5FAE\u7684\u96BE\u4E00\u4E9B\uFF0C\u5728<code>promise</code>\u4E2D\u6267\u884C\u5B9A\u65F6\u5668\uFF0C\u53C8\u5728\u5B9A\u65F6\u5668\u4E2D\u6267\u884C<code>promise</code>\uFF1B</p><p>\u5E76\u4E14\u8981\u6CE8\u610F\u7684\u662F\uFF0C\u8FD9\u91CC\u7684<code>Promise</code>\u662F\u76F4\u63A5<code>resolve</code>\u7684\uFF0C\u800C\u4E4B\u524D\u7684<code>new Promise</code>\u4E0D\u4E00\u6837\u3002</p><p>(\u5077\u5077\u544A\u8BC9\u4F60\uFF0C\u8FD9\u9053\u9898\u5F80\u4E0B\u4E00\u70B9\u6709\u6D41\u7A0B\u56FE)</p><p>\u56E0\u6B64\u8FC7\u7A0B\u5206\u6790\u4E3A\uFF1A</p><ul><li>\u521A\u5F00\u59CB\u6574\u4E2A\u811A\u672C\u4F5C\u4E3A\u7B2C\u4E00\u6B21\u5B8F\u4EFB\u52A1\u6765\u6267\u884C\uFF0C\u6211\u4EEC\u5C06\u5B83\u6807\u8BB0\u4E3A<strong>\u5B8F1</strong>\uFF0C\u4ECE\u4E0A\u81F3\u4E0B\u6267\u884C</li><li>\u9047\u5230<code>Promise.resolve().then</code>\u8FD9\u4E2A\u5FAE\u4EFB\u52A1\uFF0C\u5C06<code>then</code>\u4E2D\u7684\u5185\u5BB9\u52A0\u5165\u7B2C\u4E00\u6B21\u7684\u5FAE\u4EFB\u52A1\u961F\u5217\u6807\u8BB0\u4E3A<strong>\u5FAE1</strong></li><li>\u9047\u5230\u5B9A\u65F6\u5668<code>timer1</code>\uFF0C\u5C06\u5B83\u52A0\u5165\u4E0B\u4E00\u6B21\u5B8F\u4EFB\u52A1\u7684\u5EF6\u8FDF\u5217\u8868\uFF0C\u6807\u8BB0\u4E3A<strong>\u5B8F2</strong>\uFF0C\u7B49\u5F85\u6267\u884C(\u5148\u4E0D\u7BA1\u91CC\u9762\u662F\u4EC0\u4E48\u5185\u5BB9)</li><li>\u6267\u884C<strong>\u5B8F1</strong>\u4E2D\u7684\u540C\u6B65\u4EE3\u7801<code>start</code></li><li>\u7B2C\u4E00\u6B21\u5B8F\u4EFB\u52A1(<strong>\u5B8F1</strong>)\u6267\u884C\u5B8C\u6BD5\uFF0C\u68C0\u67E5\u7B2C\u4E00\u6B21\u7684\u5FAE\u4EFB\u52A1\u961F\u5217(<strong>\u5FAE1</strong>)\uFF0C\u53D1\u73B0\u6709\u4E00\u4E2A<code>promise.then</code>\u8FD9\u4E2A\u5FAE\u4EFB\u52A1\u9700\u8981\u6267\u884C</li><li>\u6267\u884C\u6253\u5370\u51FA<strong>\u5FAE1</strong>\u4E2D\u540C\u6B65\u4EE3\u7801<code>promise1</code>\uFF0C\u7136\u540E\u53D1\u73B0\u5B9A\u65F6\u5668<code>timer2</code>\uFF0C\u5C06\u5B83\u52A0\u5165<strong>\u5B8F2</strong>\u7684\u540E\u9762\uFF0C\u6807\u8BB0\u4E3A<strong>\u5B8F3</strong></li><li>\u7B2C\u4E00\u6B21\u5FAE\u4EFB\u52A1\u961F\u5217(<strong>\u5FAE1</strong>)\u6267\u884C\u5B8C\u6BD5\uFF0C\u6267\u884C\u7B2C\u4E8C\u6B21\u5B8F\u4EFB\u52A1(<strong>\u5B8F2</strong>)\uFF0C\u9996\u5148\u6267\u884C\u540C\u6B65\u4EE3\u7801<code>timer1</code></li><li>\u7136\u540E\u9047\u5230\u4E86<code>promise2</code>\u8FD9\u4E2A\u5FAE\u4EFB\u52A1\uFF0C\u5C06\u5B83\u52A0\u5165\u6B64\u6B21\u5FAA\u73AF\u7684\u5FAE\u4EFB\u52A1\u961F\u5217\uFF0C\u6807\u8BB0\u4E3A<strong>\u5FAE2</strong></li><li><strong>\u5B8F2</strong>\u4E2D\u6CA1\u6709\u540C\u6B65\u4EE3\u7801\u53EF\u6267\u884C\u4E86\uFF0C\u67E5\u627E\u672C\u6B21\u5FAA\u73AF\u7684\u5FAE\u4EFB\u52A1\u961F\u5217(<strong>\u5FAE2</strong>)\uFF0C\u53D1\u73B0\u4E86<code>promise2</code>\uFF0C\u6267\u884C\u5B83</li><li>\u7B2C\u4E8C\u8F6E\u6267\u884C\u5B8C\u6BD5\uFF0C\u6267\u884C<strong>\u5B8F3</strong>\uFF0C\u6253\u5370\u51FA<code>timer2</code></li></ul><p>\u6240\u4EE5\u7ED3\u679C\u4E3A\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&#39;start&#39;
&#39;promise1&#39;
&#39;timer1&#39;
&#39;promise2&#39;
&#39;timer2&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,50),r={href:"https://imgse.com/i/vyzgN6",target:"_blank",rel:"noopener noreferrer"},k=n("img",{src:"https://s1.ax1x.com/2022/08/22/vyzgN6.png",alt:"vyzgN6.png"},null,-1),d=e(`<h3 id="_2-4" tabindex="-1"><a class="header-anchor" href="#_2-4" aria-hidden="true">#</a> 2.4</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> promise2 <span class="token operator">=</span> promise1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;error!!!&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;promise1&#39;</span><span class="token punctuation">,</span> promise1<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;promise2&#39;</span><span class="token punctuation">,</span> promise2<span class="token punctuation">)</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;promise1&#39;</span><span class="token punctuation">,</span> promise1<span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;promise2&#39;</span><span class="token punctuation">,</span> promise2<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B8C\u6574\u7684\u7ED3\u679C\u4E3A\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&#39;promise1&#39; Promise{&lt;pending&gt;}
&#39;promise2&#39; Promise{&lt;pending&gt;}
test5.html:102 Uncaught (in promise) Error: error!!! at test.html:102
&#39;promise1&#39; Promise{&lt;resolved&gt;: &quot;success&quot;}
&#39;promise2&#39; Promise{&lt;rejected&gt;: Error: error!!!}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-5" tabindex="-1"><a class="header-anchor" href="#_2-5" aria-hidden="true">#</a> 2.5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;success&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;timer1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;promise1\u91CC\u7684\u5185\u5BB9&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> promise2 <span class="token operator">=</span> promise1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;error!!!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;promise1&quot;</span><span class="token punctuation">,</span> promise1<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;promise2&quot;</span><span class="token punctuation">,</span> promise2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;timer2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;promise1&quot;</span><span class="token punctuation">,</span> promise1<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;promise2&quot;</span><span class="token punctuation">,</span> promise2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&#39;promise1\u91CC\u7684\u5185\u5BB9&#39;
&#39;promise1&#39; Promise{&lt;pending&gt;}
&#39;promise2&#39; Promise{&lt;pending&gt;}
&#39;timer1&#39;
test5.html:102 Uncaught (in promise) Error: error!!! at test.html:102
&#39;timer2&#39;
&#39;promise1&#39; Promise{&lt;resolved&gt;: &quot;success&quot;}
&#39;promise2&#39; Promise{&lt;rejected&gt;: Error: error!!!}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-promise\u4E2D\u7684then\u3001catch\u3001finally" tabindex="-1"><a class="header-anchor" href="#_3-promise\u4E2D\u7684then\u3001catch\u3001finally" aria-hidden="true">#</a> 3.Promise\u4E2D\u7684then\u3001catch\u3001finally</h2><p><code>Promise</code>\u7684\u72B6\u6001\u4E00\u7ECF\u6539\u53D8\u5C31\u4E0D\u80FD\u518D\u6539\u53D8\u3002(\u89C13.1)</p><p><code>.then</code>\u548C<code>.catch</code>\u90FD\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684<code>Promise</code>\u3002(\u4E0A\u9762\u7684\u{1F446}1.4\u8BC1\u660E\u4E86)</p><p><code>catch</code>\u4E0D\u7BA1\u88AB\u8FDE\u63A5\u5230\u54EA\u91CC\uFF0C\u90FD\u80FD\u6355\u83B7\u4E0A\u5C42\u672A\u6355\u6349\u8FC7\u7684\u9519\u8BEF\u3002(\u89C13.2)</p><p>\u5728<code>Promise</code>\u4E2D\uFF0C\u8FD4\u56DE\u4EFB\u610F\u4E00\u4E2A\u975E <code>promise</code> \u7684\u503C\u90FD\u4F1A\u88AB\u5305\u88F9\u6210 <code>promise</code> \u5BF9\u8C61\uFF0C\u4F8B\u5982<code>return 2</code>\u4F1A\u88AB\u5305\u88C5\u4E3A<code>return Promise.resolve(2)</code>\u3002</p><p><code>Promise</code> \u7684 <code>.then</code> \u6216\u8005 <code>.catch</code> \u53EF\u4EE5\u88AB\u8C03\u7528\u591A\u6B21, \u4F46\u5982\u679C<code>Promise</code>\u5185\u90E8\u7684\u72B6\u6001\u4E00\u7ECF\u6539\u53D8\uFF0C\u5E76\u4E14\u6709\u4E86\u4E00\u4E2A\u503C\uFF0C\u90A3\u4E48\u540E\u7EED\u6BCF\u6B21\u8C03\u7528<code>.then</code>\u6216\u8005<code>.catch</code>\u7684\u65F6\u5019\u90FD\u4F1A\u76F4\u63A5\u62FF\u5230\u8BE5\u503C\u3002(\u89C13.5)</p><p><strong><code>.then</code> \u6216\u8005 <code>.catch</code> \u4E2D <code>return</code> \u4E00\u4E2A <code>error</code> \u5BF9\u8C61\u5E76\u4E0D\u4F1A\u629B\u51FA\u9519\u8BEF\uFF0C\u6240\u4EE5\u4E0D\u4F1A\u88AB\u540E\u7EED\u7684 <code>.catch</code> \u6355\u83B7\u3002(\u89C13.6)</strong></p><p><strong><code>.then</code> \u6216 <code>.catch</code> \u8FD4\u56DE\u7684\u503C\u4E0D\u80FD\u662F promise \u672C\u8EAB\uFF0C\u5426\u5219\u4F1A\u9020\u6210\u6B7B\u5FAA\u73AF\u3002(\u89C13.7)</strong></p><p><strong><code>.then</code> \u6216\u8005 <code>.catch</code> \u7684\u53C2\u6570\u671F\u671B\u662F\u51FD\u6570\uFF0C\u4F20\u5165\u975E\u51FD\u6570\u5219\u4F1A\u53D1\u751F\u503C\u900F\u4F20\u3002(\u89C13.8)</strong></p><p><code>.then</code>\u65B9\u6CD5\u662F\u80FD\u63A5\u6536\u4E24\u4E2A\u53C2\u6570\u7684\uFF0C\u7B2C\u4E00\u4E2A\u662F\u5904\u7406\u6210\u529F\u7684\u51FD\u6570\uFF0C\u7B2C\u4E8C\u4E2A\u662F\u5904\u7406\u5931\u8D25\u7684\u51FD\u6570\uFF0C\u518D\u67D0\u4E9B\u65F6\u5019\u4F60\u53EF\u4EE5\u8BA4\u4E3A<code>catch</code>\u662F<code>.then</code>\u7B2C\u4E8C\u4E2A\u53C2\u6570\u7684\u7B80\u4FBF\u5199\u6CD5\u3002(\u89C13.9)</p><p><strong><code>.finally</code>\u65B9\u6CD5\u4E5F\u662F\u8FD4\u56DE\u4E00\u4E2A<code>Promise</code>\uFF0C\u4ED6\u5728<code>Promise</code>\u7ED3\u675F\u7684\u65F6\u5019\uFF0C\u65E0\u8BBA\u7ED3\u679C\u4E3A<code>resolved</code>\u8FD8\u662F<code>rejected</code>\uFF0C\u90FD\u4F1A\u6267\u884C\u91CC\u9762\u7684\u56DE\u8C03\u51FD\u6570\u3002</strong></p><h3 id="_3-1" tabindex="-1"><a class="header-anchor" href="#_3-1" aria-hidden="true">#</a> 3.1</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;success1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;success2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
promise
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;then: &quot;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;catch: &quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&quot;then: success1&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-2" tabindex="-1"><a class="header-anchor" href="#_3-2" aria-hidden="true">#</a> 3.2</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;success2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
promise
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;then1: &quot;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;then2: &quot;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;catch: &quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;then3: &quot;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&quot;catch: &quot; &quot;error&quot;
&quot;then3: &quot; undefined
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-\u9898\u76EE\u4E09" tabindex="-1"><a class="header-anchor" href="#_3-3-\u9898\u76EE\u4E09" aria-hidden="true">#</a> 3.3 \u9898\u76EE\u4E09</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token number">3</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>1
2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-4-\u9898\u76EE\u56DB" tabindex="-1"><a class="header-anchor" href="#_3-4-\u9898\u76EE\u56DB" aria-hidden="true">#</a> 3.4 \u9898\u76EE\u56DB</h3><p>\u5982\u679C\u628A<code>3.3</code>\u4E2D\u7684<code>Promise.resolve(1)</code>\u6539\u4E3A<code>Promise.reject(1)</code>\u53C8\u4F1A\u600E\u4E48\u6837\u5462\uFF1F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">3</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>1
3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-5" tabindex="-1"><a class="header-anchor" href="#_3-5" aria-hidden="true">#</a> 3.5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;timer&#39;</span><span class="token punctuation">)</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> start <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6267\u884C\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&#39;timer&#39;
&#39;success&#39; 1001
&#39;success&#39; 1002
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u7136\uFF0C\u5982\u679C\u4F60\u8DB3\u591F\u5FEB\u7684\u8BDD\uFF0C\u4E5F\u53EF\u80FD\u4E24\u4E2A\u90FD\u662F<code>1001</code>\u3002</p><p><code>Promise</code> \u7684 <code>.then</code> \u6216\u8005 <code>.catch</code> \u53EF\u4EE5\u88AB\u8C03\u7528\u591A\u6B21\uFF0C\u4F46\u8FD9\u91CC <code>Promise</code> \u6784\u9020\u51FD\u6570\u53EA\u6267\u884C\u4E00\u6B21\u3002\u6216\u8005\u8BF4 <code>promise</code> \u5185\u90E8\u72B6\u6001\u4E00\u7ECF\u6539\u53D8\uFF0C\u5E76\u4E14\u6709\u4E86\u4E00\u4E2A\u503C\uFF0C\u90A3\u4E48\u540E\u7EED\u6BCF\u6B21\u8C03\u7528 <code>.then</code> \u6216\u8005 <code>.catch</code> \u90FD\u4F1A\u76F4\u63A5\u62FF\u5230\u8BE5\u503C\u3002</p><h3 id="_3-6" tabindex="-1"><a class="header-anchor" href="#_3-6" aria-hidden="true">#</a> 3.6</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;error!!!&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;then: &quot;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;catch: &quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u731C\u731C\u8FD9\u91CC\u7684\u7ED3\u679C\u8F93\u51FA\u7684\u662F\u4EC0\u4E48 \u{1F914}\uFE0F \uFF1F</p><p><strong>\u4F60\u53EF\u80FD\u60F3\u5230\u7684\u662F\u8FDB\u5165<code>.catch</code>\u7136\u540E\u88AB\u6355\u83B7\u4E86\u9519\u8BEF\u3002</strong></p><p><strong>\u7ED3\u679C\u5E76\u4E0D\u662F\u8FD9\u6837\u7684\uFF0C\u5B83\u8D70\u7684\u662F<code>.then</code>\u91CC\u9762\uFF1A</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&quot;then: &quot; &quot;Error: error!!!&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>\u8FD9\u4E5F\u9A8C\u8BC1\u4E86\u7B2C4\u70B9\u548C\u7B2C6\u70B9\uFF0C\u8FD4\u56DE\u4EFB\u610F\u4E00\u4E2A\u975E <code>promise</code> \u7684\u503C\u90FD\u4F1A\u88AB\u5305\u88F9\u6210 <code>promise</code> \u5BF9\u8C61\uFF0C\u56E0\u6B64\u8FD9\u91CC\u7684<code>return new Error(&#39;error!!!&#39;)</code>\u4E5F\u88AB\u5305\u88F9\u6210\u4E86<code>return Promise.resolve(new Error(&#39;error!!!&#39;))</code>\u3002</strong></p><p><strong>\u5F53\u7136\u5982\u679C\u4F60\u629B\u51FA\u4E00\u4E2A\u9519\u8BEF\u7684\u8BDD\uFF0C\u53EF\u4EE5\u7528\u4E0B\u9762\u{1F447}\u4E24\u7684\u4EFB\u610F\u4E00\u79CD\uFF1A</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>return Promise.reject(new Error(&#39;error!!!&#39;));
// or
throw new Error(&#39;error!!!&#39;)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-7" tabindex="-1"><a class="header-anchor" href="#_3-7" aria-hidden="true">#</a> 3.7</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> promise<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
promise<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">)</span>
<span class="token comment">//TypeError: Chaining cycle detected for promise #&lt;Promise&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>.then</code> \u6216 <code>.catch</code> \u8FD4\u56DE\u7684\u503C\u4E0D\u80FD\u662F promise \u672C\u8EAB\uFF0C\u5426\u5219\u4F1A\u9020\u6210\u6B7B\u5FAA\u73AF\u3002</p><p>\u56E0\u6B64\u7ED3\u679C\u4F1A\u62A5\u9519\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Uncaught (in promise) TypeError: Chaining cycle detected for promise #&lt;Promise&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-8-\u9898\u76EE\u516B" tabindex="-1"><a class="header-anchor" href="#_3-8-\u9898\u76EE\u516B" aria-hidden="true">#</a> 3.8 \u9898\u76EE\u516B</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u5B9E\u4F60\u53EA\u8981\u8BB0\u4F4F<strong>\u539F\u52198</strong>\uFF1A<code>.then</code> \u6216\u8005 <code>.catch</code> \u7684\u53C2\u6570\u671F\u671B\u662F\u51FD\u6570\uFF0C\u4F20\u5165\u975E\u51FD\u6570\u5219\u4F1A\u53D1\u751F\u503C\u900F\u4F20\u3002</p><p>\u7B2C\u4E00\u4E2A<code>then</code>\u548C\u7B2C\u4E8C\u4E2A<code>then</code>\u4E2D\u4F20\u5165\u7684\u90FD\u4E0D\u662F\u51FD\u6570\uFF0C\u4E00\u4E2A\u662F\u6570\u5B57\u7C7B\u578B\uFF0C\u4E00\u4E2A\u662F\u5BF9\u8C61\u7C7B\u578B\uFF0C\u56E0\u6B64\u53D1\u751F\u4E86\u900F\u4F20\uFF0C\u5C06<code>resolve(1)</code> \u7684\u503C\u76F4\u63A5\u4F20\u5230\u6700\u540E\u4E00\u4E2A<code>then</code>\u91CC\u3002</p><p>\u6240\u4EE5\u8F93\u51FA\u7ED3\u679C\u4E3A\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-9" tabindex="-1"><a class="header-anchor" href="#_3-9" aria-hidden="true">#</a> 3.9</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;error!!!&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;catch&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u7684\u6267\u884C\u7ED3\u679C\u662F\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&#39;error&#39; &#39;error!!!&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5B83\u8FDB\u5165\u7684\u662F<code>then()</code>\u4E2D\u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570\u91CC\u9762\uFF0C\u800C\u5982\u679C\u628A\u7B2C\u4E8C\u4E2A\u53C2\u6570\u53BB\u6389\uFF0C\u5C31\u8FDB\u5165\u4E86<code>catch()</code>\u4E2D\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Promise.reject(&#39;error!!!&#39;)
  .then((res) =&gt; {
    console.log(&#39;success&#39;, res)
  }).catch(err =&gt; {
    console.log(&#39;catch&#39;, err)
  })
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6267\u884C\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&#39;catch&#39; &#39;error!!!&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4F46\u662F\u6709\u4E00\u4E2A\u95EE\u9898\uFF0C\u5982\u679C\u662F\u8FD9\u4E2A\u6848\u4F8B\u5462\uFF1F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">success</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;error!!!&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token function">fail1</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;fail1&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">fail2</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;fail2&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7531\u4E8E<code>Promise</code>\u8C03\u7528\u7684\u662F<code>resolve()</code>\uFF0C\u56E0\u6B64<code>.then()</code>\u6267\u884C\u7684\u5E94\u8BE5\u662F<code>success()</code>\u51FD\u6570\uFF0C\u53EF\u662F<code>success()</code>\u51FD\u6570\u629B\u51FA\u7684\u662F\u4E00\u4E2A\u9519\u8BEF\uFF0C\u5B83\u4F1A\u88AB\u540E\u9762\u7684<code>catch()</code>\u7ED9\u6355\u83B7\u5230\uFF0C\u800C\u4E0D\u662F\u88AB<code>fail1</code>\u51FD\u6570\u6355\u83B7\u3002</p><p>\u56E0\u6B64\u6267\u884C\u7ED3\u679C\u4E3A\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>fail2 Error: error!!!
			at success
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-10" tabindex="-1"><a class="header-anchor" href="#_3-10" aria-hidden="true">#</a> 3.10</h3><p>\u63A5\u7740\u6765\u770B\u770B<code>.finally()</code>\uFF0C\u8FD9\u4E2A\u529F\u80FD\u4E00\u822C\u4E0D\u592A\u7528\u5728\u9762\u8BD5\u4E2D\uFF0C\u4E0D\u8FC7\u5982\u679C\u78B0\u5230\u4E86\u4F60\u4E5F\u5E94\u8BE5\u77E5\u9053\u8BE5\u5982\u4F55\u5904\u7406\u3002</p><p>\u5176\u5B9E\u4F60\u53EA\u8981\u8BB0\u4F4F\u5B83\u4E09\u4E2A\u5F88\u91CD\u8981\u7684\u77E5\u8BC6\u70B9\u5C31\u53EF\u4EE5\u4E86\uFF1A</p><ol><li><code>.finally()</code>\u65B9\u6CD5\u4E0D\u7BA1<code>Promise</code>\u5BF9\u8C61\u6700\u540E\u7684\u72B6\u6001\u5982\u4F55\u90FD\u4F1A\u6267\u884C</li><li><code>.finally()</code>\u65B9\u6CD5\u7684\u56DE\u8C03\u51FD\u6570\u4E0D\u63A5\u53D7\u4EFB\u4F55\u7684\u53C2\u6570\uFF0C\u4E5F\u5C31\u662F\u8BF4\u4F60\u5728<code>.finally()</code>\u51FD\u6570\u4E2D\u662F\u6CA1\u6CD5\u77E5\u9053<code>Promise</code>\u6700\u7EC8\u7684\u72B6\u6001\u662F<code>resolved</code>\u8FD8\u662F<code>rejected</code>\u7684</li><li>\u5B83\u6700\u7EC8\u8FD4\u56DE\u7684\u9ED8\u8BA4\u4F1A\u662F\u4E00\u4E2A<strong>\u4E0A\u4E00\u6B21\u7684Promise\u5BF9\u8C61\u503C</strong>\uFF0C\u4E0D\u8FC7\u5982\u679C\u629B\u51FA\u7684\u662F\u4E00\u4E2A\u5F02\u5E38\u5219\u8FD4\u56DE\u5F02\u5E38\u7684<code>Promise</code>\u5BF9\u8C61\u3002</li></ol><p>\u6765\u770B\u770B\u8FD9\u4E2A\u7B80\u5355\u7684\u4F8B\u5B50\u{1F330}\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;finally&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;finally2&#39;</span><span class="token punctuation">)</span>
  	<span class="token keyword">return</span> <span class="token string">&#39;\u6211\u662Ffinally2\u8FD4\u56DE\u7684\u503C&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">//&#39;finally2\u540E\u9762\u7684then\u51FD\u6570&#39; &#39;2&#39;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;finally2\u540E\u9762\u7684then\u51FD\u6570&#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E24\u4E2A<code>Promise</code>\u7684<code>.finally</code>\u90FD\u4F1A\u6267\u884C\uFF0C<strong>\u4E14\u5C31\u7B97<code>finally2</code>\u8FD4\u56DE\u4E86\u65B0\u7684\u503C\uFF0C\u5B83\u540E\u9762\u7684<code>then()</code>\u51FD\u6570\u63A5\u6536\u5230\u7684\u7ED3\u679C\u5374\u8FD8\u662F<code>&#39;2&#39;</code></strong>\uFF0C\u56E0\u6B64\u6253\u5370\u7ED3\u679C\u4E3A\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&#39;1&#39;</span>
<span class="token string">&#39;finally2&#39;</span>
<span class="token string">&#39;finally&#39;</span>
<span class="token string">&#39;finally2\u540E\u9762\u7684then\u51FD\u6570&#39;</span> <span class="token string">&#39;2&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u81F3\u4E8E\u4E3A\u4EC0\u4E48<code>finally2</code>\u7684\u6253\u5370\u8981\u5728<code>finally</code>\u524D\u9762\uFF0C\u8BF7\u770B\u4E0B\u4E00\u4E2A\u4F8B\u5B50\u4E2D\u7684\u89E3\u6790\u3002</p><p><strong>\u4E0D\u8FC7\u5728\u6B64\u4E4B\u524D\u8BA9\u6211\u4EEC\u518D\u6765\u786E\u8BA4\u4E00\u4E0B\uFF0C<code>finally</code>\u4E2D\u8981\u662F\u629B\u51FA\u7684\u662F\u4E00\u4E2A\u5F02\u5E38\u662F\u600E\u6837\u7684\uFF1A</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;finally1&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;\u6211\u662Ffinally\u4E2D\u629B\u51FA\u7684\u5F02\u5E38&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;finally\u540E\u9762\u7684then\u51FD\u6570&#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6355\u83B7\u9519\u8BEF&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6267\u884C\u7ED3\u679C\u4E3A\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&#39;finally1&#39;
&#39;\u6355\u83B7\u9519\u8BEF&#39; Error: \u6211\u662Ffinally\u4E2D\u629B\u51FA\u7684\u5F02\u5E38
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>OK\uFF0C\u{1F44C}\uFF0C\u8BA9\u6211\u4EEC\u6765\u770B\u4E00\u4E2A\u6BD4\u8F83\u96BE\u7684\u4F8B\u5B50\u{1F330}\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">promise1</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;promise1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> p<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">promise2</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">promise1</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;finally1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token function">promise2</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;finally2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6267\u884C\u8FC7\u7A0B\uFF1A</p><ul><li>\u9996\u5148\u5B9A\u4E49\u4E86\u4E24\u4E2A\u51FD\u6570<code>promise1</code>\u548C<code>promise2</code>\uFF0C\u5148\u4E0D\u7BA1\u63A5\u7740\u5F80\u4E0B\u770B\u3002</li><li><code>promise1</code>\u51FD\u6570\u5148\u88AB\u8C03\u7528\u4E86\uFF0C\u7136\u540E\u6267\u884C\u91CC\u9762<code>new Promise</code>\u7684\u540C\u6B65\u4EE3\u7801\u6253\u5370\u51FA<code>promise1</code></li><li>\u4E4B\u540E\u9047\u5230\u4E86<code>resolve(1)</code>\uFF0C\u5C06<code>p</code>\u7684\u72B6\u6001\u6539\u4E3A\u4E86<code>resolved</code>\u5E76\u5C06\u7ED3\u679C\u4FDD\u5B58\u4E0B\u6765\u3002</li><li>\u6B64\u65F6<code>promise1</code>\u5185\u7684\u51FD\u6570\u5185\u5BB9\u5DF2\u7ECF\u6267\u884C\u5B8C\u4E86\uFF0C\u8DF3\u51FA\u8BE5\u51FD\u6570</li><li>\u78B0\u5230\u4E86<code>promise1().then()</code>\uFF0C\u7531\u4E8E<code>promise1</code>\u7684\u72B6\u6001\u5DF2\u7ECF\u53D1\u751F\u4E86\u6539\u53D8\u4E14\u4E3A<code>resolved</code>\u56E0\u6B64\u5C06<code>promise1().then()</code>\u8FD9\u6761\u5FAE\u4EFB\u52A1\u52A0\u5165\u672C\u8F6E\u7684\u5FAE\u4EFB\u52A1\u5217\u8868(<strong>\u8FD9\u662F\u7B2C\u4E00\u4E2A\u5FAE\u4EFB\u52A1</strong>)</li><li>\u8FD9\u65F6\u5019\u8981\u6CE8\u610F\u4E86\uFF0C\u4EE3\u7801\u5E76\u4E0D\u4F1A\u63A5\u7740\u5F80\u94FE\u5F0F\u8C03\u7528\u7684\u4E0B\u9762\u8D70\uFF0C\u4E5F\u5C31\u662F\u4E0D\u4F1A\u5148\u5C06<code>.finally</code>\u52A0\u5165\u5FAE\u4EFB\u52A1\u5217\u8868\uFF0C\u90A3\u662F\u56E0\u4E3A<code>.then</code>\u672C\u8EAB\u5C31\u662F\u4E00\u4E2A\u5FAE\u4EFB\u52A1\uFF0C\u5B83\u94FE\u5F0F\u540E\u9762\u7684\u5185\u5BB9\u5FC5\u987B\u5F97\u7B49\u5F53\u524D\u8FD9\u4E2A\u5FAE\u4EFB\u52A1\u6267\u884C\u5B8C\u624D\u4F1A\u6267\u884C\uFF0C\u56E0\u6B64\u8FD9\u91CC\u6211\u4EEC\u5148\u4E0D\u7BA1<code>.finally()</code></li><li>\u518D\u5F80\u4E0B\u8D70\u78B0\u5230\u4E86<code>promise2()</code>\u51FD\u6570\uFF0C\u5176\u4E2D\u8FD4\u56DE\u7684<code>new Promise</code>\u4E2D\u5E76\u6CA1\u6709\u540C\u6B65\u4EE3\u7801\u9700\u8981\u6267\u884C\uFF0C\u6240\u4EE5\u6267\u884C<code>reject(&#39;error&#39;)</code>\u7684\u65F6\u5019\u5C06<code>promise2</code>\u51FD\u6570\u4E2D\u7684<code>Promise</code>\u7684\u72B6\u6001\u53D8\u4E3A\u4E86<code>rejected</code></li><li>\u8DF3\u51FA<code>promise2</code>\u51FD\u6570\uFF0C\u9047\u5230\u4E86<code>promise2().catch()</code>\uFF0C\u5C06\u5176\u52A0\u5165\u5F53\u524D\u7684\u5FAE\u4EFB\u52A1\u961F\u5217(<strong>\u8FD9\u662F\u7B2C\u4E8C\u4E2A\u5FAE\u4EFB\u52A1</strong>)\uFF0C\u4E14\u94FE\u5F0F\u8C03\u7528\u540E\u9762\u7684\u5185\u5BB9\u5F97\u7B49\u8BE5\u4EFB\u52A1\u6267\u884C\u5B8C\u540E\u624D\u6267\u884C\uFF0C\u548C<code>.then()</code>\u4E00\u6837\u3002</li><li>OK\uFF0C \u672C\u8F6E\u7684\u5B8F\u4EFB\u52A1\u5168\u90E8\u6267\u884C\u5B8C\u4E86\uFF0C\u6765\u770B\u770B\u5FAE\u4EFB\u52A1\u5217\u8868\uFF0C\u5B58\u5728<code>promise1().then()</code>\uFF0C\u6267\u884C\u5B83\uFF0C\u6253\u5370\u51FA<code>1</code>\uFF0C\u7136\u540E\u9047\u5230\u4E86<code>.finally()</code>\u8FD9\u4E2A\u5FAE\u4EFB\u52A1\u5C06\u5B83\u52A0\u5165\u5FAE\u4EFB\u52A1\u5217\u8868(<strong>\u8FD9\u662F\u7B2C\u4E09\u4E2A\u5FAE\u4EFB\u52A1</strong>)\u7B49\u5F85\u6267\u884C</li><li>\u518D\u6267\u884C<code>promise2().catch()</code>\u6253\u5370\u51FA<code>error</code>\uFF0C\u6267\u884C\u5B8C\u540E\u5C06<code>finally2</code>\u52A0\u5165\u5FAE\u4EFB\u52A1\u52A0\u5165\u5FAE\u4EFB\u52A1\u5217\u8868(<strong>\u8FD9\u662F\u7B2C\u56DB\u4E2A\u5FAE\u4EFB\u52A1</strong>)</li><li>OK\uFF0C \u672C\u8F6E\u53C8\u5168\u90E8\u6267\u884C\u5B8C\u4E86\uFF0C\u4F46\u662F\u5FAE\u4EFB\u52A1\u5217\u8868\u8FD8\u6709\u4E24\u4E2A\u65B0\u7684\u5FAE\u4EFB\u52A1\u6CA1\u6709\u6267\u884C\u5B8C\uFF0C\u56E0\u6B64\u4F9D\u6B21\u6267\u884C<code>finally1</code>\u548C<code>finally2</code>\u3002</li></ul><p>\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&#39;promise1&#39;
&#39;1&#39;
&#39;error&#39;
&#39;finally1&#39;
&#39;finally2&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u8FD9\u9053\u9898\u4E2D\u5176\u5B9E\u80FD\u62D3\u5C55\u7684\u4E1C\u897F\u633A\u591A\u7684\uFF0C\u4E4B\u524D\u6CA1\u6709\u63D0\u5230\uFF0C\u90A3\u5C31\u662F\u4F60\u53EF\u4EE5\u7406\u89E3\u4E3A<strong>\u94FE\u5F0F\u8C03\u7528</strong>\u540E\u9762\u7684\u5185\u5BB9\u9700\u8981\u7B49\u524D\u4E00\u4E2A\u8C03\u7528\u6267\u884C\u5B8C\u624D\u4F1A\u6267\u884C\u3002</p><p>\u5C31\u50CF\u662F\u8FD9\u91CC\u7684<code>finally()</code>\u4F1A\u7B49<code>promise1().then()</code>\u6267\u884C\u5B8C\u624D\u4F1A\u5C06<code>finally()</code>\u52A0\u5165\u5FAE\u4EFB\u52A1\u961F\u5217\uFF0C\u5176\u5B9E\u5982\u679C\u8FD9\u9053\u9898\u4E2D\u4F60\u628A<code>finally()</code>\u6362\u6210\u662F<code>then()</code>\u4E5F\u662F\u8FD9\u6837\u7684:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>function promise1 () {
  let p = new Promise((resolve) =&gt; {
    console.log(&#39;promise1&#39;);
    resolve(&#39;1&#39;)
  })
  return p;
}
function promise2 () {
  return new Promise((resolve, reject) =&gt; {
    reject(&#39;error&#39;)
  })
}
promise1()
  .then(res =&gt; console.log(res))
  .catch(err =&gt; console.log(err))
  .then(() =&gt; console.log(&#39;finally1&#39;))

promise2()
  .then(res =&gt; console.log(res))
  .catch(err =&gt; console.log(err))
  .then(() =&gt; console.log(&#39;finally2&#39;))
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-promise\u4E2D\u7684all\u548Crace" tabindex="-1"><a class="header-anchor" href="#_4-promise\u4E2D\u7684all\u548Crace" aria-hidden="true">#</a> 4. Promise\u4E2D\u7684all\u548Crace</h2>`,98),v=s("Promise.all() \u65B9\u6CD5\u63A5\u6536\u4E00\u4E2A promise \u7684 iterable \u7C7B\u578B\uFF08\u6CE8\uFF1AArray\uFF0CMap\uFF0CSet \u90FD\u5C5E\u4E8E ES6 \u7684 iterable \u7C7B\u578B\uFF09\u7684\u8F93\u5165\uFF0C\u5E76\u4E14\u53EA\u8FD4\u56DE\u4E00\u4E2A"),m={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise",target:"_blank",rel:"noopener noreferrer"},b=n("code",null,"Promise",-1),g=s("\u5B9E\u4F8B\uFF0C \u90A3\u4E2A\u8F93\u5165\u7684\u6240\u6709 promise \u7684 resolve \u56DE\u8C03\u7684\u7ED3\u679C\u662F\u4E00\u4E2A\u6570\u7EC4\u3002"),h=s("\u8FD9\u4E2A"),f={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise",target:"_blank",rel:"noopener noreferrer"},y=n("code",null,"Promise",-1),_=s("\u7684 resolve \u56DE\u8C03\u6267\u884C\u662F\u5728\u6240\u6709\u8F93\u5165\u7684 promise \u7684 resolve \u56DE\u8C03\u90FD\u7ED3\u675F\uFF0C\u6216\u8005\u8F93\u5165\u7684 iterable \u91CC\u6CA1\u6709 promise \u4E86\u7684\u65F6\u5019\u3002\u5B83\u7684 reject \u56DE\u8C03\u6267\u884C\u662F\uFF0C\u53EA\u8981\u4EFB\u4F55\u4E00\u4E2A\u8F93\u5165\u7684 promise \u7684 reject \u56DE\u8C03\u6267\u884C\u6216\u8005\u8F93\u5165\u4E0D\u5408\u6CD5\u7684 promise \u5C31\u4F1A\u7ACB\u5373\u629B\u51FA\u9519\u8BEF\uFF0C\u5E76\u4E14 reject \u7684\u662F\u7B2C\u4E00\u4E2A\u629B\u51FA\u7684\u9519\u8BEF\u4FE1\u606F\u3002"),w=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise1 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> promise2 <span class="token operator">=</span> <span class="token number">42</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> promise3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>promise1<span class="token punctuation">,</span> promise2<span class="token punctuation">,</span> promise3<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">values</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// expected output: Array [3, 42, &quot;foo&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),x={id:"\u8FD4\u56DE\u503C",tabindex:"-1"},j=n("a",{class:"header-anchor",href:"#\u8FD4\u56DE\u503C","aria-hidden":"true"},"#",-1),P=s(),q={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/all#%E8%BF%94%E5%9B%9E%E5%80%BC",target:"_blank",rel:"noopener noreferrer"},E=s("\u8FD4\u56DE\u503C"),T=s("\u5982\u679C\u4F20\u5165\u7684\u53C2\u6570\u662F\u4E00\u4E2A\u7A7A\u7684\u53EF\u8FED\u4EE3\u5BF9\u8C61\uFF0C\u5219\u8FD4\u56DE\u4E00\u4E2A**\u5DF2\u5B8C\u6210\uFF08already resolved\uFF09**\u72B6\u6001\u7684 "),A={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise",target:"_blank",rel:"noopener noreferrer"},S=n("code",null,"Promise",-1),z=s("\u3002"),C=s("\u5982\u679C\u4F20\u5165\u7684\u53C2\u6570\u4E0D\u5305\u542B\u4EFB\u4F55 "),B=n("code",null,"promise",-1),N=s("\uFF0C\u5219\u8FD4\u56DE\u4E00\u4E2A"),R=n("strong",null,"\u5F02\u6B65\u5B8C\u6210\uFF08asynchronously resolved\uFF09",-1),W=s(),J={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise",target:"_blank",rel:"noopener noreferrer"},O=n("code",null,"Promise",-1),D=s("\u3002\u6CE8\u610F\uFF1AGoogle Chrome 58 \u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\u8FD4\u56DE\u4E00\u4E2A**\u5DF2\u5B8C\u6210\uFF08already resolved\uFF09**\u72B6\u6001\u7684 "),G={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise",target:"_blank",rel:"noopener noreferrer"},F=n("code",null,"Promise",-1),L=s("\u3002"),U=s("\u5176\u5B83\u60C5\u51B5\u4E0B\u8FD4\u56DE\u4E00\u4E2A"),I=s("\u5904\u7406\u4E2D\uFF08pending\uFF09"),V=s("\u7684"),K={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise",target:"_blank",rel:"noopener noreferrer"},M=n("code",null,"Promise",-1),Q=s("\u3002\u8FD9\u4E2A\u8FD4\u56DE\u7684 "),Y=n("code",null,"promise",-1),H=s(" \u4E4B\u540E\u4F1A\u5728\u6240\u6709\u7684 "),X=n("code",null,"promise",-1),Z=s(" \u90FD\u5B8C\u6210\u6216\u6709\u4E00\u4E2A "),$=n("code",null,"promise",-1),nn=s(" \u5931\u8D25\u65F6"),sn=s("\u5F02\u6B65"),an=s("\u5730\u53D8\u4E3A\u5B8C\u6210\u6216\u5931\u8D25\u3002 \u89C1\u4E0B\u65B9\u5173\u4E8E\u201CPromise.all \u7684\u5F02\u6B65\u6216\u540C\u6B65\u201D\u793A\u4F8B\u3002\u8FD4\u56DE\u503C\u5C06\u4F1A\u6309\u7167\u53C2\u6570\u5185\u7684 "),tn=n("code",null,"promise",-1),en=s(" \u987A\u5E8F\u6392\u5217\uFF0C\u800C\u4E0D\u662F\u7531\u8C03\u7528 "),pn=n("code",null,"promise",-1),on=s(" \u7684\u5B8C\u6210\u987A\u5E8F\u51B3\u5B9A\u3002"),cn={id:"promise-all-\u7684\u4F7F\u7528",tabindex:"-1"},ln=n("a",{class:"header-anchor",href:"#promise-all-\u7684\u4F7F\u7528","aria-hidden":"true"},"#",-1),un=s(),rn={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/all#promise.all_%E7%9A%84%E4%BD%BF%E7%94%A8",target:"_blank",rel:"noopener noreferrer"},kn=n("code",null,"Promise.all",-1),dn=s(" \u7684\u4F7F\u7528"),vn=e(`<p><code>Promise.all</code> \u7B49\u5F85\u6240\u6709\u90FD\u5B8C\u6210\uFF08\u6216\u7B2C\u4E00\u4E2A\u5931\u8D25\uFF09\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> p1 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> p2 <span class="token operator">=</span> <span class="token number">1337</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> p3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>p1<span class="token punctuation">,</span> p2<span class="token punctuation">,</span> p3<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">values</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [3, 1337, &quot;foo&quot;]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u53C2\u6570\u4E2D\u5305\u542B\u975E <code>promise</code> \u503C\uFF0C\u8FD9\u4E9B\u503C\u5C06\u88AB\u5FFD\u7565\uFF0C\u4F46\u4ECD\u7136\u4F1A\u88AB\u653E\u5728\u8FD4\u56DE\u6570\u7EC4\u4E2D\uFF08\u5982\u679C <code>promise</code> \u5B8C\u6210\u7684\u8BDD\uFF09\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// this will be counted as if the iterable passed is empty, so it gets fulfilled</span>
<span class="token keyword">var</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// this will be counted as if the iterable passed contains only the resolved promise with value &quot;444&quot;, so it gets fulfilled</span>
<span class="token keyword">var</span> p2 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">444</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// this will be counted as if the iterable passed contains only the rejected promise with value &quot;555&quot;, so it gets rejected</span>
<span class="token keyword">var</span> p3 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token number">555</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// using setTimeout we can execute code after the stack is empty</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p3<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// logs</span>
<span class="token comment">// Promise { &lt;state&gt;: &quot;fulfilled&quot;, &lt;value&gt;: Array[3] }</span>
<span class="token comment">// Promise { &lt;state&gt;: &quot;fulfilled&quot;, &lt;value&gt;: Array[4] }</span>
<span class="token comment">// Promise { &lt;state&gt;: &quot;rejected&quot;, &lt;reason&gt;: 555 }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),mn={id:"promise-all-\u7684\u5F02\u6B65\u548C\u540C\u6B65",tabindex:"-1"},bn=n("a",{class:"header-anchor",href:"#promise-all-\u7684\u5F02\u6B65\u548C\u540C\u6B65","aria-hidden":"true"},"#",-1),gn=s(),hn={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/all#promise.all_%E7%9A%84%E5%BC%82%E6%AD%A5%E5%92%8C%E5%90%8C%E6%AD%A5",target:"_blank",rel:"noopener noreferrer"},fn=n("code",null,"Promise.all",-1),yn=s(" \u7684\u5F02\u6B65\u548C\u540C\u6B65"),_n=e(`<p>\u4E0B\u9762\u7684\u4F8B\u5B50\u4E2D\u6F14\u793A\u4E86 <code>Promise.all</code> \u7684\u5F02\u6B65\u6027\uFF08\u5982\u679C\u4F20\u5165\u7684\u53EF\u8FED\u4EE3\u5BF9\u8C61\u662F\u7A7A\u7684\uFF0C\u5C31\u662F\u540C\u6B65\uFF09\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// we are passing as argument an array of promises that are already resolved,</span>
<span class="token comment">// to trigger Promise.all as soon as possible</span>
<span class="token keyword">var</span> resolvedPromisesArray <span class="token operator">=</span> <span class="token punctuation">[</span>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">44</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>resolvedPromisesArray<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// immediately logging the value of p</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// using setTimeout we can execute code after the stack is empty</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;the stack is now empty&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// logs, in order:</span>
<span class="token comment">// Promise { &lt;state&gt;: &quot;pending&quot; }</span>
<span class="token comment">// the stack is now empty</span>
<span class="token comment">// Promise { &lt;state&gt;: &quot;fulfilled&quot;, &lt;value&gt;: Array[2] }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C <code>Promise.all</code> \u5931\u8D25\uFF0C\u4E5F\u662F\u4E00\u6837\u7684\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> mixedPromisesArray <span class="token operator">=</span> <span class="token punctuation">[</span>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token number">44</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>mixedPromisesArray<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;the stack is now empty&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// logs</span>
<span class="token comment">// Promise { &lt;state&gt;: &quot;pending&quot; }</span>
<span class="token comment">// the stack is now empty</span>
<span class="token comment">// Promise { &lt;state&gt;: &quot;rejected&quot;, &lt;reason&gt;: 44 }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F46\u662F\uFF0C<code>Promise.all</code> <strong>\u5F53\u4E14\u4EC5\u5F53</strong>\u4F20\u5165\u7684\u53EF\u8FED\u4EE3\u5BF9\u8C61\u4E3A\u7A7A\u65F6\u4E3A\u540C\u6B65\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// will be immediately resolved</span>
<span class="token keyword">var</span> p2 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1337</span><span class="token punctuation">,</span> <span class="token string">&quot;hi&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// non-promise values will be ignored, but the evaluation will be done asynchronously</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p2<span class="token punctuation">)</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;the stack is now empty&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// logs</span>
<span class="token comment">// Promise { &lt;state&gt;: &quot;fulfilled&quot;, &lt;value&gt;: Array[0] }</span>
<span class="token comment">// Promise { &lt;state&gt;: &quot;pending&quot; }</span>
<span class="token comment">// the stack is now empty</span>
<span class="token comment">// Promise { &lt;state&gt;: &quot;fulfilled&quot;, &lt;value&gt;: Array[2] }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),wn={id:"promise-all-\u7684\u5FEB\u901F\u8FD4\u56DE\u5931\u8D25\u884C\u4E3A",tabindex:"-1"},xn=n("a",{class:"header-anchor",href:"#promise-all-\u7684\u5FEB\u901F\u8FD4\u56DE\u5931\u8D25\u884C\u4E3A","aria-hidden":"true"},"#",-1),jn=s(),Pn={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/all#promise.all_%E7%9A%84%E5%BF%AB%E9%80%9F%E8%BF%94%E5%9B%9E%E5%A4%B1%E8%B4%A5%E8%A1%8C%E4%B8%BA",target:"_blank",rel:"noopener noreferrer"},qn=n("code",null,"Promise.all",-1),En=s(" \u7684\u5FEB\u901F\u8FD4\u56DE\u5931\u8D25\u884C\u4E3A"),Tn=e(`<p><code>Promise.all</code> \u5728\u4EFB\u610F\u4E00\u4E2A\u4F20\u5165\u7684 <code>promise</code> \u5931\u8D25\u65F6\u8FD4\u56DE\u5931\u8D25\u3002\u4F8B\u5982\uFF0C\u5982\u679C\u4F60\u4F20\u5165\u7684 <code>promise</code>\u4E2D\uFF0C\u6709\u56DB\u4E2A <code>promise</code> \u5728\u4E00\u5B9A\u7684\u65F6\u95F4\u4E4B\u540E\u8C03\u7528\u6210\u529F\u51FD\u6570\uFF0C\u6709\u4E00\u4E2A\u7ACB\u5373\u8C03\u7528\u5931\u8D25\u51FD\u6570\uFF0C\u90A3\u4E48 <code>Promise.all</code> \u5C06\u7ACB\u5373\u53D8\u4E3A\u5931\u8D25\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token string">&#39;one&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">,</span> <span class="token string">&#39;two&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> p3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">,</span> <span class="token string">&#39;three&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> p4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">4000</span><span class="token punctuation">,</span> <span class="token string">&#39;four&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> p5 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;reject&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>p1<span class="token punctuation">,</span> p2<span class="token punctuation">,</span> p3<span class="token punctuation">,</span> p4<span class="token punctuation">,</span> p5<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">values</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token parameter">reason</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//From console:</span>
<span class="token comment">//&quot;reject&quot;</span>

<span class="token comment">//You can also use .catch</span>
Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>p1<span class="token punctuation">,</span> p2<span class="token punctuation">,</span> p3<span class="token punctuation">,</span> p4<span class="token punctuation">,</span> p5<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">values</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">reason</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//From console:</span>
<span class="token comment">//&quot;reject&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="promise-race" tabindex="-1"><a class="header-anchor" href="#promise-race" aria-hidden="true">#</a> Promise.race</h3><p><strong><code>Promise.race(iterable)</code></strong> \u65B9\u6CD5**\u8FD4\u56DE\u4E00\u4E2A promise\uFF0C**\u4E00\u65E6\u8FED\u4EE3\u5668\u4E2D\u7684\u67D0\u4E2A promise <strong>\u89E3\u51B3\u6216\u62D2\u7EDD</strong>\uFF0C\u8FD4\u56DE\u7684 promise \u5C31\u4F1A\u89E3\u51B3\u6216\u62D2\u7EDD\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token string">&#39;one&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> promise2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&#39;two&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">[</span>promise1<span class="token punctuation">,</span> promise2<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// Both resolve, but promise2 is faster</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// expected output: &quot;two&quot;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>race</code> \u51FD\u6570\u8FD4\u56DE\u4E00\u4E2A <code>Promise</code>\uFF0C\u5B83\u5C06\u4E0E\u7B2C\u4E00\u4E2A\u4F20\u9012\u7684 promise \u76F8\u540C\u7684\u5B8C\u6210\u65B9\u5F0F\u88AB\u5B8C\u6210\u3002\u5B83\u53EF\u4EE5\u662F\u5B8C\u6210\uFF08 resolves\uFF09\uFF0C\u4E5F\u53EF\u4EE5\u662F\u5931\u8D25\uFF08rejects\uFF09\uFF0C\u8FD9\u8981\u53D6\u51B3\u4E8E\u7B2C\u4E00\u4E2A\u5B8C\u6210\u7684\u65B9\u5F0F\u662F\u4E24\u4E2A\u4E2D\u7684\u54EA\u4E2A\u3002</p>`,6),An={id:"promise-race-\u7684\u5F02\u6B65\u6027",tabindex:"-1"},Sn=n("a",{class:"header-anchor",href:"#promise-race-\u7684\u5F02\u6B65\u6027","aria-hidden":"true"},"#",-1),zn=s(),Cn={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/race#promise.race_%E7%9A%84%E5%BC%82%E6%AD%A5%E6%80%A7",target:"_blank",rel:"noopener noreferrer"},Bn=s("Promise.race \u7684\u5F02\u6B65\u6027"),Nn=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// we are passing as argument an array of promises that are already resolved,</span>
<span class="token comment">// to trigger Promise.race as soon as possible</span>
<span class="token keyword">var</span> resolvedPromisesArray <span class="token operator">=</span> <span class="token punctuation">[</span>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">44</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span>resolvedPromisesArray<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// immediately logging the value of p</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// using setTimeout we can execute code after the stack is empty</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;the stack is now empty&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// logs, in order:</span>
<span class="token comment">// Promise { &lt;state&gt;: &quot;pending&quot; }</span>
<span class="token comment">// the stack is now empty</span>
<span class="token comment">// Promise { &lt;state&gt;: &quot;fulfilled&quot;, &lt;value&gt;: 33 }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Rn={id:"\u4F7F\u7528-promise-race-\u2013-settimeout-\u7684\u793A\u4F8B",tabindex:"-1"},Wn=n("a",{class:"header-anchor",href:"#\u4F7F\u7528-promise-race-\u2013-settimeout-\u7684\u793A\u4F8B","aria-hidden":"true"},"#",-1),Jn=s(),On={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/race#%E4%BD%BF%E7%94%A8_promise.race_%E2%80%93_settimeout_%E7%9A%84%E7%A4%BA%E4%BE%8B",target:"_blank",rel:"noopener noreferrer"},Dn=s("\u4F7F\u7528 Promise.race \u2013 setTimeout \u7684\u793A\u4F8B"),Gn=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token string">&quot;one&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&quot;two&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">[</span>p1<span class="token punctuation">,</span> p2<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;two&quot;</span>
  <span class="token comment">// \u4E24\u4E2A\u90FD\u5B8C\u6210\uFF0C\u4F46 p2 \u66F4\u5FEB</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> p3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&quot;three&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> p4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span>reject<span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token string">&quot;four&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">[</span>p3<span class="token punctuation">,</span> p4<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;three&quot;</span>
  <span class="token comment">// p3 \u66F4\u5FEB\uFF0C\u6240\u4EE5\u5B83\u5B8C\u6210\u4E86</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u672A\u88AB\u8C03\u7528</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> p5 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token string">&quot;five&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> p6 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span>reject<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&quot;six&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">[</span>p5<span class="token punctuation">,</span> p6<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u672A\u88AB\u8C03\u7528</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;six&quot;</span>
  <span class="token comment">// p6 \u66F4\u5FEB\uFF0C\u6240\u4EE5\u5B83\u5931\u8D25\u4E86</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="async-await" tabindex="-1"><a class="header-anchor" href="#async-await" aria-hidden="true">#</a> async/await</h2><h3 id="async\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#async\u51FD\u6570" aria-hidden="true">#</a> async\u51FD\u6570</h3>`,3),Fn=s("async \u51FD\u6570\u662F\u4F7F\u7528"),Ln=n("code",null,"async",-1),Un=s("\u5173\u952E\u5B57\u58F0\u660E\u7684\u51FD\u6570\u3002 async \u51FD\u6570\u662F"),In={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/AsyncFunction",target:"_blank",rel:"noopener noreferrer"},Vn=n("code",null,"AsyncFunction",-1),Kn=s("\u6784\u9020\u51FD\u6570\u7684\u5B9E\u4F8B\uFF0C \u5E76\u4E14\u5176\u4E2D\u5141\u8BB8\u4F7F\u7528"),Mn=n("code",null,"await",-1),Qn=s("\u5173\u952E\u5B57\u3002"),Yn=n("code",null,"async",-1),Hn=s("\u548C"),Xn=n("code",null,"await",-1),Zn=s("\u5173\u952E\u5B57\u8BA9\u6211\u4EEC\u53EF\u4EE5\u7528\u4E00\u79CD\u66F4\u7B80\u6D01\u7684\u65B9\u5F0F\u5199\u51FA\u57FA\u4E8E"),$n={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise",target:"_blank",rel:"noopener noreferrer"},ns=n("code",null,"Promise",-1),ss=s("\u7684\u5F02\u6B65\u884C\u4E3A\uFF0C\u800C\u65E0\u9700\u523B\u610F\u5730\u94FE\u5F0F\u8C03\u7528"),as=n("code",null,"promise",-1),ts=s("\u3002"),es=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">resolveAfter2Seconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;resolved&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">asyncCall</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;calling&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">resolveAfter2Seconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// expected output: &quot;resolved&quot;</span>
<span class="token punctuation">}</span>

<span class="token function">asyncCall</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),ps={id:"\u8FD4\u56DE\u503C-1",tabindex:"-1"},os=n("a",{class:"header-anchor",href:"#\u8FD4\u56DE\u503C-1","aria-hidden":"true"},"#",-1),cs=s(),is={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/async_function#%E8%BF%94%E5%9B%9E%E5%80%BC",target:"_blank",rel:"noopener noreferrer"},ls=s("\u8FD4\u56DE\u503C"),us=s("\u4E00\u4E2A"),rs={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise",target:"_blank",rel:"noopener noreferrer"},ks=n("code",null,"Promise",-1),ds=s("\uFF0C\u8FD9\u4E2A promise \u8981\u4E48\u4F1A\u901A\u8FC7\u4E00\u4E2A\u7531 async \u51FD\u6570\u8FD4\u56DE\u7684\u503C\u88AB\u89E3\u51B3\uFF0C\u8981\u4E48\u4F1A\u901A\u8FC7\u4E00\u4E2A\u4ECE async \u51FD\u6570\u4E2D\u629B\u51FA\u7684\uFF08\u6216\u5176\u4E2D\u6CA1\u6709\u88AB\u6355\u83B7\u5230\u7684\uFF09\u5F02\u5E38\u88AB\u62D2\u7EDD"),vs=s("async \u51FD\u6570\u53EF\u80FD\u5305\u542B 0 \u4E2A\u6216\u8005\u591A\u4E2A"),ms={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/await",target:"_blank",rel:"noopener noreferrer"},bs=n("code",null,"await",-1),gs=s("\u8868\u8FBE\u5F0F\u3002await \u8868\u8FBE\u5F0F\u4F1A\u6682\u505C\u6574\u4E2A async \u51FD\u6570\u7684\u6267\u884C\u8FDB\u7A0B\u5E76\u51FA\u8BA9\u5176\u63A7\u5236\u6743\uFF0C\u53EA\u6709\u5F53\u5176\u7B49\u5F85\u7684\u57FA\u4E8E promise \u7684\u5F02\u6B65\u64CD\u4F5C\u88AB\u5151\u73B0\u6216\u88AB\u62D2\u7EDD\u4E4B\u540E\u624D\u4F1A\u6062\u590D\u8FDB\u7A0B\u3002promise \u7684\u89E3\u51B3\u503C\u4F1A\u88AB\u5F53\u4F5C\u8BE5 await \u8868\u8FBE\u5F0F\u7684\u8FD4\u56DE\u503C\u3002\u4F7F\u7528"),hs=n("code",null,"async",-1),fs=s(" / "),ys=n("code",null,"await",-1),_s=s("\u5173\u952E\u5B57\u5C31\u53EF\u4EE5\u5728\u5F02\u6B65\u4EE3\u7801\u4E2D\u4F7F\u7528\u666E\u901A\u7684"),ws=n("code",null,"try",-1),xs=s(" / "),js=n("code",null,"catch",-1),Ps=s("\u4EE3\u7801\u5757\u3002"),qs=n("strong",null,"\u5907\u6CE8\uFF1A",-1),Es=n("code",null,"await",-1),Ts=s("\u5173\u952E\u5B57\u53EA\u5728 async \u51FD\u6570\u5185\u6709\u6548\u3002\u5982\u679C\u4F60\u5728 async \u51FD\u6570\u4F53\u4E4B\u5916\u4F7F\u7528\u5B83\uFF0C\u5C31\u4F1A\u629B\u51FA\u8BED\u6CD5\u9519\u8BEF "),As={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",target:"_blank",rel:"noopener noreferrer"},Ss=n("code",null,"SyntaxError",-1),zs=s(" \u3002"),Cs=n("p",null,[n("strong",null,"\u5907\u6CE8\uFF1A"),n("code",null,"async"),s("/"),n("code",null,"await"),s("\u7684\u76EE\u7684\u4E3A\u4E86\u7B80\u5316\u4F7F\u7528\u57FA\u4E8E promise \u7684 API \u65F6\u6240\u9700\u7684\u8BED\u6CD5\u3002"),n("code",null,"async"),s("/"),n("code",null,"await"),s("\u7684\u884C\u4E3A\u5C31\u597D\u50CF\u642D\u914D\u4F7F\u7528\u4E86\u751F\u6210\u5668\u548C promise\u3002")],-1),Bs=e(`<p>async \u51FD\u6570\u4E00\u5B9A\u4F1A\u8FD4\u56DE\u4E00\u4E2A promise \u5BF9\u8C61\u3002\u5982\u679C\u4E00\u4E2A async \u51FD\u6570\u7684\u8FD4\u56DE\u503C\u770B\u8D77\u6765\u4E0D\u662F promise\uFF0C\u90A3\u4E48\u5B83\u5C06\u4F1A\u88AB\u9690\u5F0F\u5730\u5305\u88C5\u5728\u4E00\u4E2A promise \u4E2D\u3002</p><p>\u4F8B\u5982\uFF0C\u5982\u4E0B\u4EE3\u7801\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">return</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7B49\u4EF7\u4E8E\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>async \u51FD\u6570\u7684\u51FD\u6570\u4F53\u53EF\u4EE5\u88AB\u770B\u4F5C\u662F\u7531 0 \u4E2A\u6216\u8005\u591A\u4E2A await \u8868\u8FBE\u5F0F\u5206\u5272\u5F00\u6765\u7684\u3002\u4ECE\u7B2C\u4E00\u884C\u4EE3\u7801\u76F4\u5230\uFF08\u5E76\u5305\u62EC\uFF09\u7B2C\u4E00\u4E2A await \u8868\u8FBE\u5F0F\uFF08\u5982\u679C\u6709\u7684\u8BDD\uFF09\u90FD\u662F<strong>\u540C\u6B65\u8FD0\u884C</strong>\u7684\u3002\u8FD9\u6837\u7684\u8BDD\uFF0C\u4E00\u4E2A\u4E0D\u542B await \u8868\u8FBE\u5F0F\u7684 async \u51FD\u6570\u662F\u4F1A\u540C\u6B65\u8FD0\u884C\u7684\u3002<strong>\u7136\u800C\uFF0C\u5982\u679C\u51FD\u6570\u4F53\u5185\u6709\u4E00\u4E2A await \u8868\u8FBE\u5F0F\uFF0Casync \u51FD\u6570\u5C31\u4E00\u5B9A\u4F1A\u5F02\u6B65\u6267\u884C\u3002</strong></p><p>\u4F8B\u5982\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>async function foo() {
   await 1
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7B49\u4EF7\u4E8E</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728 await \u8868\u8FBE\u5F0F\u4E4B\u540E\u7684\u4EE3\u7801\u53EF\u4EE5\u88AB\u8BA4\u4E3A\u662F\u5B58\u5728\u5728\u94FE\u5F0F\u8C03\u7528\u7684 then \u56DE\u8C03\u4E2D\uFF0C\u591A\u4E2A await \u8868\u8FBE\u5F0F\u90FD\u5C06\u52A0\u5165\u94FE\u5F0F\u8C03\u7528\u7684 then \u56DE\u8C03\u4E2D\uFF0C\u8FD4\u56DE\u503C\u5C06\u4F5C\u4E3A\u6700\u540E\u4E00\u4E2A then \u56DE\u8C03\u7684\u8FD4\u56DE\u503C\u3002</p><p>\u5728\u63A5\u4E0B\u6765\u7684\u4F8B\u5B50\u4E2D\uFF0C\u6211\u4EEC\u5C06\u4F7F\u7528 await \u6267\u884C\u4E24\u6B21 promise\uFF0C\u6574\u4E2A<code>foo</code>\u51FD\u6570\u7684\u6267\u884C\u5C06\u4F1A\u88AB\u5206\u4E3A\u4E09\u4E2A\u9636\u6BB5\u3002</p><ol><li><code>foo</code>\u51FD\u6570\u7684\u7B2C\u4E00\u884C\u5C06\u4F1A\u540C\u6B65\u6267\u884C\uFF0Cawait \u5C06\u4F1A\u7B49\u5F85 promise \u7684\u7ED3\u675F\u3002\u7136\u540E\u6682\u505C\u901A\u8FC7<code>foo</code>\u7684\u8FDB\u7A0B\uFF0C\u5E76\u5C06\u63A7\u5236\u6743\u4EA4\u8FD8\u7ED9\u8C03\u7528<code>foo</code>\u7684\u51FD\u6570\u3002</li><li>\u4E00\u6BB5\u65F6\u95F4\u540E\uFF0C\u5F53\u7B2C\u4E00\u4E2A promise \u5B8C\u7ED3\u7684\u65F6\u5019\uFF0C\u63A7\u5236\u6743\u5C06\u91CD\u65B0\u56DE\u5230 foo \u51FD\u6570\u5185\u3002\u793A\u4F8B\u4E2D\u5C06\u4F1A\u5C06<code>1</code>\uFF08promise \u72B6\u6001\u4E3A fulfilled\uFF09\u4F5C\u4E3A\u7ED3\u679C\u8FD4\u56DE\u7ED9 await \u8868\u8FBE\u5F0F\u7684\u5DE6\u8FB9\u5373<code>result1</code>\u3002\u63A5\u4E0B\u6765\u51FD\u6570\u4F1A\u7EE7\u7EED\u8FDB\u884C\uFF0C\u5230\u8FBE\u7B2C\u4E8C\u4E2A await \u533A\u57DF\uFF0C\u6B64\u65F6<code>foo</code>\u51FD\u6570\u7684\u8FDB\u7A0B\u5C06\u518D\u6B21\u88AB\u6682\u505C\u3002</li><li>\u4E00\u6BB5\u65F6\u95F4\u540E\uFF0C\u540C\u6837\u5F53\u7B2C\u4E8C\u4E2A promise \u5B8C\u7ED3\u7684\u65F6\u5019\uFF0C<code>result2</code>\u5C06\u88AB\u8D4B\u503C\u4E3A<code>2</code>\uFF0C\u4E4B\u540E\u51FD\u6570\u5C06\u4F1A\u6B63\u5E38\u540C\u6B65\u6267\u884C\uFF0C\u5C06\u9ED8\u8BA4\u8FD4\u56DE<code>undefined</code> \u3002</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">const</span> result1 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
   <span class="token keyword">const</span> result2 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// \u6355\u6349\u6240\u6709\u7684\u9519\u8BEF...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\uFF1Apromise \u94FE\u4E0D\u662F\u4E00\u6B21\u5C31\u6784\u5EFA\u597D\u7684\uFF0C\u76F8\u53CD\uFF0Cpromise \u94FE\u662F\u5206\u9636\u6BB5\u6784\u9020\u7684\uFF0C\u56E0\u6B64\u5728\u5904\u7406\u5F02\u6B65\u51FD\u6570\u65F6\u5FC5\u987B\u6CE8\u610F\u5BF9\u9519\u8BEF\u51FD\u6570\u7684\u5904\u7406\u3002</p>`,15),Ns={id:"\u793A\u4F8B",tabindex:"-1"},Rs=n("a",{class:"header-anchor",href:"#\u793A\u4F8B","aria-hidden":"true"},"#",-1),Ws=s(),Js={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/async_function#%E7%A4%BA%E4%BE%8B",target:"_blank",rel:"noopener noreferrer"},Os=s("\u793A\u4F8B"),Ds={id:"\u7B80\u5355\u4F8B\u5B50",tabindex:"-1"},Gs=n("a",{class:"header-anchor",href:"#\u7B80\u5355\u4F8B\u5B50","aria-hidden":"true"},"#",-1),Fs=s(),Ls={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/async_function#%E7%AE%80%E5%8D%95%E4%BE%8B%E5%AD%90",target:"_blank",rel:"noopener noreferrer"},Us=s("\u7B80\u5355\u4F8B\u5B50"),Is=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">resolveAfter2Seconds</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;starting slow promise&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;slow&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;slow promise is done&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> <span class="token function-variable function">resolveAfter1Second</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;starting fast promise&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;fast&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;fast promise is done&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> <span class="token function-variable function">sequentialStart</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;==SEQUENTIAL START==&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 1. Execution gets here almost instantly</span>
  <span class="token keyword">const</span> slow <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">resolveAfter2Seconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>slow<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2. this runs 2 seconds after 1.</span>

  <span class="token keyword">const</span> fast <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">resolveAfter1Second</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fast<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3. this runs 3 seconds after 1.</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> <span class="token function-variable function">concurrentStart</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;==CONCURRENT START with await==&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> slow <span class="token operator">=</span> <span class="token function">resolveAfter2Seconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// starts timer immediately</span>
  <span class="token keyword">const</span> fast <span class="token operator">=</span> <span class="token function">resolveAfter1Second</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// starts timer immediately</span>

  <span class="token comment">// 1. Execution gets here almost instantly</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> slow<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2. this runs 2 seconds after 1.</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> fast<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3. this runs 2 seconds after 1., immediately after 2., since fast is already resolved</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> <span class="token function-variable function">concurrentPromise</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;==CONCURRENT START with Promise.all==&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">resolveAfter2Seconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">resolveAfter1Second</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">messages</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>messages<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// slow</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>messages<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// fast</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> <span class="token function-variable function">parallel</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;==PARALLEL with await Promise.all==&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Start 2 &quot;jobs&quot; in parallel and wait for both of them to complete</span>
  <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
      <span class="token punctuation">(</span><span class="token keyword">async</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token function">resolveAfter2Seconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">(</span><span class="token keyword">async</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token function">resolveAfter1Second</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// This function does not handle errors. See warning below!</span>
<span class="token keyword">var</span> <span class="token function-variable function">parallelPromise</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;==PARALLEL with Promise.then==&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">resolveAfter2Seconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">resolveAfter1Second</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">sequentialStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// after 2 seconds, logs &quot;slow&quot;, then after 1 more second, &quot;fast&quot;</span>

<span class="token comment">// wait above to finish</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>concurrentStart<span class="token punctuation">,</span> <span class="token number">4000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// after 2 seconds, logs &quot;slow&quot; and then &quot;fast&quot;</span>

<span class="token comment">// wait again</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>concurrentPromise<span class="token punctuation">,</span> <span class="token number">7000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// same as concurrentStart</span>

<span class="token comment">// wait again</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>parallel<span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// truly parallel: after 1 second, logs &quot;fast&quot;, then after 1 more second, &quot;slow&quot;</span>

<span class="token comment">// wait again</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>parallelPromise<span class="token punctuation">,</span> <span class="token number">13000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// same as parallel</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Vs={id:"\u4F7F\u7528-async-\u51FD\u6570\u91CD\u5199-promise-\u94FE",tabindex:"-1"},Ks=n("a",{class:"header-anchor",href:"#\u4F7F\u7528-async-\u51FD\u6570\u91CD\u5199-promise-\u94FE","aria-hidden":"true"},"#",-1),Ms=s(),Qs={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/async_function#%E4%BD%BF%E7%94%A8async%E5%87%BD%E6%95%B0%E9%87%8D%E5%86%99_promise_%E9%93%BE",target:"_blank",rel:"noopener noreferrer"},Ys=s("\u4F7F\u7528 async \u51FD\u6570\u91CD\u5199 promise \u94FE"),Hs=s("\u8FD4\u56DE "),Xs={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise",target:"_blank",rel:"noopener noreferrer"},Zs=n("code",null,"Promise",-1),$s=s("\u7684 API \u5C06\u4F1A\u4EA7\u751F\u4E00\u4E2A promise \u94FE\uFF0C\u5B83\u5C06\u51FD\u6570\u80A2\u89E3\u6210\u8BB8\u591A\u90E8\u5206\u3002\u4F8B\u5982\u4E0B\u9762\u7684\u4EE3\u7801\uFF1A"),na=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getProcessedData</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">downloadData</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span> <span class="token comment">// \u8FD4\u56DE\u4E00\u4E2A promise \u5BF9\u8C61</span>
    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">downloadFallbackData</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>  <span class="token comment">// \u8FD4\u56DE\u4E00\u4E2A promise \u5BF9\u8C61</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">processDataInWorker</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD4\u56DE\u4E00\u4E2A promise \u5BF9\u8C61</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Copy to Clipboard</p><p>\u53EF\u4EE5\u91CD\u5199\u4E3A\u5355\u4E2A async \u51FD\u6570\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getProcessedData</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> v<span class="token punctuation">;</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    v <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">downloadData</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    v <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">downloadFallbackData</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token function">processDataInWorker</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\uFF0C\u5728\u4E0A\u8FF0\u793A\u4F8B\u4E2D\uFF0C<code>return</code> \u8BED\u53E5\u4E2D\u6CA1\u6709 <code>await</code> \u64CD\u4F5C\u7B26\uFF0C\u56E0\u4E3A <code>async function</code> \u7684\u8FD4\u56DE\u503C\u5C06\u88AB\u9690\u5F0F\u5730\u4F20\u9012\u7ED9</p><h3 id="_5-1" tabindex="-1"><a class="header-anchor" href="#_5-1" aria-hidden="true">#</a> 5.1</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">async1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;async1 start&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> <span class="token function">async2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;async1 end&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">async2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;async2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">async1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;start&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u9053\u57FA\u7840\u9898\u8F93\u51FA\u7684\u662F\u5565\uFF1F</p><p>\u7B54\u6848\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&#39;async1 start&#39;
&#39;async2&#39;
&#39;start&#39;
&#39;async1 end&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-2" tabindex="-1"><a class="header-anchor" href="#_5-2" aria-hidden="true">#</a> 5.2</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">async1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;async1 start&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> <span class="token function">async2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;async1 end&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">async2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;timer&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;async2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">async1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;start&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CA1\u9519\uFF0C\u5B9A\u65F6\u5668\u59CB\u7EC8\u8FD8\u662F\u6700\u540E\u6267\u884C\u7684\uFF0C\u5B83\u88AB\u653E\u5230\u4E0B\u4E00\u6761\u5B8F\u4EFB\u52A1\u7684\u5EF6\u8FDF\u961F\u5217\u4E2D\u3002</p><p>\u7B54\u6848\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&#39;async1 start&#39;
&#39;async2&#39;
&#39;start&#39;

&#39;async1 end&#39;
&#39;timer&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-3-\u9898\u76EE\u4E09" tabindex="-1"><a class="header-anchor" href="#_5-3-\u9898\u76EE\u4E09" aria-hidden="true">#</a> 5.3 \u9898\u76EE\u4E09</h3><p>\u6765\u5427\uFF0C\u5C0F\u4F19\u4F34\u4EEC\uFF0C\u8BA9\u6211\u4EEC\u591A\u52A0\u51E0\u4E2A\u5B9A\u65F6\u5668\u770B\u770B\u3002\u{1F601}</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">async1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;async1 start&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> <span class="token function">async2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;async1 end&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;timer1&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">async2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;timer2&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;async2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">async1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;timer3&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;start&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u5B9E\u5982\u679C\u4F60\u80FD\u505A\u5230\u8FD9\u91CC\u4E86\uFF0C\u8BF4\u660E\u4F60\u524D\u9762\u7684\u90A3\u4E9B\u77E5\u8BC6\u70B9\u4E5F\u90FD\u638C\u63E1\u4E86\uFF0C\u6211\u5C31\u4E0D\u9700\u8981\u592A\u8FC7\u8BE6\u7EC6\u7684\u6B65\u9AA4\u5206\u6790\u4E86\u3002</p><p>\u76F4\u63A5\u516C\u5E03\u7B54\u6848\u5427\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&#39;async1 start&#39;
&#39;async2&#39;
&#39;start&#39;
&#39;async1 end&#39;
&#39;timer2&#39;
&#39;timer3&#39;
&#39;timer1&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B9A\u65F6\u5668\u8C01\u5148\u6267\u884C\uFF0C\u4F60\u53EA\u9700\u8981\u5173\u6CE8\u8C01\u5148\u88AB\u8C03\u7528\u7684\u4EE5\u53CA\u5EF6\u8FDF\u65F6\u95F4\u662F\u591A\u5C11\uFF0C\u8FD9\u9053\u9898\u4E2D\u5EF6\u8FDF\u65F6\u95F4\u90FD\u662F<code>0</code>\uFF0C\u6240\u4EE5\u53EA\u8981\u5173\u6CE8\u8C01\u5148\u88AB\u8C03\u7528\u7684\u3002\u3002</p><h3 id="_5-4-\u9898\u76EE\u56DB" tabindex="-1"><a class="header-anchor" href="#_5-4-\u9898\u76EE\u56DB" aria-hidden="true">#</a> 5.4 \u9898\u76EE\u56DB</h3><p>\u6B63\u5E38\u60C5\u51B5\u4E0B\uFF0C<code>async</code>\u4E2D\u7684<code>await</code>\u547D\u4EE4\u662F\u4E00\u4E2A<code>Promise</code>\u5BF9\u8C61\uFF0C\u8FD4\u56DE\u8BE5\u5BF9\u8C61\u7684\u7ED3\u679C\u3002</p><p>\u4F46\u5982\u679C\u4E0D\u662F<code>Promise</code>\u5BF9\u8C61\u7684\u8BDD\uFF0C\u5C31\u4F1A\u76F4\u63A5\u8FD4\u56DE\u5BF9\u5E94\u7684\u503C\uFF0C\u76F8\u5F53\u4E8E<code>Promise.resolve()</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">fn</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// return await 1234</span>
  <span class="token comment">// \u7B49\u540C\u4E8E</span>
  <span class="token keyword">return</span> <span class="token number">123</span>
<span class="token punctuation">}</span>
<span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>123
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5-5-\u9898\u76EE\u4E94" tabindex="-1"><a class="header-anchor" href="#_5-5-\u9898\u76EE\u4E94" aria-hidden="true">#</a> 5.5 \u9898\u76EE\u4E94</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">async1</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;async1 start&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;promise1&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;async1 success&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token string">&#39;async1 end&#39;</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;srcipt start&#39;</span><span class="token punctuation">)</span>
<span class="token function">async1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;srcipt end&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u9053\u9898\u76EE\u6BD4\u8F83\u6709\u610F\u601D\uFF0C\u5927\u5BB6\u8981\u6CE8\u610F\u4E86\u3002</p><p>\u5728<code>async1</code>\u4E2D<code>await</code>\u540E\u9762\u7684<code>Promise</code>\u662F\u6CA1\u6709\u8FD4\u56DE\u503C\u7684\uFF0C\u4E5F\u5C31\u662F\u5B83\u7684\u72B6\u6001\u59CB\u7EC8\u662F<code>pending</code>\u72B6\u6001\uFF0C\u56E0\u6B64\u76F8\u5F53\u4E8E\u4E00\u76F4\u5728<code>await</code>\uFF0C<code>await</code>\uFF0C<code>await</code>\u5374\u59CB\u7EC8\u6CA1\u6709\u54CD\u5E94...</p><p>\u6240\u4EE5\u5728<code>await</code>\u4E4B\u540E\u7684\u5185\u5BB9\u662F\u4E0D\u4F1A\u6267\u884C\u7684\uFF0C\u4E5F\u5305\u62EC<code>async1</code>\u540E\u9762\u7684 <code>.then</code>\u3002</p><p>\u7B54\u6848\u4E3A\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&#39;script start&#39;
&#39;async1 start&#39;
&#39;promise1&#39;
&#39;script end&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-6-\u9898\u76EE\u516D" tabindex="-1"><a class="header-anchor" href="#_5-6-\u9898\u76EE\u516D" aria-hidden="true">#</a> 5.6 \u9898\u76EE\u516D</h3><p>\u8BA9\u6211\u4EEC\u7ED9<code>5.5</code>\u4E2D\u7684<code>Promise</code>\u52A0\u4E0A<code>resolve</code>\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">async1</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;async1 start&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;promise1&#39;</span><span class="token punctuation">)</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;promise1 resolve&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span>
    
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;async1 success&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token string">&#39;async1 end&#39;</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;srcipt start&#39;</span><span class="token punctuation">)</span>
<span class="token function">async1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;srcipt end&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u73B0\u5728<code>Promise</code>\u6709\u4E86\u8FD4\u56DE\u503C\u4E86\uFF0C\u56E0\u6B64<code>await</code>\u540E\u9762\u7684\u5185\u5BB9\u5C06\u4F1A\u88AB\u6267\u884C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&#39;script start&#39;
&#39;async1 start&#39;
&#39;promise1&#39;
&#39;script end&#39;

&#39;promise1 resolve&#39;
&#39;async1 success&#39;
&#39;async1 end&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-7-\u9898\u76EE\u4E03" tabindex="-1"><a class="header-anchor" href="#_5-7-\u9898\u76EE\u4E03" aria-hidden="true">#</a> 5.7 \u9898\u76EE\u4E03</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">async1</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;async1 start&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;promise1&#39;</span><span class="token punctuation">)</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;promise resolve&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;async1 success&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token string">&#39;async1 end&#39;</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;srcipt start&#39;</span><span class="token punctuation">)</span>
<span class="token function">async1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;promise2&#39;</span><span class="token punctuation">)</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;timer&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u9053\u9898\u5E94\u8BE5\u4E5F\u4E0D\u96BE\uFF0C\u4E0D\u8FC7\u6709\u4E00\u70B9\u9700\u8981\u6CE8\u610F\u7684\uFF0C\u5728<code>async1</code>\u4E2D\u7684<code>new Promise</code>\u5B83\u7684<code>resovle</code>\u7684\u503C\u548C<code>async1().then()</code>\u91CC\u7684\u503C\u662F\u6CA1\u6709\u5173\u7CFB\u7684\uFF0C\u5F88\u591A\u5C0F\u4F19\u4F34\u53EF\u80FD\u770B\u5230<code>resovle(&#39;promise resolve&#39;)</code>\u5C31\u4F1A\u8BEF\u4EE5\u4E3A\u662F<code>async1().then()</code>\u4E2D\u7684\u8FD4\u56DE\u503C\u3002</p><p>\u56E0\u6B64\u8FD9\u91CC\u7684\u6267\u884C\u7ED3\u679C\u4E3A\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&#39;script start&#39;
&#39;async1 start&#39;
&#39;promise1&#39;
&#39;promise2&#39;
&#39;async1 success&#39;
&#39;async1 end&#39;
&#39;timer&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-8-\u9898\u76EE\u516B" tabindex="-1"><a class="header-anchor" href="#_5-8-\u9898\u76EE\u516B" aria-hidden="true">#</a> 5.8 \u9898\u76EE\u516B</h4><p>\u6211\u4EEC\u518D\u6765\u770B\u4E00\u9053\u5934\u6761\u66FE\u7ECF\u7684\u9762\u8BD5\u9898\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">async1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;async1 start&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> <span class="token function">async2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;async1 end&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">async2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;async2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;script start&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;setTimeout&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">async1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;promise1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;promise2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;script end&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u81EA\u4FE1\u7684\u5199\u4E0B\u4F60\u4EEC\u7684\u7B54\u6848\u5427\u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&#39;script start&#39;
&#39;async1 start&#39;
&#39;async2&#39;
&#39;promise1&#39;
&#39;script end&#39;
&#39;async1 end&#39;
&#39;promise2&#39;
&#39;setTimeout&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-9-\u9898\u76EE\u4E5D" tabindex="-1"><a class="header-anchor" href="#_5-9-\u9898\u76EE\u4E5D" aria-hidden="true">#</a> 5.9 \u9898\u76EE\u4E5D</h3><p><code>async/await</code>\u5927\u6CD5\u5DF2\u7EC3\u6210\uFF0C\u54B1\u4EEC\u7EE7\u7EED\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">testSometing</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u6267\u884CtestSometing&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token string">&quot;testSometing&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">testAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u6267\u884CtestAsync&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;hello async&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;test start...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> v1 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">testSometing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> v2 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">testAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>v2<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>v1<span class="token punctuation">,</span> v2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;promise start...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;promise&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">val</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;test end...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7B54\u6848\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&#39;test start...&#39;
&#39;\u6267\u884CtestSometing&#39;
&#39;promise start...&#39;
&#39;test end...&#39;
&#39;testSometing&#39;
&#39;\u6267\u884CtestAsync&#39;
&#39;promise&#39;
&#39;hello async&#39;
&#39;testSometing&#39; &#39;hello async&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-async\u5904\u7406\u9519\u8BEF" tabindex="-1"><a class="header-anchor" href="#_6-async\u5904\u7406\u9519\u8BEF" aria-hidden="true">#</a> 6.async\u5904\u7406\u9519\u8BEF</h2><h3 id="_6-1-\u9898\u76EE\u4E00" tabindex="-1"><a class="header-anchor" href="#_6-1-\u9898\u76EE\u4E00" aria-hidden="true">#</a> 6.1 \u9898\u76EE\u4E00</h3><p>\u5728<code>async</code>\u4E2D\uFF0C\u5982\u679C <code>await</code>\u540E\u9762\u7684\u5185\u5BB9\u662F\u4E00\u4E2A\u5F02\u5E38\u6216\u8005\u9519\u8BEF\u7684\u8BDD\uFF0C\u4F1A\u600E\u6837\u5462\uFF1F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">async1</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> <span class="token function">async2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;async1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token string">&#39;async1 success&#39;</span>
<span class="token punctuation">}</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">async2</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;async2&#39;</span><span class="token punctuation">)</span>
    <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">async1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F8B\u5982\u8FD9\u9053\u9898\u4E2D\uFF0C<code>await</code>\u540E\u9762\u8DDF\u7740\u7684\u662F\u4E00\u4E2A\u72B6\u6001\u4E3A<code>rejected</code>\u7684<code>promise</code>\u3002</p><p><strong>\u5982\u679C\u5728async\u51FD\u6570\u4E2D\u629B\u51FA\u4E86\u9519\u8BEF\uFF0C\u5219\u7EC8\u6B62\u9519\u8BEF\u7ED3\u679C\uFF0C\u4E0D\u4F1A\u7EE7\u7EED\u5411\u4E0B\u6267\u884C\u3002</strong></p><p>\u6240\u4EE5\u7B54\u6848\u4E3A\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&#39;async2&#39;
Uncaught (in promise) error
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u6539\u4E3A<code>throw new Error</code>\u4E5F\u662F\u4E00\u6837\u7684\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">async1</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;async1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;error!!!&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token string">&#39;async1 success&#39;</span>
<span class="token punctuation">}</span>
<span class="token function">async1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7ED3\u679C\u4E3A\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&#39;async1&#39;
Uncaught (in promise) Error: error!!!
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-2-\u9898\u76EE\u4E8C" tabindex="-1"><a class="header-anchor" href="#_6-2-\u9898\u76EE\u4E8C" aria-hidden="true">#</a> 6.2 \u9898\u76EE\u4E8C</h3><p>\u5982\u679C\u60F3\u8981\u4F7F\u5F97\u9519\u8BEF\u7684\u5730\u65B9\u4E0D\u5F71\u54CD<code>async</code>\u51FD\u6570\u540E\u7EED\u7684\u6267\u884C\u7684\u8BDD\uFF0C\u53EF\u4EE5\u4F7F\u7528<code>try catch</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">async1</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;error!!!&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;async1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;async1 success&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">async1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;script start&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u7684\u7ED3\u679C\u4E3A\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&#39;script start&#39;
&#39;error!!!&#39;
&#39;async1&#39;
&#39;async1 success&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6216\u8005\u4F60\u53EF\u4EE5\u76F4\u63A5\u5728<code>Promise.reject</code>\u540E\u9762\u8DDF\u7740\u4E00\u4E2A<code>catch()</code>\u65B9\u6CD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">async1</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// try {</span>
  <span class="token comment">//   await Promise.reject(&#39;error!!!&#39;)</span>
  <span class="token comment">// } catch(e) {</span>
  <span class="token comment">//   console.log(e)</span>
  <span class="token comment">// }</span>
  <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;error!!!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">e</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;async1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;async1 success&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">async1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;script start&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD0\u884C\u7ED3\u679C\u662F\u4E00\u6837\u7684\u3002</p><h2 id="_7-\u7EFC\u5408\u9898" tabindex="-1"><a class="header-anchor" href="#_7-\u7EFC\u5408\u9898" aria-hidden="true">#</a> 7.\u7EFC\u5408\u9898</h2><p>\u4E0A\u9762\u{1F446}\u7684\u9898\u76EE\u90FD\u662F\u88AB\u6211\u62C6\u5206\u7740\u8BF4\u4E00\u4E9B\u529F\u80FD\u70B9\uFF0C\u73B0\u5728\u8BA9\u6211\u4EEC\u6765\u505A\u4E00\u4E9B\u6BD4\u8F83\u96BE\u7684\u7EFC\u5408\u9898\u5427\u3002</p><h3 id="_7-1-\u9898\u76EE\u4E00" tabindex="-1"><a class="header-anchor" href="#_7-1-\u9898\u76EE\u4E00" aria-hidden="true">#</a> 7.1 \u9898\u76EE\u4E00</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">first</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">arg</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">arg</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FC7\u7A0B\u5206\u6790\uFF1A</p><ul><li>\u7B2C\u4E00\u6BB5\u4EE3\u7801\u5B9A\u4E49\u7684\u662F\u4E00\u4E2A\u51FD\u6570\uFF0C\u6240\u4EE5\u6211\u4EEC\u5F97\u770B\u770B\u5B83\u662F\u5728\u54EA\u6267\u884C\u7684\uFF0C\u53D1\u73B0\u5B83\u5728<code>4</code>\u4E4B\u524D\uFF0C\u6240\u4EE5\u53EF\u4EE5\u6765\u770B\u770B<code>first</code>\u51FD\u6570\u91CC\u9762\u7684\u5185\u5BB9\u4E86\u3002(\u8FD9\u4E00\u6B65\u6709\u70B9\u7C7B\u4F3C\u4E8E\u9898\u76EE<code>1.5</code>)</li><li>\u51FD\u6570<code>first</code>\u8FD4\u56DE\u7684\u662F\u4E00\u4E2A<code>new Promise()</code>\uFF0C\u56E0\u6B64\u5148\u6267\u884C\u91CC\u9762\u7684\u540C\u6B65\u4EE3\u7801<code>3</code></li><li>\u63A5\u7740\u53C8\u9047\u5230\u4E86\u4E00\u4E2A<code>new Promise()</code>\uFF0C\u76F4\u63A5\u6267\u884C\u91CC\u9762\u7684\u540C\u6B65\u4EE3\u7801<code>7</code></li><li>\u6267\u884C\u5B8C<code>7</code>\u4E4B\u540E\uFF0C\u5728<code>p</code>\u4E2D\uFF0C\u9047\u5230\u4E86\u4E00\u4E2A\u5B9A\u65F6\u5668\uFF0C\u5148\u5C06\u5B83\u653E\u5230\u4E0B\u4E00\u4E2A\u5B8F\u4EFB\u52A1\u961F\u5217\u91CC\u4E0D\u7BA1\u5B83\uFF0C\u63A5\u7740\u5411\u4E0B\u8D70</li><li>\u78B0\u5230\u4E86<code>resolve(1)</code>\uFF0C\u8FD9\u91CC\u5C31\u628A<code>p</code>\u7684\u72B6\u6001\u6539\u4E3A\u4E86<code>resolved</code>\uFF0C\u4E14\u8FD4\u56DE\u503C\u4E3A<code>1</code>\uFF0C\u4E0D\u8FC7\u8FD9\u91CC\u4E5F\u5148\u4E0D\u6267\u884C</li><li>\u8DF3\u51FA<code>p</code>\uFF0C\u78B0\u5230\u4E86<code>resolve(2)</code>\uFF0C\u8FD9\u91CC\u7684<code>resolve(2)</code>\uFF0C\u8868\u793A\u7684\u662F\u628A<code>first</code>\u51FD\u6570\u8FD4\u56DE\u7684\u90A3\u4E2A<code>Promise</code>\u7684\u72B6\u6001\u6539\u4E86\uFF0C\u4E5F\u5148\u4E0D\u7BA1\u5B83\u3002</li><li>\u7136\u540E\u78B0\u5230\u4E86<code>p.then</code>\uFF0C\u5C06\u5B83\u52A0\u5165\u672C\u6B21\u5FAA\u73AF\u7684\u5FAE\u4EFB\u52A1\u5217\u8868\uFF0C\u7B49\u5F85\u6267\u884C</li><li>\u8DF3\u51FA<code>first</code>\u51FD\u6570\uFF0C\u9047\u5230\u4E86<code>first().then()</code>\uFF0C\u5C06\u5B83\u52A0\u5165\u672C\u6B21\u5FAA\u73AF\u7684\u5FAE\u4EFB\u52A1\u5217\u8868(<code>p.then</code>\u7684\u540E\u9762\u6267\u884C)</li><li>\u7136\u540E\u6267\u884C\u540C\u6B65\u4EE3\u7801<code>4</code></li><li>\u672C\u8F6E\u7684\u540C\u6B65\u4EE3\u7801\u5168\u90E8\u6267\u884C\u5B8C\u6BD5\uFF0C\u67E5\u627E\u5FAE\u4EFB\u52A1\u5217\u8868\uFF0C\u53D1\u73B0<code>p.then</code>\u548C<code>first().then()</code>\uFF0C\u4F9D\u6B21\u6267\u884C\uFF0C\u6253\u5370\u51FA<code>1\u548C2</code></li><li>\u672C\u8F6E\u4EFB\u52A1\u6267\u884C\u5B8C\u6BD5\u4E86\uFF0C\u53D1\u73B0\u8FD8\u6709\u4E00\u4E2A\u5B9A\u65F6\u5668\u6CA1\u6709\u8DD1\u5B8C\uFF0C\u63A5\u7740\u6267\u884C\u8FD9\u4E2A\u5B9A\u65F6\u5668\u91CC\u7684\u5185\u5BB9\uFF0C\u6267\u884C\u540C\u6B65\u4EE3\u7801<code>5</code></li><li>\u7136\u540E\u53C8\u9047\u5230\u4E86\u4E00\u4E2A<code>resolve(6)</code>\uFF0C\u5B83\u662F\u653E\u5728<code>p</code>\u91CC\u7684\uFF0C\u4F46\u662F<code>p</code>\u7684\u72B6\u6001\u5728\u4E4B\u524D\u5DF2\u7ECF\u53D1\u751F\u8FC7\u6539\u53D8\u4E86\uFF0C\u56E0\u6B64\u8FD9\u91CC\u5C31\u4E0D\u4F1A\u518D\u6539\u53D8\uFF0C\u4E5F\u5C31\u662F\u8BF4<code>resolve(6)</code>\u76F8\u5F53\u4E8E\u6CA1\u4EFB\u4F55\u7528\u5904\uFF0C\u56E0\u6B64\u6253\u5370\u51FA\u6765\u7684<code>p</code>\u4E3A<code>Promise{&lt;resolved&gt;: 1}</code>\u3002(\u8FD9\u4E00\u6B65\u7C7B\u4F3C\u4E8E\u9898\u76EE<code>3.1</code>)</li></ul><p>\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>3
7
4
1
2
5
Promise{&lt;resolved&gt;: 1}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-2-\u9898\u76EE\u4E8C" tabindex="-1"><a class="header-anchor" href="#_7-2-\u9898\u76EE\u4E8C" aria-hidden="true">#</a> 7.2 \u9898\u76EE\u4E8C</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">async1</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;async1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;timer1&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;promise1&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;async1 end&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token string">&#39;async1 success&#39;</span>
<span class="token punctuation">}</span> 

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;script start&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">async1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;script end&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;timer2&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\u7684\u77E5\u8BC6\u70B9\uFF1A</p><ul><li><strong><code>async</code>\u51FD\u6570\u4E2D<code>await</code>\u7684<code>new Promise</code>\u8981\u662F\u6CA1\u6709\u8FD4\u56DE\u503C\u7684\u8BDD\u5219\u4E0D\u6267\u884C\u540E\u9762\u7684\u5185\u5BB9(\u7C7B\u4F3C\u9898<code>5.5</code>)</strong></li><li><strong><code>.then</code>\u51FD\u6570\u4E2D\u7684\u53C2\u6570\u671F\u5F85\u7684\u662F\u51FD\u6570\uFF0C\u5982\u679C\u4E0D\u662F\u51FD\u6570\u7684\u8BDD\u4F1A\u53D1\u751F\u900F\u4F20(\u7C7B\u4F3C\u9898<code>3.8</code> )</strong></li><li>\u6CE8\u610F\u5B9A\u65F6\u5668\u7684\u5EF6\u8FDF\u65F6\u95F4</li></ul><p>\u56E0\u6B64\u672C\u9898\u7B54\u6848\u4E3A\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&#39;script start&#39;
&#39;async1&#39;
&#39;promise1&#39;
&#39;script end&#39;
1
&#39;timer2&#39;
&#39;timer1&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-3-\u9898\u76EE\u4E09" tabindex="-1"><a class="header-anchor" href="#_7-3-\u9898\u76EE\u4E09" aria-hidden="true">#</a> 7.3 \u9898\u76EE\u4E09</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;resolve3&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;timer1&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;resovle1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;resolve2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p1<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;finally&#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\u7684\u77E5\u8BC6\u70B9\uFF1A</p>`,92),sa=e("<li><code>Promise</code>\u7684\u72B6\u6001\u4E00\u65E6\u6539\u53D8\u5C31\u65E0\u6CD5\u6539\u53D8(\u7C7B\u4F3C\u9898\u76EE<code>3.5</code>)</li><li><strong><code>finally</code>\u4E0D\u7BA1<code>Promise</code>\u7684\u72B6\u6001\u662F<code>resolved</code>\u8FD8\u662F<code>rejected</code>\u90FD\u4F1A\u6267\u884C\uFF0C\u4E14\u5B83\u7684\u56DE\u8C03\u51FD\u6570\u662F\u63A5\u6536\u4E0D\u5230<code>Promise</code>\u7684\u7ED3\u679C\u7684\uFF0C\u6240\u4EE5<code>finally()</code>\u4E2D\u7684<code>res</code>\u662F\u4E00\u4E2A\u8FF7\u60D1\u9879(\u7C7B\u4F3C<code>3.10</code>)\u3002</strong></li>",2),aa=e("\u6700\u540E\u4E00\u4E2A\u5B9A\u65F6\u5668\u6253\u5370\u51FA\u7684**<code>p1</code>\u5176\u5B9E\u662F<code>.finally</code>\u7684\u8FD4\u56DE\u503C\uFF0C\u6211\u4EEC\u77E5\u9053<code>.finally</code>\u7684\u8FD4\u56DE\u503C\u5982\u679C\u5728\u6CA1\u6709\u629B\u51FA\u9519\u8BEF\u7684\u60C5\u51B5\u4E0B\u9ED8\u8BA4\u4F1A\u662F\u4E0A\u4E00\u4E2A<code>Promise</code>\u7684\u8FD4\u56DE\u503C(<code>3.10</code>\u4E2D\u4E5F\u6709\u63D0\u5230), \u800C\u8FD9\u9053\u9898\u4E2D<code>.finally</code>\u4E0A\u4E00\u4E2A<code>Promise</code>\u662F<code>.then()</code>\uFF0C\u4F46\u662F\u8FD9\u4E2A<code>.then()</code>\u5E76\u6CA1\u6709\u8FD4\u56DE\u503C\uFF0C\u6240\u4EE5<code>p1</code>\u6253\u5370\u51FA\u6765\u7684<code>Promise</code>\u7684\u503C\u4F1A\u662F<code>undefined</code>\uFF0C<strong>\u5982\u679C\u4F60\u5728\u5B9A\u65F6\u5668\u7684</strong>\u4E0B\u9762**\u52A0\u4E0A\u4E00\u4E2A<code>return 1</code>\uFF0C\u5219\u503C\u5C31\u4F1A\u53D8\u6210<code>1</code>(\u611F\u8C22\u6398\u53CB",31),ta={href:"https://juejin.cn/user/2260251637193639",target:"_blank",rel:"noopener noreferrer"},ea=s("JS\u4E1B\u4E2D\u8FC7"),pa=s("\u7684\u6307\u51FA)\u3002"),oa=e(`<p>\u7B54\u6848\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&#39;resolve1&#39;
&#39;finally&#39; undefined
&#39;timer1&#39;
Promise{&lt;resolved&gt;: undefined}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8-\u51E0\u9053\u7684\u9762\u8BD5\u9898" tabindex="-1"><a class="header-anchor" href="#_8-\u51E0\u9053\u7684\u9762\u8BD5\u9898" aria-hidden="true">#</a> 8. \u51E0\u9053\u7684\u9762\u8BD5\u9898</h2><h4 id="_8-1-\u4F7F\u7528promise\u5B9E\u73B0\u6BCF\u96941\u79D2\u8F93\u51FA1-2-3" tabindex="-1"><a class="header-anchor" href="#_8-1-\u4F7F\u7528promise\u5B9E\u73B0\u6BCF\u96941\u79D2\u8F93\u51FA1-2-3" aria-hidden="true">#</a> 8.1 \u4F7F\u7528Promise\u5B9E\u73B0\u6BCF\u96941\u79D2\u8F93\u51FA1,2,3</h4><p>\u8FD9\u9053\u9898\u6BD4\u8F83\u7B80\u5355\u7684\u4E00\u79CD\u505A\u6CD5\u662F\u53EF\u4EE5\u7528<code>Promise</code>\u914D\u5408\u7740<code>reduce</code>\u4E0D\u505C\u7684\u5728<code>promise</code>\u540E\u9762\u53E0\u52A0<code>.then</code>\uFF0C\u8BF7\u770B\u4E0B\u9762\u7684\u4EE3\u7801\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">p<span class="token punctuation">,</span> x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">r</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">r</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function ca(ia,la){const a=i("ExternalLinkIcon");return o(),c("div",null,[u,n("p",null,[n("a",r,[k,t(a)])]),d,n("p",null,[v,n("a",m,[b,t(a)]),g,n("em",null,[n("strong",null,[h,n("a",f,[y,t(a)]),_])])]),w,n("h3",x,[j,P,n("a",q,[E,t(a)])]),n("ul",null,[n("li",null,[T,n("a",A,[S,t(a)]),z]),n("li",null,[C,B,N,R,W,n("a",J,[O,t(a)]),D,n("a",G,[F,t(a)]),L]),n("li",null,[U,n("strong",null,[I,n("strong",null,[V,n("a",K,[M,t(a)]),Q,Y,H,X,Z,$,nn]),sn]),an,tn,en,pn,on])]),n("h3",cn,[ln,un,n("a",rn,[kn,dn,t(a)])]),vn,n("h3",mn,[bn,gn,n("a",hn,[fn,yn,t(a)])]),_n,n("h3",wn,[xn,jn,n("a",Pn,[qn,En,t(a)])]),Tn,n("h3",An,[Sn,zn,n("a",Cn,[Bn,t(a)])]),Nn,n("h3",Rn,[Wn,Jn,n("a",On,[Dn,t(a)])]),Gn,n("p",null,[Fn,Ln,Un,n("a",In,[Vn,t(a)]),Kn,Mn,Qn,Yn,Hn,Xn,Zn,n("a",$n,[ns,t(a)]),ss,as,ts]),es,n("h3",ps,[os,cs,n("a",is,[ls,t(a)])]),n("blockquote",null,[n("p",null,[us,n("a",rs,[ks,t(a)]),ds]),n("p",null,[vs,n("a",ms,[bs,t(a)]),gs,hs,fs,ys,_s,ws,xs,js,Ps]),n("p",null,[qs,Es,Ts,n("a",As,[Ss,t(a)]),zs]),Cs]),Bs,n("h3",Ns,[Rs,Ws,n("a",Js,[Os,t(a)])]),n("h4",Ds,[Gs,Fs,n("a",Ls,[Us,t(a)])]),Is,n("h3",Vs,[Ks,Ms,n("a",Qs,[Ys,t(a)])]),n("p",null,[Hs,n("a",Xs,[Zs,t(a)]),$s]),na,n("ul",null,[sa,n("li",null,[aa,n("a",ta,[ea,t(a)]),pa])]),oa])}var ka=p(l,[["render",ca],["__file","16.Promise\u9898\u76EE\u5408\u96C6.html.vue"]]);export{ka as default};
