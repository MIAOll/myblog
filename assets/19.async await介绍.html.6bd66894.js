import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{o,c as e,b as n,a as c,e as s,d as a,r as i}from"./app.a63c222e.js";const l={},u=s('<h1 id="aysnc-await\u7684\u7406\u89E3" tabindex="-1"><a class="header-anchor" href="#aysnc-await\u7684\u7406\u89E3" aria-hidden="true">#</a> aysnc,await\u7684\u7406\u89E3</h1><h2 id="\u662F\u4EC0\u4E48" tabindex="-1"><a class="header-anchor" href="#\u662F\u4EC0\u4E48" aria-hidden="true">#</a> \u662F\u4EC0\u4E48</h2><p>async \u51FD\u6570\u662F\u4EC0\u4E48\uFF1F\u4E00\u53E5\u8BDD\uFF0C\u5B83\u5C31\u662F Generator \u51FD\u6570\u7684\u8BED\u6CD5\u7CD6\u3002</p><p><code>async/await</code>\u662F\u975E\u5E38\u68D2\u7684\u8BED\u6CD5\u7CD6\uFF0C\u53EF\u4EE5\u8BF4\u4ED6\u662F\u89E3\u51B3\u5F02\u6B65\u95EE\u9898\u7684\u6700\u7EC8\u89E3\u51B3\u65B9\u6848\u3002\u4ECE\u5B57\u9762\u610F\u601D\u6765\u7406\u89E3\u3002async \u662F<code>\u5F02\u6B65</code>\u7684\u610F\u601D\uFF0C\u800C await \u662F <code>\u7B49\u5F85</code> \uFF0C\u6240\u4EE5\u7406\u89E3 async\u7528\u4E8E\u7533\u660E\u4E00\u4E2Afunction\u662F\u5F02\u6B65\u7684\uFF0C\u800C await \u7528\u4E8E\u7B49\u5F85\u4E00\u4E2A\u5F02\u6B65\u65B9\u6CD5\u6267\u884C\u5B8C\u6210\u3002</p>',4),k=n("strong",null,"\u5907\u6CE8\uFF1A",-1),r=n("code",null,"await",-1),d=a("\u5173\u952E\u5B57\u53EA\u5728 async \u51FD\u6570\u5185\u6709\u6548\u3002\u5982\u679C\u4F60\u5728 async \u51FD\u6570\u4F53\u4E4B\u5916\u4F7F\u7528\u5B83\uFF0C\u5C31\u4F1A\u629B\u51FA\u8BED\u6CD5\u9519\u8BEF "),v={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",target:"_blank",rel:"noopener noreferrer"},m=n("code",null,"SyntaxError",-1),b=a(" \u3002"),w=s(`<p><strong>\u5907\u6CE8\uFF1A</strong><code>async</code>/<code>await</code>\u7684\u76EE\u7684\u4E3A\u4E86\u7B80\u5316\u4F7F\u7528\u57FA\u4E8E promise \u7684 API \u65F6\u6240\u9700\u7684\u8BED\u6CD5\u3002<code>async</code>/<code>await</code>\u7684\u884C\u4E3A\u5C31\u597D\u50CF\u642D\u914D\u4F7F\u7528\u4E86\u751F\u6210\u5668\u548C promise\u3002</p><h2 id="\u57FA\u672C\u8BED\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u8BED\u6CD5" aria-hidden="true">#</a> \u57FA\u672C\u8BED\u6CD5</h2><p>\u4F7F\u7528<code>async</code>\u5173\u952E\u5B57\u8868\u660E\u51FD\u6570\u662F\u4E00\u4E2Aasync\u51FD\u6570\uFF0C\u5185\u90E8\u4F7F\u7528<code>await</code>\u5173\u952E\u5B57\u8868\u660E\u9700\u8981\u7B49\u5F85\u5F02\u6B65\u4EFB\u52A1\u7ED3\u675F\u540E\u624D\u7EE7\u7EED\u5F80\u4E0B\u6267\u884C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token keyword">as</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token number">123</span>
<span class="token punctuation">}</span>
<span class="token keyword">as</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">data</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE\u4E0A\u9762\u4EE3\u7801\u53EF\u4EE5\u770B\u51FA\uFF0C\u8C03<strong>\u7528async\u51FD\u6570\u4F1A\u8FD4\u56DEPromise\u5BF9\u8C61</strong>\uFF0C\u8FD4\u56DE\u503C\u53EF\u4EE5\u4F5C\u4E3Athen\u65B9\u6CD5\u6210\u529F\u5904\u7406\u51FD\u6570\u7684\u53C2\u6570\u503C\u3002</p><p>\u5982\u679C\u5728<strong>async\u5185\u90E8\u5982\u679C\u629B\u51FA\u9519\u8BEF\u6216\u8005\u51FA\u73B0\u5F02\u5E38\uFF0C\u4F1A\u88ABthen\u65B9\u6CD5\u7684\u9519\u8BEF\u5904\u7406\u51FD\u6570\u6355\u83B7\u6216\u8005catch\u65B9\u6CD5\u6355\u83B7\u3002</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token keyword">as</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;\u51FA\u9519\u62C9\uFF01&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">as</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">data</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token comment">// Error: xixi, catch\u65B9\u6CD5\u6355\u83B7\u5230\u9519\u8BEF</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53E6\u5916\uFF0Casync\u51FD\u6570\u5185\u90E8\u53EF\u4EE5\u4F7F\u7528await\u5173\u952E\u5B57\uFF0C<strong>\u8868\u793A\u540E\u9762\u7684\u8868\u8FBE\u5F0F\u662F\u5F02\u6B65\u4EFB\u52A1\u3002await\u5173\u952E\u5B57\u540E\u8FB9\u7684\u8868\u8FBE\u5F0F\u53EF\u4EE5\u662F\u4E00\u4E2APromise\u5BF9\u8C61\uFF0C\u6216\u8005\u7B80\u5355(\u590D\u6742)\u6570\u636E\u7C7B\u578B(Number, String, RegExp, Boolean, Array, Objext)\u3002\u5982\u679C\u662F\u7B80\u5355(\u590D\u6742)\u6570\u636E\u7C7B\u578B\uFF0Casync\u51FD\u6570\u4F1A\u9690\u5F0F\u8C03\u7528<code>Promise.resolve</code>\u65B9\u6CD5\u5C06\u5176\u8F6C\u6362\u4E3APormise\u5BF9\u8C61\u3002</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">foo</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    window<span class="token punctuation">.</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;async&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token keyword">as</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">//foo\u51FD\u6570\u4F7F\u7528setTimeout\u6765\u6A21\u62DF\u5F02\u6B65\u3002</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">as</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// async</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token keyword">as</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">await</span> <span class="token number">123</span>   <span class="token comment">//\u5982\u679C\u662F\u5176\u4ED6\u6570\u636E\u7C7B\u578B\uFF0C\u4E5F\u662F\u5982\u6B64\u3002</span>
<span class="token punctuation">}</span>
<span class="token keyword">as</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">data</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token comment">// 123</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C<strong>await\u5173\u952E\u5B57\u540E\u9762\u7684\u8868\u8FBE\u5F0F\u662F\u975EPromise\u3001\u975Ethenable\u7684\u666E\u901A\u7684\u503C\uFF0C\u5219\u4F1A\u9690\u5F0F\u8C03\u7528<code>Promise.resolve</code>\u65B9\u6CD5\u5C06\u5176\u8F6C\u6362\u4E3APromise\u5BF9\u8C61\uFF0Cawait\u5173\u952E\u5B57\u4F1A\u5728\u5185\u90E8\u8C03\u7528then\u65B9\u6CD5\u5C06resolve\u7684\u503C\u8FD4\u56DE\u3002</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>await\u5185\u90E8\u5B9E\u73B0\u5927\u81F4\u5982\u4E0B
function await (data) {
  return new Promise((resolve, reject) =&gt; {
    resolve(data)
  }).then(data =&gt; {
    return data
  })
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u603B\u4E4B\uFF0C<strong>await\u5173\u952E\u5B57\u662Fthen\u65B9\u6CD5\u7684\u8BED\u6CD5\u7CD6\uFF0C\u4F1A\u5C06resolve\u7684\u503C\u4F20\u9012\u51FA\u6765\u3002</strong></p><p>\u53E6\u5916\uFF0C\u5982\u679C\u5728await\u5173\u952E\u5B57\u540E\u7684\u8868\u8FBE\u5F0F\u629B\u51FA\u4E86\u9519\u8BEF\uFF0C\u4F1A\u4F7Fasync\u51FD\u6570\u8FD4\u56DE\u7684Promise\u5BF9\u8C61\u4ECE<code>pending</code>\u72B6\u6001\u8F6C\u53D8\u4E3A<code>reject</code>\u72B6\u6001\uFF0C\u8FDB\u800C\u88ABcatch\u65B9\u6CD5\u6355\u83B7\u5230\u9519\u8BEF\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">foo</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;err&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token keyword">as</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">as</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">data</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span> 
<span class="token comment">// as\u51FD\u6570\u8FD4\u56DE\u7684Promise\u5BF9\u8C61\u4ECEpending\u72B6\u6001\u53D8\u4E3Areject\u72B6\u6001\u3002</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u67D0\u4E2Aawait\u5173\u952E\u5B57\u540E\u9762\u7684\u8868\u8FBE\u5F0F\u629B\u51FA\u9519\u8BEF\uFF0Casync\u51FD\u6570\u7684\u72B6\u6001\u5C31\u4F1A\u53D8\u4E3Areject\uFF0C\u90A3\u4E48\u51FD\u6570\u5C31\u4F1A\u6682\u505C\u6267\u884C\uFF0C\u540E\u9762\u7684\u8868\u8FBE\u5F0F\u5C31\u4E0D\u4F1A\u5728\u7EE7\u7EED\u6267\u884C\u3002\u56E0\u4E3APromise\u51FD\u6570\u6709\u4E00\u4E2A\u7279\u70B9\u662F\uFF0C<strong>\u4E00\u65E6\u72B6\u6001\u6539\u53D8\uFF0C\u5C31\u4E0D\u4F1A\u518D\u53D8\uFF0C\u4E4B\u540E\u5728\u8C03\u7528\u4E5F\u662F\u4FDD\u6301\u540C\u4E00\u4E2A\u72B6\u6001\u3002</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">foo</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;err&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token keyword">as</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;succ&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u4E0D\u4F1A\u6267\u884C\u5230\u8FD9\u91CC\uFF0C\u56E0\u4E3APromise\u5BF9\u8C61\u7684\u72B6\u6001\u4E00\u65E6\u6539\u53D8\u5C31\u4E0D\u4F1A\u5728\u53D8\u4E86\uFF0C\u56E0\u6B64\u4E0D\u6267\u884C\u3002</span>
<span class="token punctuation">}</span>
<span class="token keyword">as</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">data</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56E0\u4E3A<strong>async\u51FD\u6570\u9ED8\u8BA4\u60C5\u51B5\u4E0B\u8FD4\u56DE\u7684\u662FPromise\u5BF9\u8C61\uFF0C\u56E0\u6B64\u53EF\u4EE5\u5C06async\u51FD\u6570\u4F5C\u4E3Aawait\u5173\u952E\u5B57\u540E\u9762\u7684\u8868\u8FBE\u5F0F</strong>\u3002async\u51FD\u6570\u8C03\u7528\u53E6\u4E00\u4E2Aasync\u51FD\u6570\u4F1A\u66F4\u52A0\u65B9\u4FBF\uFF0C\u4E0D\u4F1A\u50CFGenerator\u51FD\u6570\u9700\u8981\u4F7F\u7528<code>yield*</code>\u8868\u8FBE\u5F0F\u6765\u8C03\u7528\u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>async function foo () {
  return Promise.resolve(&#39;async&#39;)
}
async function as () {
  return await foo()   // \u8C03\u7528foo\u51FD\u6570\u4F1A\u8FD4\u56DEPromise\u5BF9\u8C61
}
as().then(data =&gt; {
  console.log(data)
})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53E6\u5916\uFF0C\u5982\u679Casync\u51FD\u6570\u5185\u90E8\u6CA1\u6709\u629B\u51FA\u9519\u8BEF\uFF0C\u51FD\u6570\u6B63\u5E38\u6267\u884C\u3002\u90A3\u4E48\u6BCF\u4E00\u4E2Aawait\u5173\u952E\u5B57\u540E\u9762\u7684\u5F02\u6B65\u4EFB\u52A1\u4F1A\u7EE7\u53D1\u6267\u884C\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u4E00\u4E2A\u5F02\u6B65\u4EFB\u52A1\u7ED3\u675F\u4E4B\u540E\u624D\u4F1A\u6267\u884C\u53E6\u5916\u4E00\u4E2A\u5F02\u6B65\u4EFB\u52A1\uFF0C\u800C\u4E0D\u662F\u5E76\u53D1\u6267\u884C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">foo</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    window<span class="token punctuation">.</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">bar</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    window<span class="token punctuation">.</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token keyword">as</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> t1 <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">let</span> t2 <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>t2 <span class="token operator">-</span> t1<span class="token punctuation">)</span>  <span class="token comment">// \u6709\u8BEF\u5DEE\uFF0C\u5927\u69823004ms</span>
  <span class="token keyword">return</span> a <span class="token operator">+</span> b
<span class="token punctuation">}</span>
<span class="token keyword">as</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">data</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>   <span class="token comment">// \u5927\u69823s\u540E\u8F93\u516530</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u4E24\u4E2A\u5F02\u6B65\u4EFB\u52A1\u4E92\u4E0D\u4F9D\u8D56\uFF0C\u5982\u679C\u6309\u7167\u4E0A\u9762\u7684\u4EE3\u7801\uFF0C\u4E24\u4E2A\u5F02\u6B65\u4EFB\u52A1\u7EE7\u53D1\u6267\u884C\uFF0C\u8FD9\u6837\u505A\u7684\u7F3A\u70B9\u662F\u65F6\u95F4\u6D6A\u8D39\u4E86\u3002\u672C\u6765200ms\u53EF\u4EE5\u5B8C\u6210\u7684\u4E24\u4E2A\u5F02\u6B65\u4EFB\u52A1\uFF0C\u5374\u7528\u4E86400ms\u3002\u56E0\u6B64\u53EF\u4EE5<strong>\u8BA9\u4E24\u4E2A\u4E92\u4E0D\u4F9D\u8D56\u7684\u5F02\u6B65\u4EFB\u52A1\u540C\u65F6\u89E6\u53D1</strong>\u3002\u6709\u4E24\u79CD\u65B9\u6CD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u65B9\u6CD5\u4E00\uFF1A</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token keyword">as</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> t1 <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fo<span class="token punctuation">,</span> ba<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
  <span class="token comment">// \u4EE5\u4E0A\u4E24\u4E2A\u51FD\u6570\u540C\u65F6\u6267\u884C\uFF0C\u5E76\u5C06\u7ED3\u679C\u4F5C\u4E3Aawait\u5173\u952E\u5B57\u7684\u8868\u8FBE\u5F0F</span>
  <span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token keyword">await</span> fo
  <span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token keyword">await</span> ba
  <span class="token keyword">const</span> t2 <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>t2 <span class="token operator">-</span> t1<span class="token punctuation">)</span>
  <span class="token keyword">return</span> a <span class="token operator">+</span> b
<span class="token punctuation">}</span>

<span class="token comment">// \u5199\u6CD5\u4E8C\uFF1A\u7ED3\u5408\u4F7F\u7528Promise.all\u7B49\u5F85\u6240\u6709\u5F02\u6B65\u4EFB\u52A1\u5B8C\u6210\u540E\u624D\u4F1A\u8FD4\u56DE</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token keyword">as</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> t1 <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> t2 <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>t2 <span class="token operator">-</span> t1<span class="token punctuation">)</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token keyword">as</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">data</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>  <span class="token comment">// 30</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="async\u4F5C\u7528" tabindex="-1"><a class="header-anchor" href="#async\u4F5C\u7528" aria-hidden="true">#</a> async\u4F5C\u7528</h3><blockquote><p><code>async</code>\u58F0\u660Efunction\u662F\u4E00\u4E2A\u5F02\u6B65\u51FD\u6570\uFF0C\u8FD4\u56DE\u4E00\u4E2A<code>promise</code>\u5BF9\u8C61\uFF0C\u53EF\u4EE5\u4F7F\u7528 then \u65B9\u6CD5\u6DFB\u52A0\u56DE\u8C03\u51FD\u6570\u3002<code>async</code>\u51FD\u6570\u5185\u90E8<code>return</code>\u8BED\u53E5\u8FD4\u56DE\u7684\u503C\uFF0C\u4F1A\u6210\u4E3A<code>then</code>\u65B9\u6CD5\u56DE\u8C03\u51FD\u6570\u7684\u53C2\u6570\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token string">&#39;test&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>test<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [AsyncFunction: test] async\u51FD\u6570\u662F[\`AsyncFunction\`]\u6784\u9020\u51FD\u6570\u7684\u5B9E\u4F8B</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise { &#39;test&#39; }</span>

<span class="token comment">// async\u8FD4\u56DE\u7684\u662F\u4E00\u4E2Apromise\u5BF9\u8C61</span>
<span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// test</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// \u5982\u679Casync\u51FD\u6570\u6CA1\u6709\u8FD4\u56DE\u503C async\u51FD\u6570\u8FD4\u56DE\u4E00\u4E2Aundefined\u7684promise\u5BF9\u8C61</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6CA1\u6709\u8FD4\u56DE&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise { undefined }</span>
<span class="token comment">// \u53EF\u4EE5\u770B\u5230async\u51FD\u6570\u8FD4\u56DE\u503C\u548CPromise.resolve()\u4E00\u6837\uFF0C\u5C06\u8FD4\u56DE\u503C\u5305\u88C5\u6210promise\u5BF9\u8C61\uFF0C\u5982\u679C\u6CA1\u6709\u8FD4\u56DE\u503C\u5C31\u8FD4\u56DEundefined\u7684promise\u5BF9\u8C61</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="await" tabindex="-1"><a class="header-anchor" href="#await" aria-hidden="true">#</a> await</h3><blockquote><p>await \u64CD\u4F5C\u7B26\u53EA\u80FD\u5728\u5F02\u6B65\u51FD\u6570 async function \u5185\u90E8\u4F7F\u7528\u3002</p><p>\u5982\u679C\u4E00\u4E2A Promise \u88AB\u4F20\u9012\u7ED9\u4E00\u4E2A await \u64CD\u4F5C\u7B26\uFF0Cawait \u5C06\u7B49\u5F85 Promise \u6B63\u5E38\u5904\u7406\u5B8C\u6210\u5E76\u8FD4\u56DE\u5176\u5904\u7406\u7ED3\u679C\uFF0C\u4E5F\u5C31\u662F\u8BF4\u5B83\u4F1A\u963B\u585E\u540E\u9762\u7684\u4EE3\u7801\uFF0C\u7B49\u5F85 Promise \u5BF9\u8C61\u7ED3\u679C\u3002\u5982\u679C\u7B49\u5F85\u7684\u4E0D\u662F Promise \u5BF9\u8C61\uFF0C\u5219\u8FD4\u56DE\u8BE5\u503C\u672C\u8EAB\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;test 1000&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token string">&#39;fn&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> res0 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        res1 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        res2 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res0<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1s \u540E\u624D\u6253\u5370\u51FA\u7ED3\u679C \u4E3A\u4EC0\u4E48\u5462 \u5C31\u662F\u56E0\u4E3A res1\u5728\u7B49\u5F85promise\u7684\u7ED3\u679C \u963B\u585E\u4E86\u540E\u9762\u4EE3\u7801\u3002</span>
<span class="token comment">//fn</span>
<span class="token comment">//VM37:17 test 1000</span>
<span class="token comment">//VM37:18 fn</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u9519\u8BEF\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#\u9519\u8BEF\u5904\u7406" aria-hidden="true">#</a> \u9519\u8BEF\u5904\u7406</h2><blockquote><p>\u5982\u679C<code>await</code>\u540E\u9762\u7684\u5F02\u6B65\u64CD\u4F5C\u51FA\u9519\uFF0C\u90A3\u4E48\u7B49\u540C\u4E8E<code>async</code>\u51FD\u6570\u8FD4\u56DE\u7684 Promise \u5BF9\u8C61\u88AB<code>reject</code>\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;\u9519\u8BEF\u4E86&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">,</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token parameter">err</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;err &#39;</span><span class="token punctuation">,</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// err \u9519\u8BEF\u4E86</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u9632\u6B62\u51FA\u9519\u7684\u65B9\u6CD5\uFF0C\u4E5F\u662F\u5C06\u5176\u653E\u5728<code>try...catch</code>\u4EE3\u7801\u5757\u4E4B\u4E2D\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;\u9519\u8BEF\u4E86&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;err&#39;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token keyword">await</span><span class="token punctuation">(</span><span class="token string">&#39;\u6210\u529F\u4E86&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u591A\u4E2A<code>await</code>\u547D\u4EE4\u540E\u9762\u7684\u5F02\u6B65\u64CD\u4F5C\uFF0C\u5982\u679C\u4E0D\u5B58\u5728\u7EE7\u53D1\u5173\u7CFB\uFF08\u5373\u4E92\u4E0D\u4F9D\u8D56\uFF09\uFF0C\u6700\u597D\u8BA9\u5B83\u4EEC\u540C\u65F6\u89E6\u53D1\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getFoo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> bar <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u4E0A\u9762\u8FD9\u6837\u5199\u6CD5 getFoo\u5B8C\u6210\u4EE5\u540E\uFF0C\u624D\u4F1A\u6267\u884CgetBar</span>

<span class="token comment">// \u540C\u65F6\u89E6\u53D1\u5199\u6CD5 \u2193</span>

<span class="token comment">// \u5199\u6CD5\u4E00</span>
<span class="token keyword">let</span> <span class="token punctuation">[</span>foo<span class="token punctuation">,</span> bar<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">getFoo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">getBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u5199\u6CD5\u4E8C</span>
<span class="token keyword">let</span> fooPromise <span class="token operator">=</span> <span class="token function">getFoo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> barPromise <span class="token operator">=</span> <span class="token function">getBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token keyword">await</span> fooPromise<span class="token punctuation">;</span>
<span class="token keyword">let</span> bar <span class="token operator">=</span> <span class="token keyword">await</span> barPromise<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7531\u4E8Easync<strong>\u51FD\u6570\u5185\u90E8\u7684\u5F02\u6B65\u4EFB\u52A1\u4E00\u65E6\u51FA\u73B0\u9519\u8BEF\uFF0C\u90A3\u4E48\u5C31\u7B49\u540C\u4E8Easync\u51FD\u6570\u8FD4\u56DE\u7684Promise\u5BF9\u8C61\u88ABreject</strong>\u3002\u56E0\u6B64\uFF0C\u4E3A\u4E86\u9632\u6B62\u5F02\u6B65\u4EFB\u52A1\u51FA\u73B0\u9519\u8BEF\uFF0C\u53EF\u4EE5\u4F7F\u7528<code>try...catch</code>\u6765\u6355\u83B7\u9519\u8BEF\uFF0C\u4F7Fasync\u51FD\u6570\u5185\u90E8\u53EF\u4EE5\u6B63\u5E38\u6267\u884C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token keyword">as</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    a <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    b <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">return</span> a <span class="token operator">+</span> b
<span class="token punctuation">}</span>
<span class="token keyword">as</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">data</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment">// 30</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u77E5\u9053\uFF0C<em><strong><code>try...catch</code>\u53EA\u80FD\u7528\u4E8E\u5904\u7406\u540C\u6B65\u7684\u64CD\u4F5C\uFF0C\u5BF9\u4E8E\u5F02\u6B65\u4EFB\u52A1\u65E0\u6CD5\u6355\u83B7\u5230\u9519\u8BEF\u3002\u800Cawait\u5173\u952E\u5B57\u80FD\u591F\u6682\u505C\u51FD\u6570\u5904\u7406\uFF0C\u7B49\u5F85\u5F02\u6B65\u4EFB\u52A1\u7ED3\u675F\u4E4B\u540E\u8FD4\u56DE\u3002\u56E0\u6B64\u5728async\u51FD\u6570\u4E2D\u4F7F\u7528<code>try...catch</code>\u7ED3\u5408await\u5173\u952E\u5B57\u6355\u83B7\u5F02\u6B65\u9519\u8BEF\u662F\u4E00\u4E2A\u4E0D\u9519\u7684\u65B9\u6CD5\u3002</strong></em></p><h2 id="\u5F02\u6B65\u5E94\u7528" tabindex="-1"><a class="header-anchor" href="#\u5F02\u6B65\u5E94\u7528" aria-hidden="true">#</a> \u5F02\u6B65\u5E94\u7528</h2><p>\u6211\u4EEC\u6765\u770B\u770B\u4F7F\u7528Promise\u3001Generator\u3001async\u6765\u5B9E\u73B0\u5F02\u6B65\u5E94\u7528\u7684\u5DEE\u522B\u3002\u63A5\u4E0B\u6765\u4F1A\u4F7F\u7528<code>setTimeout</code>\u6765\u6A21\u62DF\u5F02\u6B65\u3002</p><p>\u5148\u6765\u770B\u4E24\u4E2A\u57FA\u7840\u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">foo</span> <span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    window<span class="token punctuation">.</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">180</span>
      <span class="token punctuation">}</span>
      data <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> obj<span class="token punctuation">,</span> data<span class="token punctuation">)</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">bar</span> <span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    window<span class="token punctuation">.</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token function">talk</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      data <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> obj<span class="token punctuation">,</span> data<span class="token punctuation">)</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1500</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E24\u4E2A\u51FD\u6570\u5185\u90E8\u90FD\u8FD4\u56DE\u4E86Promise\u5B9E\u4F8B\u5BF9\u8C61\uFF0C\u901A\u8FC7<code>Object.assign</code>\u6765\u5408\u5E76\u4F20\u9012\u8FC7\u6765\u7684\u53C2\u6570\u3002</p><p>\u9996\u5148\u770B\u770B\u7EAFPromise\u5BF9\u8C61\u7684\u5B9E\u73B0\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">main</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;keith&#39;</span>
    <span class="token punctuation">}</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">data</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">foo</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">bar</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">data</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> data<span class="token punctuation">.</span><span class="token function">talk</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">// keith 180</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8C03\u7528\u8FC7\u7A0B\u4E2D\u5C31\u662F\u5728\u4E0D\u65AD\u4F7F\u7528then\u65B9\u6CD5\uFF0C\u4E0D\u591F\u76F4\u89C2\uFF0C\u64CD\u4F5C\u672C\u8EAB\u7684\u8BED\u4E49\u4E0D\u592A\u5BB9\u6613\u770B\u51FA\u6765\u3002\u800C\u4E14\u6709\u53EF\u80FD\u51FA\u73B0\u56DE\u8C03\u5730\u72F1\u7684\u98CE\u9669\u3002</p><p>\u63A5\u4E0B\u6765\u770B\u770BGenerator\u51FD\u6570\u7684\u5B9E\u73B0\u3002\u7531\u4E8EGenerator\u51FD\u6570\u7684\u8C03\u7528\u9700\u8981\u624B\u52A8\u6267\u884C\uFF0C\u56E0\u6B64\u5199\u4E86run\u51FD\u6570\u6765\u5B9E\u73B0\u6D41\u7A0B\u81EA\u52A8\u63A7\u5236\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token operator">*</span><span class="token function">gen</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;keith&#39;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> fooData <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">foo</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
  <span class="token keyword">const</span> barData <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">bar</span><span class="token punctuation">(</span>fooData<span class="token punctuation">)</span>
  <span class="token keyword">return</span> barData<span class="token punctuation">.</span><span class="token function">talk</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">run</span> <span class="token punctuation">(</span><span class="token parameter">gen</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> g <span class="token operator">=</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> <span class="token function-variable function">next</span> <span class="token operator">=</span> <span class="token parameter">data</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>done<span class="token punctuation">)</span> <span class="token keyword">return</span> result<span class="token punctuation">.</span>value
    result<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">data</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">next</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">run</span><span class="token punctuation">(</span>gen<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528run\u51FD\u6570\u6765\u5B9E\u73B0\u81EA\u52A8\u6D41\u7A0B\u63A7\u5236\uFF0CGenerator\u51FD\u6570\u7684\u597D\u5904\u76F8\u5BF9\u4E8EPromise\u5BF9\u8C61\u6765\u8BF4\uFF0C\u4F7F\u5F97\u5F02\u6B65\u7684\u8FC7\u7A0B\u540C\u6B65\u5316\uFF0C\u540C\u65F6\u5C11\u4E86\u56DE\u8C03\u5730\u72F1\u7684\u98CE\u9669\u3002\u4F46\u662F\u7F3A\u70B9\u662F\u9700\u8981\u4F7F\u7528\u50CFrun\u51FD\u6570\u6216\u8005co\u6A21\u5757\u6765\u5B9E\u73B0\u6D41\u7A0B\u63A7\u5236\u3002</p><p>\u63A5\u4E0B\u6765\u4F7F\u7528async\u51FD\u6570\u6765\u5B9E\u73B0\u770B\u770B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;keith&#39;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> fooData <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">foo</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
  <span class="token keyword">const</span> barData <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">bar</span><span class="token punctuation">(</span>fooData<span class="token punctuation">)</span>
  <span class="token keyword">return</span> barData
<span class="token punctuation">}</span>
<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">data</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  data<span class="token punctuation">.</span><span class="token function">talk</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u53EF\u4EE5\u770B\u51FA\uFF0C\u4F7F\u7528async\u51FD\u6570\u7684\u4EE3\u7801\u91CF\u6700\u5C11\uFF0C\u800C\u4E14\u4F7F\u5F97\u5F02\u6B65\u8FC7\u7A0B\u540C\u6B65\u5316\uFF0C\u66F4\u8FDB\u4E00\u6B65\uFF0Casync\u51FD\u6570\u5185\u7F6E\u6267\u884C\u5668\u3002\u8C03\u7528\u7684\u65B9\u6CD5\u66F4\u52A0\u7B80\u6D01\u3002</p><h2 id="async-await\u4F18\u70B9" tabindex="-1"><a class="header-anchor" href="#async-await\u4F18\u70B9" aria-hidden="true">#</a> async/await\u4F18\u70B9</h2><blockquote><p>async/await\u7684\u4F18\u52BF\u5728\u4E8E\u5904\u7406\u7531\u591A\u4E2APromise\u7EC4\u6210\u7684 then \u94FE\uFF0C\u5728\u4E4B\u524D\u7684Promise\u6587\u7AE0\u4E2D\u63D0\u8FC7\u7528then\u5904\u7406\u56DE\u8C03\u5730\u72F1\u7684\u95EE\u9898\uFF0Casync/await\u76F8\u5F53\u4E8E\u5BF9promise\u7684\u8FDB\u4E00\u6B65\u4F18\u5316\u3002 \u5047\u8BBE\u4E00\u4E2A\u4E1A\u52A1\uFF0C\u5206\u591A\u4E2A\u6B65\u9AA4\uFF0C\u4E14\u6BCF\u4E2A\u6B65\u9AA4\u90FD\u662F\u5F02\u6B65\u7684\uFF0C\u800C\u4E14\u4F9D\u8D56\u4E0A\u4E2A\u6B65\u9AA4\u7684\u6267\u884C\u7ED3\u679C\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5047\u8BBE\u8868\u5355\u63D0\u4EA4\u524D\u8981\u901A\u8FC7\u4FE9\u4E2A\u6821\u9A8C\u63A5\u53E3</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token parameter">ms</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u6A21\u4EFF\u5F02\u6B65 </span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">check </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>ms<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> ms<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">check1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;check1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">check2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;check2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// -------------promise------------</span>
<span class="token keyword">function</span> <span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;submit&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u7ECF\u8FC7\u4FE9\u4E2A\u6821\u9A8C \u591A\u7EA7\u5173\u8054 promise\u4F20\u503C\u5D4C\u5957\u8F83\u6DF1</span>
  <span class="token function">check1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res1</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token function">check2</span><span class="token punctuation">(</span>res1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res2</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
       <span class="token comment">/*
        * \u63D0\u4EA4\u8BF7\u6C42
        */</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// -------------async/await-----------</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">asyncAwaitSubmit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> res1 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">check1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        res2 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">check2</span><span class="token punctuation">(</span>res1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res1<span class="token punctuation">,</span> res2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">/*
        * \u63D0\u4EA4\u8BF7\u6C42
        */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">resolveAfter2Seconds</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;starting slow promise&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;slow&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;slow promise is done&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> <span class="token function-variable function">resolveAfter1Second</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;starting fast promise&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;fast&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;fast promise is done&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> <span class="token function-variable function">sequentialStart</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;==SEQUENTIAL START==&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 1. Execution gets here almost instantly</span>
  <span class="token keyword">const</span> slow <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">resolveAfter2Seconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>slow<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2. this runs 2 seconds after 1.</span>

  <span class="token keyword">const</span> fast <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">resolveAfter1Second</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fast<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3. this runs 3 seconds after 1.</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> <span class="token function-variable function">concurrentStart</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;==CONCURRENT START with await==&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> slow <span class="token operator">=</span> <span class="token function">resolveAfter2Seconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// starts timer immediately</span>
  <span class="token keyword">const</span> fast <span class="token operator">=</span> <span class="token function">resolveAfter1Second</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// starts timer immediately</span>

  <span class="token comment">// 1. Execution gets here almost instantly</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> slow<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2. this runs 2 seconds after 1.</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> fast<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3. this runs 2 seconds after 1., immediately after 2., since fast is already resolved</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> <span class="token function-variable function">concurrentPromise</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;==CONCURRENT START with Promise.all==&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">resolveAfter2Seconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">resolveAfter1Second</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">messages</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>messages<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// slow</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>messages<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// fast</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> <span class="token function-variable function">parallel</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;==PARALLEL with await Promise.all==&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Start 2 &quot;jobs&quot; in parallel and wait for both of them to complete</span>
  <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
      <span class="token punctuation">(</span><span class="token keyword">async</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token function">resolveAfter2Seconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">(</span><span class="token keyword">async</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token function">resolveAfter1Second</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// This function does not handle errors. See warning below!</span>
<span class="token keyword">var</span> <span class="token function-variable function">parallelPromise</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;==PARALLEL with Promise.then==&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">resolveAfter2Seconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">resolveAfter1Second</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">sequentialStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// after 2 seconds, logs &quot;slow&quot;, then after 1 more second, &quot;fast&quot;</span>

<span class="token comment">// wait above to finish</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>concurrentStart<span class="token punctuation">,</span> <span class="token number">4000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// after 2 seconds, logs &quot;slow&quot; and then &quot;fast&quot;</span>

<span class="token comment">// wait again</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>concurrentPromise<span class="token punctuation">,</span> <span class="token number">7000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// same as concurrentStart</span>

<span class="token comment">// wait again</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>parallel<span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// truly parallel: after 1 second, logs &quot;fast&quot;, then after 1 more second, &quot;slow&quot;</span>

<span class="token comment">// wait again</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>parallelPromise<span class="token punctuation">,</span> <span class="token number">13000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// same as parallel</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h1><blockquote><p>async/await\u8BED\u6CD5\u7CD6\u53EF\u4EE5\u8BA9\u5F02\u6B65\u4EE3\u7801\u53D8\u5F97\u66F4\u6E05\u6670\uFF0C\u53EF\u8BFB\u6027\u66F4\u9AD8\uFF0C\u6240\u4EE5\u5FEB\u5FEB\u5377\u8D77\u6765\u5427\u3002Generator\u6709\u5174\u8DA3\u7684\u53EF\u4EE5\u4E86\u89E3\u4E00\u4E0B\u3002</p></blockquote>`,58);function f(y,g){const t=i("ExternalLinkIcon");return o(),e("div",null,[u,n("p",null,[k,r,d,n("a",v,[m,c(t)]),b]),w])}var P=p(l,[["render",f],["__file","19.async await\u4ECB\u7ECD.html.vue"]]);export{P as default};
