import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{o,c as e,b as n,a as t,e as s,r as c}from"./app.a63c222e.js";const l={},i=s(`<h1 id="\u521D\u63A2prototype\u539F\u578B" tabindex="-1"><a class="header-anchor" href="#\u521D\u63A2prototype\u539F\u578B" aria-hidden="true">#</a> \u521D\u63A2prototype\u539F\u578B</h1><p>1.\u5927\u90E8\u5206\u201C\u51FD\u6570\u6570\u636E\u7C7B\u578B\u201D\u7684\u503C\u90FD\u5177\u5907\u201Cprototype\uFF08\u539F\u578B/\u663E\u5F0F\u539F\u578B\uFF09\u201D\u5C5E\u6027\uFF0C\u5C5E\u6027\u503C\u672C\u8EAB\u662F\u4E00\u4E2A\u5BF9\u8C61\u300C\u6D4F\u89C8\u5668\u4F1A\u9ED8\u8BA4\u4E3A\u5176\u5F00\u8F9F\u4E00\u4E2A<strong>\u5806\u5185\u5B58</strong>\uFF0C\u7528\u6765\u5B58\u50A8\u5F53\u524D\u7C7B\u6240\u5C5E\u5B9E\u4F8B\uFF0C\u53EF\u4EE5\u8C03\u7528\u7684\u516C\u5171\u7684\u5C5E\u6027\u548C\u65B9\u6CD5\u300D\uFF0C\u5728\u6D4F\u89C8\u5668\u9ED8\u8BA4\u5F00\u8F9F\u7684\u8FD9\u4E2A\u5806\u5185\u5B58\u4E2D**\u300C\u539F\u578B\u5BF9\u8C61\u300D\u6709\u4E00\u4E2A\u9ED8\u8BA4\u7684\u5C5E\u6027\u201Cconstructor\uFF08\u6784\u9020\u51FD\u6570/\u6784\u9020\u5668\uFF09**\u201D\uFF0C\u5C5E\u6027\u503C\u662F\u5F53\u524D\u51FD\u6570/\u7C7B\u672C\u8EAB\uFF01\uFF01 \u300C\u51FD\u6570\u6570\u636E\u7C7B\u578B\u300D</p><ul><li>\u666E\u901A\u51FD\u6570\uFF08\u5B9E\u540D\u6216\u8005\u533F\u540D\u51FD\u6570\uFF09</li><li>\u7BAD\u5934\u51FD\u6570</li><li>\u6784\u9020\u51FD\u6570/\u7C7B\u300C\u5185\u7F6E\u7C7B/\u81EA\u5B9A\u4E49\u7C7B\u300D</li><li>\u751F\u6210\u5668\u51FD\u6570 Generator</li><li>...</li></ul><p>\u300C\u4E0D\u5177\u5907prototype\u7684\u51FD\u6570\u300D</p><ul><li>\u7BAD\u5934\u51FD\u6570 const fn=()=&gt;{}</li><li>\u57FA\u4E8EES6\u7ED9\u5BF9\u8C61\u67D0\u4E2A\u6210\u5458\u8D4B\u503C\u51FD\u6570\u503C\u7684\u5FEB\u6377\u64CD\u4F5C</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">fn1</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token comment">// \u5E38\u89C4\u5199\u6CD5  \u5177\u5907prototype\u5C5E\u6027</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">fn2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token comment">// \u5FEB\u6377\u5199\u6CD5  \u4E0D\u5177\u5907prototype\u5C5E\u6027</span>
  <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">class</span> <span class="token class-name">Fn</span> <span class="token punctuation">{</span>
  <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment">//\u8FD9\u6837\u7684\u4E5F\u4E0D\u5177\u5907prototype\u5C5E\u6027</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>...</li></ul><p>2.\u6BCF\u4E00\u4E2A\u201C\u5BF9\u8C61\u6570\u636E\u7C7B\u578B\u201D\u7684\u503C\u90FD\u5177\u5907\u4E00\u4E2A\u5C5E\u6027\u201C<strong>proto</strong>\uFF08\u539F\u578B\u94FE/\u9690\u5F0F\u539F\u578B\uFF09\u201D\uFF0C\u5C5E\u6027\u503C\u6307\u5411\u201C\u81EA\u5DF1\u6240\u5C5E\u7C7B\u7684\u539F\u578Bprototype\u201D \u300C\u5BF9\u8C61\u6570\u636E\u7C7B\u578B\u503C\u300D</p><ul><li>\u666E\u901A\u5BF9\u8C61</li><li>\u7279\u6B8A\u5BF9\u8C61\uFF1A\u6570\u7EC4\u3001\u6B63\u5219\u3001\u65E5\u671F\u3001Math\u3001Error...</li><li>\u51FD\u6570\u5BF9\u8C61</li><li>\u5B9E\u4F8B\u5BF9\u8C61</li><li>\u6784\u9020\u51FD\u6570.prototype</li><li>...</li></ul><p>\u4F8B\u5982\uFF0C\u9A8C\u8BC1\u201CforEach\u201D\u662F\u5426\u4E3Aarr\u5BF9\u8C61\u7684\u79C1\u6709\u5C5E\u6027</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">&#39;forEach&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//-&gt;false</span>
<span class="token comment">// \u7B80\u79F0\uFF1A\u9A8C\u8BC1\u201CforEach\u201D\u662F\u5426\u4E3Aarr\u5BF9\u8C61\u7684\u79C1\u6709\u5C5E\u6027</span>
<span class="token comment">// \u5168\u79F0\uFF1Aarr\u6309\u7167\u539F\u578B\u94FE\u67E5\u627E\u673A\u5236\uFF0C\u627E\u5230\u7684\u662FObject.prototype.hasOwnProperty\u65B9\u6CD5\u300C@A\u300D\uFF0C\u5E76\u4E14\u628A\u627E\u5230\u7684@A\u6267\u884C</span>
<span class="token comment">//   + \u65B9\u6CD5\u4E2D\u7684this-&gt;arr\u300C\u6211\u4EEC\u8981\u64CD\u4F5C\u7684\u5BF9\u8C61\u300D</span>
<span class="token comment">//   + \u4F20\u9012\u7684\u5B9E\u53C2-&gt;\u201CforEach\u201D\u300C\u6211\u4EEC\u8981\u9A8C\u8BC1\u7684\u5C5E\u6027\u300D</span>
<span class="token comment">// @A\u65B9\u6CD5\u7684\u4F5C\u7528\u662F\uFF0C\u9A8C\u8BC1\u201C\u5B9E\u53C2\u201D\u662F\u5426\u4E3A\u5F53\u524D\u201Cthis\u201D\u7684\u4E00\u4E2A\u79C1\u6709\u5C5E\u6027</span>
 <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span><span class="token string">&#39;forEach&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),u={href:"https://imgse.com/i/v6pnSS",target:"_blank",rel:"noopener noreferrer"},k=n("img",{src:"https://s1.ax1x.com/2022/08/22/v6pnSS.png",alt:"v6pnSS.png"},null,-1),r=s(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">getX</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">Fn</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">getX</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name">Fn</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">getY</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> f1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fn</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> f2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fn</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f1<span class="token punctuation">.</span>getX <span class="token operator">===</span> f2<span class="token punctuation">.</span>getX<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f1<span class="token punctuation">.</span>getY <span class="token operator">===</span> f2<span class="token punctuation">.</span>getY<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f1<span class="token punctuation">.</span>__proto__<span class="token punctuation">.</span>getY <span class="token operator">===</span> <span class="token class-name">Fn</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>getY<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f1<span class="token punctuation">.</span>__proto__<span class="token punctuation">.</span>getX <span class="token operator">===</span> f2<span class="token punctuation">.</span>getX<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f1<span class="token punctuation">.</span>getX <span class="token operator">===</span> <span class="token class-name">Fn</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>getX<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f1<span class="token punctuation">.</span>constructor<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Fn</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Fn</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token class-name">__proto__</span><span class="token punctuation">.</span>constructor<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Object</span>
f1<span class="token punctuation">.</span><span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//100</span>
f1<span class="token punctuation">.</span>__proto__<span class="token punctuation">.</span><span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//undefined</span>
f2<span class="token punctuation">.</span><span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 200</span>
<span class="token class-name">Fn</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),d={href:"https://imgse.com/i/vyztA0",target:"_blank",rel:"noopener noreferrer"},m=n("img",{src:"https://s1.ax1x.com/2022/08/22/vyztA0.png",alt:"vyztA0.png"},null,-1),v=s(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Dog</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">Dog</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">bark</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;wangwang&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">Dog</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">sayName</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;my name is &#39;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> sanmao <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dog</span><span class="token punctuation">(</span><span class="token string">&#39;\u4E09\u6BDB&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
sanmao<span class="token punctuation">.</span><span class="token function">sayName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
sanmao<span class="token punctuation">.</span><span class="token function">bark</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u81EA\u5DF1\u5B9E\u73B0\u4E00\u4E2Anew" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5DF1\u5B9E\u73B0\u4E00\u4E2Anew" aria-hidden="true">#</a> \u81EA\u5DF1\u5B9E\u73B0\u4E00\u4E2Anew</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token keyword">function</span> <span class="token function">_new</span><span class="token punctuation">(</span><span class="token parameter">Ctor<span class="token punctuation">,</span> <span class="token operator">...</span>params</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> obj<span class="token punctuation">,</span>
        result<span class="token punctuation">,</span>
        proto <span class="token operator">=</span> <span class="token class-name">Ctor</span><span class="token punctuation">.</span>prototype<span class="token punctuation">,</span>
        ct <span class="token operator">=</span> <span class="token keyword">typeof</span> Ctor<span class="token punctuation">;</span>
    <span class="token comment">// \u6821\u9A8C\u89C4\u5219</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Ctor <span class="token operator">===</span> Symbol <span class="token operator">||</span> Ctor <span class="token operator">===</span> BigInt <span class="token operator">||</span> ct <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">||</span> <span class="token operator">!</span>proto<span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Ctor<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is not a constuctor!</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    obj <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token class-name">Ctor</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span>
    result <span class="token operator">=</span> <span class="token function">Ctor</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token operator">...</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(object|function)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> result<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token keyword">return</span> obj<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> sanmao <span class="token operator">=</span> <span class="token function">_new</span><span class="token punctuation">(</span>Dog<span class="token punctuation">,</span> <span class="token string">&#39;\u4E09\u6BDB&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
sanmao<span class="token punctuation">.</span><span class="token function">bark</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//=&gt;&quot;wangwang&quot;</span>
sanmao<span class="token punctuation">.</span><span class="token function">sayName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//=&gt;&quot;my name is \u4E09\u6BDB&quot;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sanmao <span class="token keyword">instanceof</span> <span class="token class-name">Dog</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//=&gt;true </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u81EA\u5DF1\u5B9E\u73B0\u4E00\u4E2Aobject-create" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5DF1\u5B9E\u73B0\u4E00\u4E2Aobject-create" aria-hidden="true">#</a> \u81EA\u5DF1\u5B9E\u73B0\u4E00\u4E2AObject.create</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Object.create([obj])\uFF1A\u521B\u5EFA\u4E00\u4E2A\u7A7A\u5BF9\u8C61\uFF0C\u5E76\u4E14\u8BA9\u7A7A\u5BF9\u8C61.__proto__\u6307\u5411[obj] \u201C\u628A[obj]\u4F5C\u4E3A\u65B0\u5B9E\u4F8B\u5BF9\u8C61\u7684\u539F\u578B\u201D</span>
<span class="token comment">//   + [obj]\u53EF\u4EE5\u662F\u4E00\u4E2A\u5BF9\u8C61\u6216\u8005\u662Fnull\uFF0C\u4F46\u662F\u4E0D\u80FD\u662F\u5176\u4ED6\u7684\u503C</span>
<span class="token comment">//     + Object.create(null)  \u521B\u5EFA\u4E00\u4E2A\u4E0D\u5177\u5907__proto__\u5C5E\u6027\u7684\u5BF9\u8C61\u300C\u4E0D\u662F\u4EFB\u4F55\u7C7B\u7684\u5B9E\u4F8B\u300D</span>


<span class="token comment">// \u9762\u8BD5\u9898\uFF1A\u91CD\u5199Object.create()</span>
Object<span class="token punctuation">.</span><span class="token function-variable function">create</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token parameter">prototype</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>prototype <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> prototype <span class="token operator">!==</span> <span class="token string">&quot;object&quot;</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;Object prototype may only be an Object or null&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> <span class="token function-variable function">Proxy</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">Proxy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token class-name">Proxy</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> prototype<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function b(f,g){const a=c("ExternalLinkIcon");return o(),e("div",null,[i,n("p",null,[n("a",u,[k,t(a)])]),r,n("p",null,[n("a",d,[m,t(a)])]),v])}var _=p(l,[["render",b],["__file","10.\u521D\u63A2prototype\u539F\u578B.html.vue"]]);export{_ as default};
