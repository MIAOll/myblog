import{_ as t}from"./plugin-vue_export-helper.21dcd24c.js";import{o as e,c as o,b as n,a as c,e as s,d as a,r as l}from"./app.a63c222e.js";const i={},u=s(`<h1 id="\u51E0\u6BB5\u4EE3\u7801\u4ECB\u7ECDpromise" tabindex="-1"><a class="header-anchor" href="#\u51E0\u6BB5\u4EE3\u7801\u4ECB\u7ECDpromise" aria-hidden="true">#</a> \u51E0\u6BB5\u4EE3\u7801\u4ECB\u7ECDPromise</h1><h2 id="_1-promise\u7ACB\u5373\u6267\u884C" tabindex="-1"><a class="header-anchor" href="#_1-promise\u7ACB\u5373\u6267\u884C" aria-hidden="true">#</a> 1.Promise\u7ACB\u5373\u6267\u884C</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;create a promise&#39;</span><span class="token punctuation">)</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;after new promise&#39;</span><span class="token punctuation">)</span>

p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">/*&quot;create a promise&quot;
&quot;after new Promise&quot;
&quot;success&quot;*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-promise-\u4E09\u79CD\u72B6\u6001" tabindex="-1"><a class="header-anchor" href="#_2-promise-\u4E09\u79CD\u72B6\u6001" aria-hidden="true">#</a> 2.Promise \u4E09\u79CD\u72B6\u6001</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> p1<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">var</span> p2<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">500</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">var</span> p3<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">reject</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">500</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p1<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p2<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p3<span class="token punctuation">)</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p2<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p3<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span>
p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
p2<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
p3<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// Promise {[[PromiseStatus]]: &quot;resolved&quot;, [[PromiseValue]]: 1}</span>
<span class="token comment">// Promise {[[PromiseStatus]]: &quot;pending&quot;, [[PromiseValue]]: undefined}</span>
<span class="token comment">// Promise {[[PromiseStatus]]: &quot;pending&quot;, [[PromiseValue]]: undefined}</span>
<span class="token comment">// 1</span>
<span class="token comment">// 2</span>
<span class="token comment">// 3</span>
<span class="token comment">// Promise {[[PromiseStatus]]: &quot;resolved&quot;, [[PromiseValue]]: 2}</span>
<span class="token comment">// Promise {[[PromiseStatus]]: &quot;rejected&quot;, [[PromiseValue]]: 3}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Promise\u7684\u5185\u90E8\u5B9E\u73B0\u662F\u4E00\u4E2A\u72B6\u6001\u673A\u3002Promise\u6709\u4E09\u79CD\u72B6\u6001\uFF1Apending\uFF0Cresolved\uFF0Crejected\u3002\u5F53Promise\u521A\u521B\u5EFA\u5B8C\u6210\u65F6\uFF0C\u5904\u4E8Epending\u72B6\u6001\uFF1B\u5F53Promise\u4E2D\u7684\u51FD\u6570\u53C2\u6570\u6267\u884C\u4E86resolve\u540E\uFF0CPromise\u7531pending\u72B6\u6001\u53D8\u6210resolved\u72B6\u6001\uFF1B\u5982\u679C\u5728Promise\u7684\u51FD\u6570\u53C2\u6570\u4E2D\u6267\u884C\u7684\u4E0D\u662Fresolve\u65B9\u6CD5\uFF0C\u800C\u662Freject\u65B9\u6CD5\uFF0C\u90A3\u4E48Promise\u4F1A\u7531pending\u72B6\u6001\u53D8\u6210rejected\u72B6\u6001\u3002</p><p><strong>Promise\u7684\u5185\u90E8\u5B9E\u73B0\u662F\u4E00\u4E2A\u72B6\u6001\u673A\u3002Promise\u6709\u4E09\u79CD\u72B6\u6001\uFF1Apending\uFF0Cresolved\uFF0Crejected\u3002\u5F53Promise\u521A\u521B\u5EFA\u5B8C\u6210\u65F6\uFF0C\u5904\u4E8Epending\u72B6\u6001\uFF1B\u5F53Promise\u4E2D\u7684\u51FD\u6570\u53C2\u6570\u6267\u884C\u4E86resolve\u540E\uFF0CPromise\u7531pending\u72B6\u6001\u53D8\u6210resolved\u72B6\u6001\uFF1B\u5982\u679C\u5728Promise\u7684\u51FD\u6570\u53C2\u6570\u4E2D\u6267\u884C\u7684\u4E0D\u662Fresolve\u65B9\u6CD5\uFF0C\u800C\u662Freject\u65B9\u6CD5\uFF0C\u90A3\u4E48Promise\u4F1A\u7531pending\u72B6\u6001\u53D8\u6210rejected\u72B6\u6001\u3002</strong></p><h2 id="_3-promise-\u72B6\u6001\u7684\u4E0D\u53EF\u9006\u6027" tabindex="-1"><a class="header-anchor" href="#_3-promise-\u72B6\u6001\u7684\u4E0D\u53EF\u9006\u6027" aria-hidden="true">#</a> 3.Promise \u72B6\u6001\u7684\u4E0D\u53EF\u9006\u6027</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;success1&#39;</span><span class="token punctuation">)</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;success2&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">var</span> p2<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;reject&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
p2<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// &quot;success1&quot;</span>
<span class="token comment">// &quot;success&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Promise\u72B6\u6001\u7684\u4E00\u65E6\u53D8\u6210resolved\u6216rejected\u65F6\uFF0CPromise\u7684\u72B6\u6001\u548C\u503C\u5C31\u56FA\u5B9A\u4E0B\u6765\u4E86\uFF0C\u4E0D\u8BBA\u4F60\u540E\u7EED\u518D\u600E\u4E48\u8C03\u7528resolve\u6216reject\u65B9\u6CD5\uFF0C\u90FD\u4E0D\u80FD\u6539\u53D8\u5B83\u7684\u72B6\u6001\u548C\u503C\u3002\u56E0\u6B64\uFF0Cp1\u4E2D<code>resolve(&quot;success2&quot;)</code>\u5E76\u4E0D\u80FD\u5C06p1\u7684\u503C\u66F4\u6539\u4E3A<code>success2</code>\uFF0Cp2\u4E2D<code>reject(&quot;reject&quot;)</code>\u4E5F\u4E0D\u80FD\u5C06p2\u7684\u72B6\u6001\u7531resolved\u6539\u53D8\u4E3Arejected.</p><h2 id="_4-\u94FE\u5F0F\u8C03\u7528" tabindex="-1"><a class="header-anchor" href="#_4-\u94FE\u5F0F\u8C03\u7528" aria-hidden="true">#</a> 4.\u94FE\u5F0F\u8C03\u7528</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>               <span class="token comment">//\u7B2C\u4E00\u4E2Athen</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> value <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token comment">//\u7B2C\u4E8C\u4E2Athen</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token comment">//\u7B2C\u4E09\u4E2Athen</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;resolve&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token comment">//\u7B2C\u56DB\u4E2Athen</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;reject&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token comment">//\u7B2C\u4E94\u4E2Athen</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;resolve: &#39;</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;reject: &#39;</span> <span class="token operator">+</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">//   1</span>
<span class="token comment">//   2</span>
<span class="token comment">//   undefined</span>
<span class="token comment">//   &quot;resolve&quot;</span>
<span class="token comment">//   &quot;reject: reject&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Promise\u5BF9\u8C61\u7684then\u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684Promise\u5BF9\u8C61\uFF0C\u56E0\u6B64\u53EF\u4EE5\u901A\u8FC7\u94FE\u5F0F\u8C03\u7528then\u65B9\u6CD5\u3002then\u65B9\u6CD5\u63A5\u6536\u4E24\u4E2A\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\uFF0C\u7B2C\u4E00\u4E2A\u53C2\u6570\u662FPromise\u6267\u884C\u6210\u529F\u65F6\u7684\u56DE\u8C03\uFF0C\u7B2C\u4E8C\u4E2A\u53C2\u6570\u662FPromise\u6267\u884C\u5931\u8D25\u65F6\u7684\u56DE\u8C03\u3002\u4E24\u4E2A\u51FD\u6570\u53EA\u4F1A\u6709\u4E00\u4E2A\u88AB\u8C03\u7528\uFF0C\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u5C06\u88AB\u7528\u4F5C\u521B\u5EFAthen\u8FD4\u56DE\u7684Promise\u5BF9\u8C61\u3002\u8FD9\u4E24\u4E2A\u53C2\u6570\u7684\u8FD4\u56DE\u503C\u53EF\u4EE5\u662F\u4EE5\u4E0B\u4E09\u79CD\u60C5\u51B5\u4E2D\u7684\u4E00\u79CD\uFF1A</p><ul><li><code>return</code> \u4E00\u4E2A\u540C\u6B65\u7684\u503C \uFF0C\u6216\u8005 <code>undefined</code>\uFF08\u5F53\u6CA1\u6709\u8FD4\u56DE\u4E00\u4E2A\u6709\u6548\u503C\u65F6\uFF0C\u9ED8\u8BA4\u8FD4\u56DEundefined\uFF09\uFF0C<code>then</code>\u65B9\u6CD5\u5C06\u8FD4\u56DE\u4E00\u4E2Aresolved\u72B6\u6001\u7684Promise\u5BF9\u8C61\uFF0CPromise\u5BF9\u8C61\u7684\u503C\u5C31\u662F\u8FD9\u4E2A\u8FD4\u56DE\u503C\u3002</li><li><code>return</code> \u53E6\u4E00\u4E2A Promise\uFF0C<code>then</code>\u65B9\u6CD5\u5C06\u6839\u636E\u8FD9\u4E2APromise\u7684\u72B6\u6001\u548C\u503C\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684Promise\u5BF9\u8C61\u8FD4\u56DE\u3002</li><li><code>throw</code> \u4E00\u4E2A\u540C\u6B65\u5F02\u5E38\uFF0C<code>then</code>\u65B9\u6CD5\u5C06\u8FD4\u56DE\u4E00\u4E2Arejected\u72B6\u6001\u7684Promise, \u503C\u662F\u8BE5\u5F02\u5E38\u3002</li></ul><p>\u6839\u636E\u4EE5\u4E0A\u5206\u6790\uFF0C\u4EE3\u7801\u4E2D\u7B2C\u4E00\u4E2A<code>then</code>\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u503C\u4E3A2\uFF081*2\uFF09\uFF0C\u72B6\u6001\u4E3Aresolved\u7684Promise\u5BF9\u8C61\uFF0C\u4E8E\u662F\u7B2C\u4E8C\u4E2A<code>then</code>\u8F93\u51FA\u7684\u503C\u662F2\u3002\u7B2C\u4E8C\u4E2A<code>then</code>\u4E2D\u6CA1\u6709\u8FD4\u56DE\u503C\uFF0C\u56E0\u6B64\u5C06\u8FD4\u56DE\u9ED8\u8BA4\u7684undefined\uFF0C\u4E8E\u662F\u5728\u7B2C\u4E09\u4E2A<code>then</code>\u4E2D\u8F93\u51FAundefined\u3002\u7B2C\u4E09\u4E2A<code>then</code>\u548C\u7B2C\u56DB\u4E2A<code>then</code>\u4E2D\u5206\u522B\u8FD4\u56DE\u4E00\u4E2A\u72B6\u6001\u662Fresolved\u7684Promise\u548C\u4E00\u4E2A\u72B6\u6001\u662Frejected\u7684Promise\uFF0C\u4F9D\u6B21\u7531\u7B2C\u56DB\u4E2A<code>then</code>\u4E2D\u6210\u529F\u7684\u56DE\u8C03\u51FD\u6570\u548C\u7B2C\u4E94\u4E2A<code>then</code>\u4E2D\u5931\u8D25\u7684\u56DE\u8C03\u51FD\u6570\u5904\u7406\u3002</p><h2 id="_5-promise-then-\u56DE\u8C03\u5F02\u6B65\u6027" tabindex="-1"><a class="header-anchor" href="#_5-promise-then-\u56DE\u8C03\u5F02\u6B65\u6027" aria-hidden="true">#</a> 5.Promise then()\u56DE\u8C03\u5F02\u6B65\u6027</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;success&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;which one is called first ?&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//   &quot;which one is called first ?&quot;</span>
<span class="token comment">//   &quot;success&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Promise\u63A5\u6536\u7684\u51FD\u6570\u53C2\u6570\u662F\u540C\u6B65\u6267\u884C\u7684\uFF0C\u4F46<code>then</code>\u65B9\u6CD5\u4E2D\u7684\u56DE\u8C03\u51FD\u6570\u6267\u884C\u5219\u662F\u5F02\u6B65\u7684\uFF0C\u56E0\u6B64\uFF0C&quot;success&quot;\u4F1A\u5728\u540E\u9762\u8F93\u51FA\u3002</p><h2 id="_6-promise\u4E2D\u7684\u5F02\u5E38" tabindex="-1"><a class="header-anchor" href="#_6-promise\u4E2D\u7684\u5F02\u5E38" aria-hidden="true">#</a> 6.Promise\u4E2D\u7684\u5F02\u5E38</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    foo<span class="token punctuation">.</span><span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span> <span class="token number">1</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>	  
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  
  p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
    <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;p1 then value: &#39;</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;p1 then err: &#39;</span> <span class="token operator">+</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
    <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;p1 then then value: &#39;</span><span class="token operator">+</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;p1 then then err: &#39;</span> <span class="token operator">+</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  
  <span class="token keyword">var</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span> <span class="token number">2</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>	
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  
  p2<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
    <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;p2 then value: &#39;</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
      foo<span class="token punctuation">.</span><span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> 
    <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;p2 then err: &#39;</span> <span class="token operator">+</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
    <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;p2 then then value: &#39;</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;p2 then then err: &#39;</span> <span class="token operator">+</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
    <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;p2 then then then value: &#39;</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;p2 then then then err: &#39;</span> <span class="token operator">+</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
 
<span class="token comment">//   p1 then err: ReferenceError: foo is not defined</span>
<span class="token comment">//   p2 then value: 2</span>
<span class="token comment">//   p1 then then value: undefined</span>
<span class="token comment">//   p2 then then err: ReferenceError: foo is not defined</span>
<span class="token comment">//   p2 then then then value: 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Promise\u4E2D\u7684\u5F02\u5E38\u7531<code>then</code>\u53C2\u6570\u4E2D\u7B2C\u4E8C\u4E2A\u56DE\u8C03\u51FD\u6570\uFF08Promise\u6267\u884C\u5931\u8D25\u7684\u56DE\u8C03\uFF09\u5904\u7406\uFF0C\u5F02\u5E38\u4FE1\u606F\u5C06\u4F5C\u4E3APromise\u7684\u503C\u3002\u5F02\u5E38\u4E00\u65E6\u5F97\u5230\u5904\u7406\uFF0C<code>then</code>\u8FD4\u56DE\u7684\u540E\u7EEDPromise\u5BF9\u8C61\u5C06\u6062\u590D\u6B63\u5E38\uFF0C\u5E76\u4F1A\u88ABPromise\u6267\u884C\u6210\u529F\u7684\u56DE\u8C03\u51FD\u6570\u5904\u7406\u3002\u53E6\u5916\uFF0C\u9700\u8981\u6CE8\u610Fp1\u3001p2 \u591A\u7EA7<code>then</code>\u7684\u56DE\u8C03\u51FD\u6570\u662F\u4EA4\u66FF\u6267\u884C\u7684 \uFF0C\u8FD9\u6B63\u662F\u7531Promise <code>then</code>\u56DE\u8C03\u7684\u5F02\u6B65\u6027\u51B3\u5B9A\u7684\u3002</p><h2 id="_7-promise-resolve" tabindex="-1"><a class="header-anchor" href="#_7-promise-resolve" aria-hidden="true">#</a> 7.Promise.resolve()</h2>`,22),r={id:"resolve-\u53E6\u4E00\u4E2A-promise",tabindex:"-1"},k=n("a",{class:"header-anchor",href:"#resolve-\u53E6\u4E00\u4E2A-promise","aria-hidden":"true"},"#",-1),d=a(),v={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/resolve#resolve_%E5%8F%A6%E4%B8%80%E4%B8%AA_promise",target:"_blank",rel:"noopener noreferrer"},m=a("resolve \u53E6\u4E00\u4E2A promise"),b=s(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> original <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> cast <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>original<span class="token punctuation">)</span><span class="token punctuation">;</span>
cast<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;value: &#39;</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;original === cast ? &#39;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>original <span class="token operator">===</span> cast<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">/*
*  \u6253\u5370\u987A\u5E8F\u5982\u4E0B\uFF0C\u8FD9\u91CC\u6709\u4E00\u4E2A\u540C\u6B65\u5F02\u6B65\u5148\u540E\u6267\u884C\u7684\u533A\u522B
*  original === cast ? true
*  value: 33
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> p1 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span> <span class="token number">1</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> p2 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span> p1 <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> p3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> p4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span>p1<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p1 <span class="token operator">===</span> p2<span class="token punctuation">)</span><span class="token punctuation">;</span> 
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p1 <span class="token operator">===</span> p3<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p1 <span class="token operator">===</span> p4<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p3 <span class="token operator">===</span> p4<span class="token punctuation">)</span><span class="token punctuation">;</span>

p4<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;p4=&#39;</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

p2<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;p2=&#39;</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;p1=&#39;</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// true</span>
<span class="token comment">// false</span>
<span class="token comment">// false</span>
<span class="token comment">// false</span>
<span class="token comment">// p2=1</span>
<span class="token comment">// p1=1</span>
<span class="token comment">// p4=1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Promise.resolve(...)</code>\u53EF\u4EE5\u63A5\u6536\u4E00\u4E2A\u503C\u6216\u8005\u662F\u4E00\u4E2APromise\u5BF9\u8C61\u4F5C\u4E3A\u53C2\u6570\u3002\u5F53\u53C2\u6570\u662F\u666E\u901A\u503C\u65F6\uFF0C\u5B83\u8FD4\u56DE\u4E00\u4E2Aresolved\u72B6\u6001\u7684Promise\u5BF9\u8C61\uFF0C\u5BF9\u8C61\u7684\u503C\u5C31\u662F\u8FD9\u4E2A\u53C2\u6570\uFF1B\u5F53\u53C2\u6570\u662F\u4E00\u4E2APromise\u5BF9\u8C61\u65F6\uFF0C\u5B83\u76F4\u63A5\u8FD4\u56DE\u8FD9\u4E2APromise\u53C2\u6570\u3002\u56E0\u6B64\uFF0Cp1 === p2\u3002\u4F46\u901A\u8FC7new\u7684\u65B9\u5F0F\u521B\u5EFA\u7684Promise\u5BF9\u8C61\u90FD\u662F\u4E00\u4E2A\u65B0\u7684\u5BF9\u8C61\uFF0C\u56E0\u6B64\u540E\u9762\u7684\u4E09\u4E2A\u6BD4\u8F83\u7ED3\u679C\u90FD\u662Ffalse\u3002\u53E6\u5916\uFF0C<em><strong>\u4E3A\u4EC0\u4E48p4\u7684<code>then</code>\u6700\u5148\u8C03\u7528\uFF0C\u4F46\u5728\u63A7\u5236\u53F0\u4E0A\u662F\u6700\u540E\u8F93\u51FA\u7ED3\u679C\u7684\u5462\uFF1F\u56E0\u4E3Ap4\u7684<code>resolve</code>\u4E2D\u63A5\u6536\u7684\u53C2\u6570\u662F\u4E00\u4E2APromise\u5BF9\u8C61p1\uFF0C<code>resolve</code>\u4F1A\u5BF9p1\u201D\u62C6\u7BB1\u201C\uFF0C\u83B7\u53D6p1\u7684\u72B6\u6001\u548C\u503C\uFF0C\u4F46\u8FD9\u4E2A\u8FC7\u7A0B\u662F\u5F02\u6B65\u7684</strong></em>\uFF0C\u53EF\u53C2\u8003\u4E0B\u4E00\u8282\u3002</p><h2 id="_8-resolve-vs-reject" tabindex="-1"><a class="header-anchor" href="#_8-resolve-vs-reject" aria-hidden="true">#</a> 8.resolve vs reject</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;resolve&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span>Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;reject&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> p3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token function">reject</span><span class="token punctuation">(</span>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;resolve&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token keyword">function</span> <span class="token function">fulfilled</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;fulfilled: &#39;</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> 
  <span class="token keyword">function</span> <span class="token function">rejected</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;rejected: &#39;</span> <span class="token operator">+</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

p2<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token keyword">function</span> <span class="token function">fulfilled</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;fulfilled: &#39;</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> 
  <span class="token keyword">function</span> <span class="token function">rejected</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;rejected: &#39;</span> <span class="token operator">+</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

p3<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token keyword">function</span> <span class="token function">fulfilled</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;fulfilled: &#39;</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> 
  <span class="token keyword">function</span> <span class="token function">rejected</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;rejected: &#39;</span> <span class="token operator">+</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A7\u5236\u53F0\u8F93\u51FA\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>p3 rejected<span class="token operator">:</span> <span class="token punctuation">[</span>object Promise<span class="token punctuation">]</span>
p1 fulfilled<span class="token operator">:</span> resolve
p2 rejected<span class="token operator">:</span> reject
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em><strong>Promise\u56DE\u8C03\u51FD\u6570\u4E2D\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570<code>resolve</code>\uFF0C\u4F1A\u5BF9Promise\u6267\u884C&quot;\u62C6\u7BB1&quot;\u52A8\u4F5C\u3002\u5373\u5F53<code>resolve</code>\u7684\u53C2\u6570\u662F\u4E00\u4E2APromise\u5BF9\u8C61\u65F6\uFF0C<code>resolve</code>\u4F1A&quot;\u62C6\u7BB1&quot;\u83B7\u53D6\u8FD9\u4E2APromise\u5BF9\u8C61\u7684\u72B6\u6001\u548C\u503C\uFF0C\u4F46\u8FD9\u4E2A\u8FC7\u7A0B\u662F\u5F02\u6B65\u7684\u3002p1&quot;\u62C6\u7BB1&quot;\u540E\uFF0C\u83B7\u53D6\u5230Promise\u5BF9\u8C61\u7684\u72B6\u6001\u662Fresolved\uFF0C\u56E0\u6B64<code>fulfilled</code>\u56DE\u8C03\u88AB\u6267\u884C\uFF1Bp2&quot;\u62C6\u7BB1&quot;\u540E\uFF0C\u83B7\u53D6\u5230Promise\u5BF9\u8C61\u7684\u72B6\u6001\u662Frejected\uFF0C\u56E0\u6B64<code>rejected</code>\u56DE\u8C03\u88AB\u6267\u884C\u3002\u4F46Promise\u56DE\u8C03\u51FD\u6570\u4E2D\u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570<code>reject</code>\u4E0D\u5177\u5907\u201D\u62C6\u7BB1\u201C\u7684\u80FD\u529B\uFF0Creject\u7684\u53C2\u6570\u4F1A\u76F4\u63A5\u4F20\u9012\u7ED9<code>then</code>\u65B9\u6CD5\u4E2D\u7684<code>rejected</code>\u56DE\u8C03\u3002\u56E0\u6B64\uFF0C\u5373\u4F7Fp3 <code>reject</code>\u63A5\u6536\u4E86\u4E00\u4E2Aresolved\u72B6\u6001\u7684Promise\uFF0C<code>then</code>\u65B9\u6CD5\u4E2D\u88AB\u8C03\u7528\u7684\u4F9D\u7136\u662F<code>rejected</code>\uFF0C\u5E76\u4E14\u53C2\u6570\u5C31\u662F<code>reject</code>\u63A5\u6536\u5230\u7684Promise\u5BF9\u8C61\u3002</strong></em></p>`,8);function f(h,g){const p=l("ExternalLinkIcon");return e(),o("div",null,[u,n("h3",r,[k,d,n("a",v,[m,c(p)])]),b])}var j=t(i,[["render",f],["__file","15.\u51E0\u6BB5\u4EE3\u7801\u4ECB\u7ECDPromise.html.vue"]]);export{j as default};
