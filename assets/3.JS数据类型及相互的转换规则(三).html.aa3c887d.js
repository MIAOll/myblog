import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e}from"./app.a63c222e.js";const p={},t=e(`<h1 id="js\u6570\u636E\u7C7B\u578B\u53CA\u76F8\u4E92\u7684\u8F6C\u6362\u89C4\u5219-\u4E09" tabindex="-1"><a class="header-anchor" href="#js\u6570\u636E\u7C7B\u578B\u53CA\u76F8\u4E92\u7684\u8F6C\u6362\u89C4\u5219-\u4E09" aria-hidden="true">#</a> JS\u6570\u636E\u7C7B\u578B\u53CA\u76F8\u4E92\u7684\u8F6C\u6362\u89C4\u5219(\u4E09)</h1><h2 id="\u4E00\u4E9B\u9898\u76EE\u7EC3\u4E60-\u5F85\u589E\u52A0" tabindex="-1"><a class="header-anchor" href="#\u4E00\u4E9B\u9898\u76EE\u7EC3\u4E60-\u5F85\u589E\u52A0" aria-hidden="true">#</a> \u4E00\u4E9B\u9898\u76EE\u7EC3\u4E60\uFF08\u5F85\u589E\u52A0\uFF09</h2><ol><li></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> time <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">//\u5BF9\u8C61\u8F6C\u6570\u5B57</span>
<span class="token comment">/*
    \u9996\u5148\u68C0\u6D4B Symbol.toPrimitive \u6709\u6CA1\u6709\uFF0C\u5982\u679C\u6709\u800C\u4E14\u662F\u51FD\u6570\u6267\u884C
    time[Symbol.toPrimitive](&#39;number&#39;)
*/</span>

<span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">/*
    1.arr[Symbol.toPrimitive] =&gt; undefined
    2.arr.valueOf() =&gt; \u83B7\u53D6\u539F\u59CB\u503C\uFF0C=&gt; [10]\u4E0D\u662F\u539F\u59CB\u503C
    3.arr.toString() -&gt; &#39;10&#39;
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">Number</span><span class="token punctuation">(</span><span class="token string">&#39;12px&#39;</span><span class="token punctuation">)</span>
<span class="token number">NaN</span>
<span class="token function">Number</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
<span class="token number">0</span>

<span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">&#39;12px&#39;</span><span class="token punctuation">)</span>
<span class="token number">12</span>
<span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
<span class="token number">NaN</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-parseint" tabindex="-1"><a class="header-anchor" href="#_3-parseint" aria-hidden="true">#</a> 3.parseInt</h3><ul><li>parseInt([val],[radix])</li><li>[val]\u5FC5\u987B\u662F\u5B57\u7B26\u4E32\uFF0C\u5982\u679C\u4E0D\u662F\uFF0C\u8981\u5148\u9690\u5F0F\u8F6C\u6362\u4E3A\u5B57\u7B26\u4E32 String([val])</li><li>[radix]\u8FDB\u5236 <ul><li>\u5982\u679C\u4E0D\u5199\u6216\u8005\u51990\uFF0C\u9ED8\u8BA4\u662F10</li><li>\u5982\u679C\u5B57\u7B26\u4E32\u662F0x\u5F00\u59CB\uFF0C\u9ED8\u8BA4\u503C\u4E0D\u662F10\uFF0C\u662F16</li><li>\u6709\u6548\u8303\u56F4 2 - 36\uFF0C\u4E0D\u5728\u8FD9\u4E2A\u8303\u56F4 \u8FD4\u56DENaN</li></ul></li><li>\u4ECE[val]\u5B57\u7B26\u4E32\u5DE6\u4FA7\u7B2C\u4E00\u4E2A\u5B57\u7B26\u5F00\u59CB\u67E5\u627E\uFF0C\u67E5\u627E\u5230\u7B26\u5408\u3010radix\u3011\u8FDB\u5236\u7684\u503C\uFF0C\u628A\u627E\u5230\u7684\u5185\u5BB9\u8F6C\u6362\u4E3A10\u8FDB\u5236</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">&#39;12px13&#39;</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 1</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">&#39;10102px&#39;</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">27.2</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">&#39;0013&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;14px&#39;</span><span class="token punctuation">,</span><span class="token number">123</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
arr<span class="token operator">=</span>arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>parseInt<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
<span class="token comment">//VM430:3 (5) [27, NaN, 1, 1, 27]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">&#39;0013&#39;</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token comment">//1</span>
<span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token number">0013</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token comment">//3</span>
<span class="token comment">//[val]\u5FC5\u987B\u662F\u5B57\u7B26\u4E32\uFF0C0013 8\u8FDB\u5236\u6570\u5B57\u8981\u5148\u8F6C\u4E3A\u5B57\u7B26\u4E32</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-string" tabindex="-1"><a class="header-anchor" href="#_4-string" aria-hidden="true">#</a> 4.String</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">String</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token string">&#39;1&#39;</span>
<span class="token function">String</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span>
<span class="token string">&#39;NaN&#39;</span>
<span class="token function">String</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
<span class="token string">&#39;null&#39;</span>
<span class="token function">String</span><span class="token punctuation">(</span><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token string">&#39;Symbol()&#39;</span>
<span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token string">&#39;[object Object]&#39;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5" tabindex="-1"><a class="header-anchor" href="#_5" aria-hidden="true">#</a> 5.&#39;+&#39;</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token operator">+</span><span class="token string">&#39;10&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Number</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// new Number(10)[Symbol.toPrimitive] -&gt; undefined</span>
<span class="token comment">// new Number(10).valueOf() -&gt;10</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">10</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// VM259:1 1010</span>
<span class="token comment">// VM259:2 20</span>
<span class="token comment">// VM259:5 10Wed Jun 15 2022 14:52:14 GMT+0800 (\u4E2D\u56FD\u6807\u51C6\u65F6\u95F4)  new Date()[Symbol.toPrimitive](&#39;default&#39;)</span>
<span class="token comment">// VM259:6 1010</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token number">100</span> <span class="token operator">+</span> <span class="token boolean">true</span> <span class="token operator">+</span> <span class="token number">21.2</span> <span class="token operator">+</span> <span class="token keyword">null</span> <span class="token operator">+</span> <span class="token keyword">undefined</span> <span class="token operator">+</span> <span class="token string">&quot;Tencent&quot;</span> <span class="token operator">+</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token keyword">null</span> <span class="token operator">+</span> <span class="token number">9</span> <span class="token operator">+</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token comment">// NaN + &quot;Tencent&quot; -&gt; &quot;NaNTencentnull9false&quot;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span> 

<span class="token constant">VM263</span><span class="token operator">:</span><span class="token number">3</span> NaNTencentnull9false
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token string">&#39;10&#39;</span><span class="token punctuation">;</span>
i<span class="token operator">++</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>


<span class="token keyword">var</span> i<span class="token operator">=</span><span class="token string">&#39;10&#39;</span><span class="token punctuation">;</span>
i<span class="token operator">+=</span><span class="token number">1</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>

<span class="token keyword">var</span> i<span class="token operator">=</span><span class="token string">&#39;10&#39;</span><span class="token punctuation">;</span>
i<span class="token operator">=</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
<span class="token comment">// VM267:3 11</span>
<span class="token comment">// VM267:8 101</span>
<span class="token comment">// VM267:12 101</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6" tabindex="-1"><a class="header-anchor" href="#_6" aria-hidden="true">#</a> 6.&#39;==&#39;</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token comment">//\u7C7B\u578B\u4E0D\u540C\u90FD\u8F6C\u6210\u6570\u5B57\u6BD4\u8F83</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token comment">//\u7C7B\u578B\u76F8\u540C</span>
<span class="token comment">//true true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-\u88C5\u7BB1\u548C\u62C6\u7BB1" tabindex="-1"><a class="header-anchor" href="#_7-\u88C5\u7BB1\u548C\u62C6\u7BB1" aria-hidden="true">#</a> 7.\u88C5\u7BB1\u548C\u62C6\u7BB1</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> num<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">//num \u662F\u539F\u59CB\u503C\uFF0C\u4E0D\u662F\u5BF9\u8C61\uFF0C\u4E0D\u80FD\u505A\u201C\u6210\u5458\u8BBF\u95EE\u201D</span>
<span class="token comment">//\u9ED8\u8BA4\u88C5\u7BB1\u64CD\u4F5C new Number(num) \u53D8\u4E3A\u5BF9\u8C61\uFF0C\u5C31\u53EF\u4EE5\u8C03\u7528 toFixed</span>

<span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Number</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token operator">+</span><span class="token number">10</span><span class="token punctuation">)</span>
<span class="token comment">// \u62C6\u7BB1 \u9996\u5148[Symbol.toPrimitive] -&gt;valueOf </span>
<span class="token comment">//VM285:2 10.00</span>
<span class="token comment">//VM285:7 20</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-\u9A8C\u8BC1\u4E24\u4E2A\u503C\u662F\u5426\u76F8\u7B49" tabindex="-1"><a class="header-anchor" href="#_8-\u9A8C\u8BC1\u4E24\u4E2A\u503C\u662F\u5426\u76F8\u7B49" aria-hidden="true">#</a> 8.\u9A8C\u8BC1\u4E24\u4E2A\u503C\u662F\u5426\u76F8\u7B49</h3><p>JS\u4E2D\u9A8C\u8BC1\u4E24\u4E2A\u503C\u662F\u5426\u76F8\u7B49:</p><blockquote><ul><li><p>==\uFF1A\u76F8\u7B49\u300C\u5982\u679C\u4E24\u8FB9\u7684\u7C7B\u578B\u4E0D\u4E00\u6837\uFF0C\u9996\u5148\u4F1A\u9690\u5F0F\u8F6C\u5316\u4E3A\u76F8\u540C\u7684\u7C7B\u578B\uFF0C\u7136\u540E\u518D\u505A\u6BD4\u8F83\u300D</p><ul><li>\u5BF9\u8C61==\u5B57\u7B26\u4E32 \u5BF9\u8C61-&gt;\u5B57\u7B26\u4E32</li><li>null==undefined -&gt;true\u300C\u4E09\u4E2A\u7B49\u4E8E\u53F7\u662F\u4E0D\u76F8\u7B49\u7684\u300D\uFF0C\u4F46\u662Fnull/undefined\u548C\u5176\u5B83\u4EFB\u4F55\u503C\u90FD\u4E0D\u4F1A\u76F8\u7B49</li><li>NaN==NaN -&gt;false</li><li>Symbol()==Symbol() -&gt;false</li><li>\u5269\u4F59\u7684\u60C5\u51B5\u300C\u4F8B\u5982\uFF1A\u5BF9\u8C61==\u6570\u5B57\u3001\u5B57\u7B26\u4E32==\u5E03\u5C14...\u300D\u90FD\u662F\u8981\u8F6C\u6362\u4E3A\u6570\u5B57\uFF0C\u518D\u8FDB\u884C\u6BD4\u8F83\u7684</li></ul></li><li><p>===\uFF1A\u7EDD\u5BF9\u76F8\u7B49\u300C\u8981\u6C42\u4E24\u8FB9\u7684\u7C7B\u578B\u548C\u503C\u90FD\u8981\u76F8\u7B49 \u4F8B\u5982\uFF1Aswitch case\u300D</p></li><li><p>Object.is([val],[val])</p></li><li><p>Object.is(NaN,NaN) =&gt; true</p></li></ul></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u4F7F\u4E0B\u9762\u4EE3\u7801\u6210\u7ACB</span>
<span class="token comment">//if (a == 1 &amp;&amp; a == 2 &amp;&amp; a == 3) {</span>
<span class="token comment">//     console.log(&#39;OK&#39;);</span>
<span class="token comment">// } </span>


<span class="token comment">// \u65B9\u6CD51</span>
<span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">i</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token comment">// a[Symbol.toPrimitive]   \u8FD8\u53EF\u4EE5\u91CD\u5199\uFF1AvalueOf/toString</span>
    <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>toPrimitive<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// this-&gt;a</span>
        <span class="token keyword">return</span> <span class="token operator">++</span><span class="token keyword">this</span><span class="token punctuation">.</span>i<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">//\u65B9\u6CD52</span>
<span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
a<span class="token punctuation">.</span>toString <span class="token operator">=</span> a<span class="token punctuation">.</span>shift<span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> a <span class="token operator">==</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> a <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;OK&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> 

<span class="token comment">// \u89E3\u51B3\u601D\u8DEF2\uFF1A\u6211\u4EEC\u53EF\u4EE5\u52AB\u6301\u5BF9\u8C61\u7684\u6210\u5458\u8BBF\u95EE</span>
<span class="token comment">//   + \u5168\u5C40\u4E0B\u58F0\u660E\u7684\u53D8\u91CF\u662Fwindow\u7684\u4E00\u4E2A\u5C5E\u6027</span>
<span class="token comment">//   + Object.defineProperty\u6570\u636E\u52AB\u6301\u7684\u529E\u6CD5</span>
<span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>window<span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token operator">++</span>i<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> a <span class="token operator">==</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> a <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;OK&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_9-parseint" tabindex="-1"><a class="header-anchor" href="#_9-parseint" aria-hidden="true">#</a> 9.parseInt</h3><p>parseInt([value]):\u5148\u628A[value]\u8F6C\u6362\u4E3A\u5B57\u7B26\u4E32\uFF0C\u518D\u4ECE\u5B57\u7B26\u4E32\u5DE6\u4FA7\u5F00\u59CB\u67E5\u627E\u6240\u6709\u7684\u6709\u6548\u6570\u5B57\u5B57\u7B26\u300C\u9047\u5230\u4E00\u4E2A\u975E\u6709\u6548\u6570\u5B57\u5B57\u7B26\u5219\u7ED3\u675F\u67E5\u627E\uFF0C\u4E0D\u8BBA\u540E\u9762\u662F\u5426\u8FD8\u6709\u300D\uFF0C\u628A\u627E\u5230\u7684\u6709\u6548\u6570\u5B57\u5B57\u7B26\u8F6C\u6362\u4E3A\u6570\u5B57\uFF0C\u4E00\u4E2A\u90FD\u6CA1\u627E\u5230\uFF0C\u7ED3\u679C\u5C31\u662FNaN</p><ul><li><p>parseInt([string],[radix])\uFF1A[radix]\u662F\u8FDB\u5236\uFF0C\u6709\u6548\u53D6\u503C\u8303\u56F42~36\u4E4B\u95F4\uFF0C\u5982\u679C\u4E0D\u4F20\u9012\u9ED8\u8BA4\u662F10\u8FDB\u5236\u300C<strong>\u4F46\u662F\u5982\u679C\u5B57\u7B26\u4E32\u662F\u4EE5\u201C0x\u201D\u5F00\u59CB\u7684\uFF0C\u9ED8\u8BA4\u662F16\u8FDB\u5236\u300D\uFF1B\u5982\u679C\u5199\u96F6\uFF0C\u548C\u4E0D\u5199\u662F\u4E00\u6837\u7684\u89C4\u5219</strong>\uFF1B</p></li><li><p>\u628A[string]\u770B\u505A[radix]\u8FDB\u5236\u300C\u4ECE\u5DE6\u4FA7\u627E\u5230\u6240\u6709\u7B26\u5408\u8FD9\u4E2A\u8FDB\u5236\u7684\u5B57\u7B26\uFF0C\u9047\u5230\u4E0D\u7B26\u5408\u7684\u7ED3\u675F\u67E5\u627E\u300D\uFF0C\u628A\u627E\u5230\u7684\u5B57\u7B26\u8F6C\u6362\u4E3A\u6570\u5B57\u300C10\u8FDB\u5236\u300D\uFF1B</p></li><li><p><strong>\u5982\u679C[radix]\u4E0D\u57282~36\u4E4B\u95F4\u300C\u6392\u96640\u300D\uFF0C\u5219\u8FD4\u56DE\u7684\u662FNaN</strong></p></li></ul><h4 id="\u628A\u5176\u5B83\u8FDB\u5236\u503C\u8F6C\u6362\u4E3A10\u8FDB\u5236\u5982\u4F55\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#\u628A\u5176\u5B83\u8FDB\u5236\u503C\u8F6C\u6362\u4E3A10\u8FDB\u5236\u5982\u4F55\u5904\u7406" aria-hidden="true">#</a> \u628A\u5176\u5B83\u8FDB\u5236\u503C\u8F6C\u6362\u4E3A10\u8FDB\u5236\u5982\u4F55\u5904\u7406\uFF1F</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;12345.23&#39;</span><span class="token punctuation">;</span> <span class="token comment">//-&gt;\u516B\u8FDB\u5236</span>

<span class="token comment">/*3*8^-2 + 2*8^-1 + 5*8^0 + 4*8^1 + 3*8^2 + 2*8^3 + 1*8^4 -&gt; \u5341\u8FDB\u5236\u7684\u503C

 8^0 -&gt; 1

 8^-1 -&gt; 1/8 \u5012\u6570

3*(1/64) + 2*(1/8) + 5*1 + 4*8 + 3*64 + 2*512 + 1*4096 =&gt;5349.296875*/</span>



<span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">&#39;0x0BAF3&#39;</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">&#39;0x0BAF3&#39;</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span>

 <span class="token comment">/*0BAF3 16-&gt;10

 3*16^0 + 15*16^1 + 10*16^2 + 11*16^3 + 0*16^4
*/</span>

<span class="token comment">// 0123 \u5982\u679C\u4E00\u4E2A\u6570\u5B57\u4EE5\u96F6\u5F00\u59CB\uFF0C\u6D4F\u89C8\u5668\u4F1A\u9ED8\u8BA4\u8BA4\u4E3A\u5176\u662F\u516B\u8FDB\u5236\uFF0C\u4F46\u662F\u6D4F\u89C8\u5668\u4E5F\u4F1A\u76F4\u63A5\u628A\u516B\u8FDB\u5236\u8F6C\u6362\u4E3A10\u8FDB\u5236</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">27.2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;0013&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;14px&#39;</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">/*
arr = arr.map((item, index) =&gt; {
     + \u6570\u7EC4\u6709\u591A\u5C11\u9879\u904D\u5386\u5BF9\u5C11\u6B21\uFF0C\u56DE\u8C03\u51FD\u6570\u6267\u884C\u591A\u5C11\u6B21
     + item-&gt;\u5F53\u524D\u9879  index-&gt;\u5F53\u524D\u9879\u7D22\u5F15
     + \u56DE\u8C03\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u4F1A\u66FF\u6362\u6570\u7EC4\u4E2D\u5F53\u524D\u9879\u7684\u7ED3\u679C\u300C\u539F\u59CB\u6570\u7EC4\u4E0D\u53D8\uFF0C\u4EE5\u65B0\u6570\u7EC4\u5F62\u5F0F\u8FD4\u56DE\u300D
     return &#39;xxx&#39;;
}); 

parseInt(&#39;27.2&#39;\uFF0C0) -&gt; 27
parseInt(&#39;0&#39;\uFF0C1) -&gt;NaN
parseInt(&#39;0013&#39;\uFF0C2) -&gt;&#39;001&#39;\u5F53\u505A2\u8FDB\u5236\u8F6C\u6362\u4E3A10\u8FDB\u5236   1*2^0 + 0*2^1 + 0*2^2 -&gt;1
parseInt(&#39;14px&#39;\uFF0C3) -&gt; &#39;1&#39;\u5F53\u505A3\u8FDB\u5236\u8F6C\u6362\u4E3A10\u8FDB\u5236  1*3^0 -&gt; 1
parseInt(&#39;123&#39;\uFF0C4) -&gt; &#39;123&#39;\u5F53\u505A4\u8FDB\u5236\u8F6C\u6362\u4E3A10\u8FDB\u5236  3*4^0 + 2*4^1 + 1*4^2 -&gt; 27
*/</span>
arr <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>parseInt<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_10-0-1-0-2-0-3-false" tabindex="-1"><a class="header-anchor" href="#_10-0-1-0-2-0-3-false" aria-hidden="true">#</a> 10. 0.1+0.2===0.3 =&gt; false???</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token number">0.1</span><span class="token operator">+</span><span class="token number">0.2</span>
<span class="token number">0.30000000000000004</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token string">&#39;1010&#39;</span>

<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token string">&#39;0.0001100110011001100110011001100110011001100110011001101&#39;</span>

<span class="token comment">/*0.1\u8F6C\u5316\u6210\u4E8C\u8FDB\u5236\u7684\u7B97\u6CD5\uFF1A

0.1 * 2=0.2 ====== \u53D6\u51FA\u6574\u6570\u90E8\u52060

0.2 * 2=0.4 ====== \u53D6\u51FA\u6574\u6570\u90E8\u52060

0.4 * 2=0.8 ====== \u53D6\u51FA\u6574\u6570\u90E8\u52060

0.8 * 2=1.6 ====== \u53D6\u51FA\u6574\u6570\u90E8\u52061

0.6 * 2=1.2 ====== \u53D6\u51FA\u6574\u6570\u90E8\u52061

0.2 * 2=0.4 ====== \u53D6\u51FA\u6574\u6570\u90E8\u52060

0.4 * 2=0.8 ====== \u53D6\u51FA\u6574\u6570\u90E8\u52060

0.8 * 2=1.6 ====== \u53D6\u51FA\u6574\u6570\u90E8\u52061

0.6 * 2=1.2 ====== \u53D6\u51FA\u6574\u6570\u90E8\u52061

\u63A5\u4E0B\u6765\u4F1A\u65E0\u9650\u5FAA\u73AF

0.2 * 2=0.4 ====== \u53D6\u51FA\u6574\u6570\u90E8\u52060

0.4 * 2=0.8 ====== \u53D6\u51FA\u6574\u6570\u90E8\u52060

0.8 * 2=1.6 ====== \u53D6\u51FA\u6574\u6570\u90E8\u52061

0.6 * 2=1.2 ====== \u53D6\u51FA\u6574\u6570\u90E8\u52061

\u6240\u4EE50.1\u8F6C\u5316\u6210\u4E8C\u8FDB\u5236\u662F\uFF1A0.0 0011 0011 ......*/</span>

<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; 0.1</span>

<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token comment">//&#39;0.0001100110011001100110011001100110011001100110011001101&#39;</span>
<span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token comment">//&#39;0.001100110011001100110011001100110011001100110011001101&#39;</span>
<span class="token punctuation">(</span><span class="token number">0.3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token comment">//&#39;0.010011001100110011001100110011001100110011001100110011&#39;</span>
<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token operator">+</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token comment">//&#39;0.0100110011001100110011001100110011001100110011001101&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>JS\u4E2D\u6709\u5173\u4E8E\u5C0F\u6570\uFF08\u6D6E\u70B9\u6570\uFF09\u7684\u8BA1\u7B97\u4F1A\u51FA\u73B0\u7CBE\u51C6\u5EA6\u4E22\u5931\u95EE\u9898</p><ul><li>JS\u4E2D\u6240\u6709\u5236\u90FD\u662F\u4EE52\u8FDB\u5236\u5728\u8BA1\u7B97\u673A\u5E95\u5C42\u8FDB\u884C\u5B58\u50A8\u7684\uFF08\u6D6E\u70B9\u6570\u8F6C\u4E3A2\u8FDB\u5236\uFF0C\u53EF\u80FD\u4F1A\u6709\u65E0\u9650\u5FAA\u73AF\uFF09</li><li>\u5728\u8BA1\u7B97\u673A\u5E95\u5C42\u5B58\u50A8\u65F6\uFF0C\u6700\u591A\u5B58\u50A864\u4F4D\uFF0C\u3010\u820D\u5F03\u4E86\u4E00\u4E9B\u503C\uFF0C\u672C\u8EAB\u5C31\u5931\u53BB\u4E86\u7CBE\u786E\u5EA6\u3011</li></ul><h4 id="\u5F85\u8865\u5145\u5199\u4E00\u4E2A10\u8FDB\u5236\u8F6C2\u8FDB\u5236\u7A0B\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5F85\u8865\u5145\u5199\u4E00\u4E2A10\u8FDB\u5236\u8F6C2\u8FDB\u5236\u7A0B\u5E8F" aria-hidden="true">#</a> \u5F85\u8865\u5145\u5199\u4E00\u4E2A10\u8FDB\u5236\u8F6C2\u8FDB\u5236\u7A0B\u5E8F</h4><p>\u603B\u7ED3</p><blockquote><ul><li><p>1.\u5341\u8FDB\u5236\u8F6C\u6362\u4E3A\u4E8C\u8FDB\u5236\u7684\u8BA1\u7B97n.tostring(2\uFF09</p><ul><li>\u6574\u6570\u90E8\u5206</li><li>\u5C0F\u6570\u90E8\u5206</li></ul></li><li><p>2.JS \u4F7F\u7528Nunber\u7C7B\u578B\u8868\u793A\u6570\u5B57\uFF08\u6574\u6570\u548C\u6D6E\u70B9\u6B3E\uFF09\uFF0C\u9075\u5FAATE=754\u6807\u51C6\u901A\u8FC764\u4F4D\u4E8C\u8FDB\u5236\u6297\u83B1\u8868\u793A\u4E00\u4E2A\u6559\u5B50 https://babbage.cs.qc.cuny.edu/IEEE-754.old/Decimal.html \u7B2C0\u4F4D\uFF1A\u7B26\u53F7\u4F4D\uFF0C0\u8868\u793A\u6B63\u6570\uFF0C1\u8868\u793A\u8D1F\u6570 \u7B2C1\u4F4D\u5230\u7B2C11\u4F4D\u301011\u4F4D\u6307\u6570\u3011\uFF1A\u50A8\u5B58\u6307\u6570\u90E8\u5206 E \u7B2C12\u4F4D\u5230\u7B2C63\u4F4D \u301052\u4F4D\u5C3E\u6570\u3011\uFF1A\uFF1A\u50A8\u5B58\u5C0F\u6570\u90E8\u5206\uFF08\u5373\u6709\u6548\u6570\u5B66\u3011F \u6CE8\uFF1A\u5C3E\u6570\u90E8\u5206\u5728\u89C4\u7EA6\u5F62\u5F0F\u4E0B\u7B2C\u4E00\u4F4D\u9ED8\u8BA4\u4E3A1\uFF08\u7701\u7565\u672C\u5199\uFF09</p></li><li><p>3.\u6700\u5927\u5B89\u5168\u6570\u5B57[16\u4F4D] Number.MAX_SAFE_INTEGER === Math.pow(2,53\uFF09-1</p></li><li><p>4.\u600E\u4E48\u89E3\u51B3\u7CBE\u5EA6\u95EE\u9898\uFF1F</p><ul><li>\u5C06\u6570\u5B66\u8F6C\u6210\u6574\u6570 \u3010\u6269\u5927\u7CFB\u6570\u3011</li><li>\u4E09\u65B9\u5E93\uFF1AMath.js\u3001 decimal.js \\ big.js</li></ul></li></ul></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token operator">+</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token string">&#39;0.30&#39;</span>
<span class="token punctuation">(</span><span class="token number">0.7</span><span class="token operator">+</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token string">&#39;0.80&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,40),i=[t];function l(c,o){return s(),a("div",null,i)}var d=n(p,[["render",l],["__file","3.JS\u6570\u636E\u7C7B\u578B\u53CA\u76F8\u4E92\u7684\u8F6C\u6362\u89C4\u5219(\u4E09).html.vue"]]);export{d as default};
