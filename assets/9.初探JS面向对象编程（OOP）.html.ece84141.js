import{_ as t}from"./plugin-vue_export-helper.21dcd24c.js";import{o as p,c as e,b as n,a as o,e as s,r as c}from"./app.a63c222e.js";const l={},i=s(`<h1 id="\u521D\u63A2js\u9762\u5411\u5BF9\u8C61\u7F16\u7A0B-oop" tabindex="-1"><a class="header-anchor" href="#\u521D\u63A2js\u9762\u5411\u5BF9\u8C61\u7F16\u7A0B-oop" aria-hidden="true">#</a> \u521D\u63A2JS\u9762\u5411\u5BF9\u8C61\u7F16\u7A0B\uFF08OOP\uFF09</h1><h2 id="\u4EC0\u4E48\u662F\u9762\u5411\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#\u4EC0\u4E48\u662F\u9762\u5411\u5BF9\u8C61" aria-hidden="true">#</a> \u4EC0\u4E48\u662F\u9762\u5411\u5BF9\u8C61</h2><p>JS\u672C\u8EAB\u5C31\u662F\u9762\u5411\u5BF9\u8C61\u7684\u7F16\u7A0B\u8BED\u8A00\uFF0C\u800C\u4ED6\u672C\u8EAB\u4E5F\u662F\u57FA\u4E8E\u9762\u5411\u5BF9\u8C61\u7684\u601D\u60F3\u6784\u5EFA\u51FA\u6765\u7684\u8BED\u8A00</p><h3 id="\u9762\u5411\u5BF9\u8C61\u601D\u60F3" tabindex="-1"><a class="header-anchor" href="#\u9762\u5411\u5BF9\u8C61\u601D\u60F3" aria-hidden="true">#</a> \u9762\u5411\u5BF9\u8C61\u601D\u60F3</h3><ul><li><p>\u5BF9\u8C61\uFF1A\u4E07\u7269\u7686\u5BF9\u8C61</p></li><li><p>\u7C7B\uFF1A\u5BF9\u201C\u5BF9\u8C61\u201D\u7684\u5F52\u7C7B\u548C\u7EC6\u5206</p></li><li><p>\u5B9E\u4F8B\uFF1A\u7C7B\u4E2D\u7684\u5177\u4F53\u6210\u5458</p></li></ul><h3 id="js\u4E2D\u7684\u7C7B-\u5185\u7F6E\u7C7B\u3001\u81EA\u5B9A\u4E49\u7C7B" tabindex="-1"><a class="header-anchor" href="#js\u4E2D\u7684\u7C7B-\u5185\u7F6E\u7C7B\u3001\u81EA\u5B9A\u4E49\u7C7B" aria-hidden="true">#</a> JS\u4E2D\u7684\u7C7B\uFF1A\u5185\u7F6E\u7C7B\u3001\u81EA\u5B9A\u4E49\u7C7B</h3><ul><li>\u5185\u7F6E\u7C7B\uFF1A</li></ul><blockquote><p>\u6BCF\u4E00\u79CD\u6570\u636E\u7C7B\u578B\u53C8\u6709\u81EA\u5DF1\u5BF9\u5E94\u7684\u5185\u7F6E\u7C7B\uFF1ANumber\u3001String\u3001Boolean\u3001Symbol\u3001BigInt\u3001Object\uFF08Array\u3001RegExp\u3001Date\u3001Set\u3001Map\u3001ArrayBuffer...\uFF09\u3001Function</p><p>\u6211\u4EEC\u5E73\u65F6\u63A5\u89E6\u7684\u5177\u4F53\u503C\u5C31\u662F\u5BF9\u5E94\u7684\u7C7B\u7684\u5B9E\u4F8B\uFF0C\u4F8B\u5982\uFF1A10\u5C31\u662FNumber\u7C7B\u7684\u4E00\u4E2A\u5B9E\u4F8B\uFF0C[10,20] -&gt; Array -&gt; Object ...</p><p>\u6BCF\u4E00\u4E2AHTML\u5143\u7D20\u6807\u7B7E\u300C\u5305\u542Bwindow/document\u7B49\u300D\u5728JS\u4E2D\u90FD\u6709\u81EA\u5DF1\u7684\u5185\u7F6E\u7C7B\uFF0C\u4F8B\u5982\uFF1Adiv -&gt; HTMLDivElement -&gt; HTMLElement -&gt; Element -&gt; Node -&gt; EventTarget -&gt; Object</p></blockquote><h2 id="new\u6784\u9020\u51FD\u6570\u6267\u884C" tabindex="-1"><a class="header-anchor" href="#new\u6784\u9020\u51FD\u6570\u6267\u884C" aria-hidden="true">#</a> new\u6784\u9020\u51FD\u6570\u6267\u884C</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//   + Fn\u88AB\u79F0\u4E3A\u7C7B\u300C\u6784\u9020\u51FD\u6570\u300D</span>
<span class="token comment">//   + result\u88AB\u79F0\u4E3A\u5F53\u524D\u7C7B\u7684\u4E00\u4E2A\u5B9E\u4F8B</span>
<span class="token keyword">let</span> result1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fn</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> result2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fn</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// console.log(result1.say === result2.say); //-&gt;false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="new\u6267\u884C\u4E0E\u666E\u901A\u51FD\u6570\u6267\u884C\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#new\u6267\u884C\u4E0E\u666E\u901A\u51FD\u6570\u6267\u884C\u533A\u522B" aria-hidden="true">#</a> new\u6267\u884C\u4E0E\u666E\u901A\u51FD\u6570\u6267\u884C\u533A\u522B</h3><ul><li><p>\u7ED3\u5408\u8FD9\u4E9B\u5C0F\u7ED3\uFF0C\u6574\u7406\u5728\u4E00\u8D77\u5C31\u662F\uFF1A</p><ol><li>\u521B\u5EFA\u4E86\u4E00\u4E2A\u5168\u65B0\u7684\u5BF9\u8C61\u3002</li><li>\u8FD9\u4E2A\u5BF9\u8C61\u4F1A\u88AB\u6267\u884C<code>[[Prototype]]</code>\uFF08\u4E5F\u5C31\u662F<code>__proto__</code>\uFF09\u94FE\u63A5\u3002</li><li>\u751F\u6210\u7684\u65B0\u5BF9\u8C61\u4F1A\u7ED1\u5B9A\u5230\u51FD\u6570\u8C03\u7528\u7684<code>this</code>\u3002</li><li>\u901A\u8FC7<code>new</code>\u521B\u5EFA\u7684\u6BCF\u4E2A\u5BF9\u8C61\u5C06\u6700\u7EC8\u88AB<code>[[Prototype]]</code>\u94FE\u63A5\u5230\u8FD9\u4E2A\u51FD\u6570\u7684<code>prototype</code>\u5BF9\u8C61\u4E0A\u3002</li><li>\u5982\u679C\u51FD\u6570\u6CA1\u6709\u8FD4\u56DE\u5BF9\u8C61\u7C7B\u578B<code>Object</code>(\u5305\u542B<code>Functoin</code>, <code>Array</code>, <code>Date</code>, <code>RegExg</code>, <code>Error</code>)\uFF0C\u90A3\u4E48<code>new</code>\u8868\u8FBE\u5F0F\u4E2D\u7684\u51FD\u6570\u8C03\u7528\u4F1A\u81EA\u52A8\u8FD4\u56DE\u8FD9\u4E2A\u65B0\u7684\u5BF9\u8C61\u3002</li></ol></li></ul>`,12),u={href:"https://imgse.com/i/vyzmAP",target:"_blank",rel:"noopener noreferrer"},k=n("img",{src:"https://s1.ax1x.com/2022/08/22/vyzmAP.png",alt:"vyzmAP.png"},null,-1),r=s(`<h2 id="new\u7684\u6A21\u62DF" tabindex="-1"><a class="header-anchor" href="#new\u7684\u6A21\u62DF" aria-hidden="true">#</a> new\u7684\u6A21\u62DF</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\u77E5\u9053\u4E86\u8FD9\u4E9B\u73B0\u8C61\uFF0C\u6211\u4EEC\u5C31\u53EF\u4EE5\u6A21\u62DF\u5B9E\u73B0<span class="token keyword">new</span>\u64CD\u4F5C\u7B26\u3002\u76F4\u63A5\u8D34\u51FA\u4EE3\u7801\u548C\u6CE8\u91CA
<span class="token doc-comment comment">/**
 * \u6A21\u62DF\u5B9E\u73B0 new \u64CD\u4F5C\u7B26
 * <span class="token keyword">@param</span>  <span class="token class-name"><span class="token punctuation">{</span>Function<span class="token punctuation">}</span></span> <span class="token parameter">ctor</span> [\u6784\u9020\u51FD\u6570]
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token operator">|</span>Function<span class="token operator">|</span>Regex<span class="token operator">|</span>Date<span class="token operator">|</span>Error<span class="token punctuation">}</span></span>      [\u8FD4\u56DE\u7ED3\u679C]
 */</span>
<span class="token keyword">function</span> <span class="token function">newOperator</span><span class="token punctuation">(</span><span class="token parameter">ctor</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> ctor <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token string">&#39;newOperator function the first param must be a function&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// ES6 new.target \u662F\u6307\u5411\u6784\u9020\u51FD\u6570</span>
    <span class="token comment">/*
    	new.target
		new.target\u5C5E\u6027\u5141\u8BB8\u4F60\u68C0\u6D4B\u51FD\u6570\u6216\u6784\u9020\u65B9\u6CD5\u662F\u5426\u662F\u901A\u8FC7new\u8FD0\u7B97\u7B26\u88AB\u8C03\u7528\u7684\u3002\u5728\u901A\u8FC7new\u8FD0\u7B97\u7B26\u88AB\u521D\u59CB\u5316\u7684\u51FD\u6570\u6216\u6784\u9020\u65B9\u6CD5\u4E2D\uFF0Cnew.target\u8FD4\u56DE\u4E00\u4E2A\u6307\u5411\u6784\u9020\u65B9\u6CD5\u6216\u51FD\u6570\u7684\u5F15\u7528\u3002\u5728\u666E\u901A\u7684\u51FD\u6570\u8C03\u7528\u4E2D\uFF0Cnew.target \u7684\u503C\u662Fundefined\u3002
		function Foo() {
  			if (!new.target) throw &quot;Foo() must be called with new&quot;;
  			console.log(&quot;Foo instantiated with new&quot;);
		}

		Foo(); // throws &quot;Foo() must be called with new&quot;
		new Foo(); // logs &quot;Foo instantiated with new&quot;
    */</span>
    newOperator<span class="token punctuation">.</span>target <span class="token operator">=</span> ctor<span class="token punctuation">;</span>
    <span class="token comment">// 1.\u521B\u5EFA\u4E00\u4E2A\u5168\u65B0\u7684\u5BF9\u8C61\uFF0C</span>
    <span class="token comment">// 2.\u5E76\u4E14\u6267\u884C[[Prototype]]\u94FE\u63A5</span>
    <span class="token comment">// 4.\u901A\u8FC7\`new\`\u521B\u5EFA\u7684\u6BCF\u4E2A\u5BF9\u8C61\u5C06\u6700\u7EC8\u88AB\`[[Prototype]]\`\u94FE\u63A5\u5230\u8FD9\u4E2A\u51FD\u6570\u7684\`prototype\`\u5BF9\u8C61\u4E0A\u3002</span>
    <span class="token keyword">var</span> newObj <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>ctor<span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// ES5 arguments\u8F6C\u6210\u6570\u7EC4 \u5F53\u7136\u4E5F\u53EF\u4EE5\u7528ES6 [...arguments], Aarry.from(arguments);</span>
    <span class="token comment">// \u9664\u53BBctor\u6784\u9020\u51FD\u6570\u7684\u5176\u4F59\u53C2\u6570</span>
    <span class="token keyword">var</span> argsArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 3.\u751F\u6210\u7684\u65B0\u5BF9\u8C61\u4F1A\u7ED1\u5B9A\u5230\u51FD\u6570\u8C03\u7528\u7684\`this\`\u3002</span>
    <span class="token comment">// \u83B7\u53D6\u5230ctor\u51FD\u6570\u8FD4\u56DE\u7ED3\u679C</span>
    <span class="token keyword">var</span> ctorReturnResult <span class="token operator">=</span> <span class="token function">ctor</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>newObj<span class="token punctuation">,</span> argsArr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// \u5C0F\u7ED34 \u4E2D\u8FD9\u4E9B\u7C7B\u578B\u4E2D\u5408\u5E76\u8D77\u6765\u53EA\u6709Object\u548CFunction\u4E24\u79CD\u7C7B\u578B typeof null \u4E5F\u662F&#39;object&#39;\u6240\u4EE5\u8981\u4E0D\u7B49\u4E8Enull\uFF0C\u6392\u9664null</span>
    <span class="token keyword">var</span> isObject <span class="token operator">=</span> <span class="token keyword">typeof</span> ctorReturnResult <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> ctorReturnResult <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> isFunction <span class="token operator">=</span> <span class="token keyword">typeof</span> ctorReturnResult <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>isObject <span class="token operator">||</span> isFunction<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> ctorReturnResult<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 5.\u5982\u679C\u51FD\u6570\u6CA1\u6709\u8FD4\u56DE\u5BF9\u8C61\u7C7B\u578B\`Object\`(\u5305\u542B\`Functoin\`, \`Array\`, \`Date\`, \`RegExg\`, \`Error\`)\uFF0C\u90A3\u4E48\`new\`\u8868\u8FBE\u5F0F\u4E2D\u7684\u51FD\u6570\u8C03\u7528\u4F1A\u81EA\u52A8\u8FD4\u56DE\u8FD9\u4E2A\u65B0\u7684\u5BF9\u8C61\u3002</span>
    <span class="token keyword">return</span> newObj<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u539F\u578Bprototype\u548C\u539F\u578B\u94FE-proto" tabindex="-1"><a class="header-anchor" href="#\u539F\u578Bprototype\u548C\u539F\u578B\u94FE-proto" aria-hidden="true">#</a> \u539F\u578Bprototype\u548C\u539F\u578B\u94FE__proto__</h2><ul><li>\u6BCF\u4E00\u4E2A\u7C7B\uFF08\u51FD\u6570\uFF09\u90FD\u5177\u5907prototype\uFF0C\u5E76\u4E14\u5C5E\u6027\u503C\u662F\u4E00\u4E2A\u5BF9\u8C61</li><li>\u5BF9\u8C61\u4E0A\u5929\u751F\u5177\u5907\u4E00\u4E2A\u5C5E\u6027\uFF1Aconstructor\uFF0C\u6307\u5411\u7C7B\u672C\u8EAB</li><li>\u6BCF\u4E00\u4E2A\u5BF9\u8C61\uFF08\u666E\u901A\u5BF9\u8C61\u3001prototype\u3001\u5B9E\u4F8B\u3001\u51FD\u6570\u7B49\uFF09\u90FD\u5177\u5907\uFF1A<strong>proto</strong>\uFF0C\u5C5E\u6027\u503C\u662F\u5F53\u524D\u5B9E\u4F8B\u6240\u5C5E\u7C7B\u7684\u539F\u578B</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">getX</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token class-name">Fn</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">getX</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name">Fn</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">getY</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> f1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fn</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> f2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fn</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f1<span class="token punctuation">.</span>getX <span class="token operator">===</span> f2<span class="token punctuation">.</span>getX<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f1<span class="token punctuation">.</span>getY <span class="token operator">===</span> f2<span class="token punctuation">.</span>getY<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f1<span class="token punctuation">.</span>__proto__<span class="token punctuation">.</span>getY <span class="token operator">===</span> <span class="token class-name">Fn</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>getY<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f1<span class="token punctuation">.</span>__proto__<span class="token punctuation">.</span>getX <span class="token operator">===</span> f2<span class="token punctuation">.</span>getX<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f1<span class="token punctuation">.</span>getX <span class="token operator">===</span> <span class="token class-name">Fn</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>getX<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f1<span class="token punctuation">.</span>constructor<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Fn</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token class-name">__proto__</span><span class="token punctuation">.</span>constructor<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//false</span>
<span class="token comment">//true</span>
<span class="token comment">//true</span>
<span class="token comment">//false</span>
<span class="token comment">//false</span>
<span class="token comment">//\u0192 Fn() {</span>
<span class="token comment">//     this.x = 100;</span>
<span class="token comment">//     this.y = 200;</span>
<span class="token comment">//     this.getX = function () {</span>
<span class="token comment">//         console.log(this.x);</span>
<span class="token comment">//     }</span>
<span class="token comment">// }</span>
<span class="token comment">//\u0192 Object() { [native code] }</span>

f1<span class="token punctuation">.</span><span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
f1<span class="token punctuation">.</span>__proto__<span class="token punctuation">.</span><span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
f2<span class="token punctuation">.</span><span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Fn</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//100</span>
<span class="token comment">//undefined</span>
<span class="token comment">//200</span>
<span class="token comment">//undefined</span>


<span class="token keyword">function</span> <span class="token function">fun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>a<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">b</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
fun<span class="token punctuation">.</span>prototype<span class="token operator">=</span><span class="token punctuation">{</span>
    <span class="token function-variable function">b</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>a<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">;</span>
        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">c</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>a<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">;</span>
        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>a<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">var</span> my_fun<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">fun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
my_fun<span class="token punctuation">.</span><span class="token function">b</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>
my_fun<span class="token punctuation">.</span><span class="token function">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//30</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u57FA\u4E8E\u5185\u7F6E\u7C7B\u539F\u578B\u6269\u5C55\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u57FA\u4E8E\u5185\u7F6E\u7C7B\u539F\u578B\u6269\u5C55\u65B9\u6CD5" aria-hidden="true">#</a> \u57FA\u4E8E\u5185\u7F6E\u7C7B\u539F\u578B\u6269\u5C55\u65B9\u6CD5</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> n <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> m <span class="token operator">=</span> n<span class="token punctuation">.</span><span class="token function">plus</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">minus</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//=&gt;15\uFF0810+10-5\uFF09</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="js\u4E2Dthis\u7684\u4E94\u79CD\u60C5\u51B5\u68B3\u7406" tabindex="-1"><a class="header-anchor" href="#js\u4E2Dthis\u7684\u4E94\u79CD\u60C5\u51B5\u68B3\u7406" aria-hidden="true">#</a> JS\u4E2DTHIS\u7684\u4E94\u79CD\u60C5\u51B5\u68B3\u7406</h4><ul><li>\u4E8B\u4EF6\u7ED1\u5B9A</li><li>\u51FD\u6570\u6267\u884C\uFF08\u5305\u62EC\u81EA\u6267\u884C\u51FD\u6570\uFF09</li><li>new\u6784\u9020\u51FD\u6570</li><li>\u7BAD\u5934\u51FD\u6570</li><li>call/apply/bind</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">~</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">function</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        context <span class="token operator">=</span> context <span class="token operator">||</span> window<span class="token punctuation">;</span>
        <span class="token keyword">let</span> args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            result<span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
        context<span class="token punctuation">.</span>$fn <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
        result <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">$fn</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">delete</span> context<span class="token punctuation">.</span>$fn<span class="token punctuation">;</span>
        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>call1 <span class="token operator">=</span> call<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">fn1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">fn2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>
fn1<span class="token punctuation">.</span><span class="token function">call1</span><span class="token punctuation">(</span>fn2<span class="token punctuation">)</span><span class="token punctuation">;</span>
fn1<span class="token punctuation">.</span>call1<span class="token punctuation">.</span><span class="token function">call1</span><span class="token punctuation">(</span>fn2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>call1<span class="token punctuation">.</span><span class="token function">call1</span><span class="token punctuation">(</span>fn1<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//1  2  1</span>

<span class="token comment">//Function.prototype </span>
<span class="token comment">//\u0192 () { [native code] }  </span>
<span class="token comment">//Function.prototype\u5F88\u7279\u6B8A\uFF0C\u4E0D\u662F\u5BF9\u8C61\u662F\u4E00\u4E2A\u51FD\u6570\u54E6</span>
<span class="token comment">/*Function.prototype.__proto__==Object.prototype  
=&gt; 	true*/</span>
<span class="token keyword">function</span> <span class="token function">fn1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>
<span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">call1</span><span class="token punctuation">(</span>fn1<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="hasownproperty" tabindex="-1"><a class="header-anchor" href="#hasownproperty" aria-hidden="true">#</a> hasOwnProperty</h2><p>Object\u4E3A\u6BCF\u4E00\u4E2A\u5BF9\u8C61\u63D0\u4F9BhasOwnProperty\u65B9\u6CD5</p><h3 id="hasownproperty-\u4E0E-in\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#hasownproperty-\u4E0E-in\u533A\u522B" aria-hidden="true">#</a> hasOwnProperty \u4E0E in\u533A\u522B</h3><blockquote><p>obj.hasOwnProperty([attr])\uFF1A<strong>\u68C0\u6D4Battr\u662F\u5426\u662Fobj\u5BF9\u8C61\u7684\u79C1\u6709\u5C5E\u6027</strong></p><p>[attr] in obj\uFF1A\u68C0\u6D4Battr\u662F\u5426\u4E3Aobj\u7684\u4E00\u4E2A\u5C5E\u6027\u300C<em><strong>\u4E0D\u8BBA\u79C1\u6709\u8FD8\u662F\u516C\u6709</strong></em>\u300D</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Fn</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> total <span class="token operator">=</span> x <span class="token operator">+</span> y<span class="token punctuation">,</span>
        flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>total <span class="token operator">=</span> total<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">say</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>total<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> result1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fn</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> result2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fn</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result1<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">&#39;say&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//-&gt;true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result1<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">&#39;hasOwnProperty&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//-&gt;false  result1\u53EF\u4EE5\u8C03\u7528hasOwnProperty\uFF0C\u8BF4\u660EhasOwnProperty\u662Fresult1\u7684\u4E00\u4E2A\u6210\u5458\u300C\u5C5E\u6027\u300D</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;say&#39;</span> <span class="token keyword">in</span> result1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//-&gt;true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hasOwnProperty&#39;</span> <span class="token keyword">in</span> result1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//-&gt;true </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7F16\u5199\u4E00\u4E2A\u65B9\u6CD5-haspubproperty" tabindex="-1"><a class="header-anchor" href="#\u7F16\u5199\u4E00\u4E2A\u65B9\u6CD5-haspubproperty" aria-hidden="true">#</a> \u7F16\u5199\u4E00\u4E2A\u65B9\u6CD5 hasPubProperty</h3><p>\u81EA\u5DF1\u7F16\u5199\u4E00\u4E2A\u65B9\u6CD5 hasPubProperty \u68C0\u6D4B\u67D0\u4E2A\u5C5E\u6027\u662F\u5426\u4E3A\u5BF9\u8C61\u7684\u516C\u6709\u5C5E\u6027\uFF1F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">hasPubProperty</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> attr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u601D\u8DEF\uFF1A\u57FA\u4E8Ein\u68C0\u6D4B\u7ED3\u679C\u662FTRUE\u300C\u662F\u5B83\u7684\u4E00\u4E2A\u5C5E\u6027\u300D &amp; \u57FA\u4E8EhasOwnProperty\u68C0\u6D4B\u7ED3\u679C\u662Ffalse\u300C\u4E0D\u662F\u79C1\u6709\u7684\u300D\uFF0C\u90A3\u4E48\u4E00\u5B9A\u662F\u516C\u6709\u7684\u5C5E\u6027</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>attr <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>obj<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>attr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">hasPubProperty</span><span class="token punctuation">(</span>result1<span class="token punctuation">,</span> <span class="token string">&#39;hasOwnProperty&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//-&gt;true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">hasPubProperty</span><span class="token punctuation">(</span>result1<span class="token punctuation">,</span> <span class="token string">&#39;say&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//-&gt;false </span>

<span class="token comment">// \u5F0A\u7AEF\uFF1A\u53EA\u80FD\u662F\u8FD9\u79CD\u60C5\u51B5\u201C\u67D0\u4E2A\u5C5E\u6027\u4E0D\u662F\u79C1\u6709\u7684\u800C\u662F\u516C\u6709\u7684\u201D\uFF0C\u4F46\u662F\u5982\u679C\u8FD9\u4E2A\u5C5E\u6027 \u79C1\u6709\u4E2D\u4E5F\u6709&amp;&amp;\u516C\u6709\u4E2D\u4E5F\u6709 \uFF0C\u57FA\u4E8E\u6211\u4EEC\u7684\u8FD9\u4E2A\u65B9\u6CD5\u7ED3\u679C\u662Ffalse\uFF0C\u4F46\u662F\u8FD9\u4E2A\u5C5E\u6027\u786E\u5B9E\u4E5F\u662F\u4ED6\u7684\u516C\u6709\u5C5E\u6027\uFF0C\u5982\u4F55\u5904\u7406\uFF1F</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u53EF\u4EE5\u8FD9\u6837\u5B9E\u73B0\uFF0C\u53EA\u68C0\u6D4B\u4ED6\u7684\u539F\u578B</span>
<span class="token keyword">const</span> <span class="token function-variable function">hasPubProperty</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">hasPubProperty</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> attr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> proto <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>proto<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>proto<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>attr<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span>
        proto <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>proto<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;mingzi&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">toString</span><span class="token operator">:</span> <span class="token number">100</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">hasPubProperty</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span><span class="token string">&#39;toString&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="for-in-\u5FAA\u73AF" tabindex="-1"><a class="header-anchor" href="#for-in-\u5FAA\u73AF" aria-hidden="true">#</a> for-in \u5FAA\u73AF</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// for\u5FAA\u73AF\u672C\u8D28\u4E0D\u662F\u904D\u5386\u6570\u7EC4\uFF0C\u662F\u81EA\u5DF1\u63A7\u5236\u4E00\u4E2A\u5FAA\u73AF\u7684\u903B\u8F91  </span>
<span class="token comment">//   \u201Ci=0 i&lt;3 i++\u201D \u81EA\u5DF1\u63A7\u5236\u5FAA\u73AF\u4E09\u6B21</span>
<span class="token comment">//   \u6BCF\u4E00\u8F6E\u5FAA\u73AFi\u7684\u503C\uFF0C\u6070\u597D\u662F\u6211\u4EEC\u60F3\u83B7\u53D6\u5F53\u524D\u6570\u7EC4\u4E2D\u8FD9\u4E00\u9879\u7684\u7D22\u5F15\u300Ci\u4ECE\u96F6\u5F00\u59CB\uFF0C\u6570\u7EC4\u7D22\u5F15\u4E5F\u662F\u4ECE\u96F6\u5F00\u59CB\u300D\uFF0C\u6240\u4EE5\u518D\u57FA\u4E8E\u6210\u5458\u8BBF\u95EE\u83B7\u53D6\u5373\u53EF</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token comment">// for in\u672C\u8D28\u662F\u8FED\u4EE3\u5BF9\u8C61\uFF0C\u6309\u7167\u672C\u8EAB\u7684\u952E\u503C\u5BF9\u53BB\u4E00\u4E00\u8FED\u4EE3\u7684</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// for in\u5185\u7F6E\u7684\u7F3A\u9677</span>
<span class="token comment">//   + \u4E0D\u80FD\u8FED\u4EE3Symbol\u5C5E\u6027</span>
<span class="token comment">//   + \u8FED\u4EE3\u7684\u65F6\u5019\u4E0D\u4E00\u5B9A\u6309\u7167\u81EA\u5DF1\u7F16\u5199\u7684\u952E\u503C\u5BF9\u987A\u5E8F\u8FED\u4EE3\u300C\u4F18\u5148\u8FED\u4EE3\u6570\u5B57\u5C5E\u6027{\u5C0F-&gt;\u5927}\uFF0C\u518D\u53BB\u8FED\u4EE3\u975E\u6570\u5B57\u5C5E\u6027{\u81EA\u5DF1\u7F16\u5199\u987A\u5E8F}\u300D</span>
<span class="token comment">//   + \u4E0D\u4EC5\u4F1A\u8FED\u4EE3\u5BF9\u8C61\u7684\u79C1\u6709\u5C5E\u6027\uFF0C\u5BF9\u4E8E\u4E00\u4E9B\u81EA\u5DF1\u6269\u5C55\u7684\u516C\u6709\u5C5E\u6027\u4E5F\u4F1A\u8FED\u4EE3\u5230\u300C\u8FED\u4EE3\u53EF\u679A\u4E3E\u7684{\u4E00\u822C\u8BBE\u5B9A\u7684\u90FD\u662F\u53EF\u679A\u4E3E\u7684\uFF0C\u5185\u7F6E\u7684\u662F\u4E0D\u53EF\u679A\u4E3E\u7684}\u300D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>for in\u5185\u7F6E\u7684\u7F3A\u9677</p><ul><li><strong>\u4E0D\u80FD\u8FED\u4EE3Symbol\u5C5E\u6027</strong></li><li>\u8FED\u4EE3\u7684\u65F6\u5019\u4E0D\u4E00\u5B9A\u6309\u7167\u81EA\u5DF1\u7F16\u5199\u7684\u952E\u503C\u5BF9\u987A\u5E8F\u8FED\u4EE3\u300C<strong>\u4F18\u5148\u8FED\u4EE3\u6570\u5B57\u5C5E\u6027{\u5C0F-&gt;\u5927}\uFF0C\u518D\u53BB\u8FED\u4EE3\u975E\u6570\u5B57\u5C5E\u6027{\u81EA\u5DF1\u7F16\u5199\u987A\u5E8F}</strong>\u300D</li><li>\u4E0D\u4EC5\u4F1A\u8FED\u4EE3\u5BF9\u8C61\u7684\u79C1\u6709\u5C5E\u6027\uFF0C<strong>\u5BF9\u4E8E\u4E00\u4E9B\u81EA\u5DF1\u6269\u5C55\u7684\u516C\u6709\u5C5E\u6027\u4E5F\u4F1A\u8FED\u4EE3\u5230</strong>\u300C\u8FED\u4EE3\u53EF\u679A\u4E3E\u7684{\u4E00\u822C\u8BBE\u5B9A\u7684\u90FD\u662F\u53EF\u679A\u4E3E\u7684\uFF0C\u5185\u7F6E\u7684\u662F\u4E0D\u53EF\u679A\u4E3E\u7684}\u300D</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">sum</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;zhufeng&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span>
    <span class="token number">0</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    <span class="token number">1</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
    <span class="token literal-property property">teacher</span><span class="token operator">:</span> <span class="token string">&#39;zhouxiaotian&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;AA&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token number">300</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//&#39;0&#39; &#39;1&#39; &#39;name&#39; &#39;age&#39; &#39;teacher&#39; &#39;sum&#39;</span>
<span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u53EA\u662F\u4E0D\u60F3\u8FED\u4EE3\u516C\u6709\u7684\u300C\u5373\u4F7F\u5185\u90E8\u673A\u5236\u627E\u5230\u4E86\uFF0C\u6211\u4EEC\u4E5F\u4E0D\u8BA9\u5176\u505A\u4EFB\u4F55\u7684\u5904\u7406\u300D</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5148\u627E\u6240\u6709\u79C1\u6709\uFF0C\u4E00\u4F46\u53D1\u73B0\u8FD9\u4E2A\u662F\u516C\u6709\u7684\uFF0C\u8BF4\u660E\u79C1\u6709\u7684\u90FD\u627E\u5B8C\u4E86\u300C\u4E0D\u542BSymbol\u300D</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>obj<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> 

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Object.getOwnPropertySymbols(obj):\u83B7\u53D6\u5BF9\u8C61\u6240\u6709Symbol\u7684\u79C1\u6709\u5C5E\u6027\u300C\u6570\u7EC4\u300D</span>
<span class="token comment">// Object.keys(obj) || Object.getOwnPropertyNames(obj):\u83B7\u53D6\u5BF9\u8C61\u6240\u6709\u975ESymbol\u7684\u79C1\u6709\u5C5E\u6027\u300C\u6570\u7EC4\u300D</span>
<span class="token keyword">function</span> <span class="token function">each</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> keys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">,</span>
        key <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
        value <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
        i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
        len <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> Symbol <span class="token operator">!==</span> <span class="token string">&quot;undefined&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u652F\u6301Symbol</span>
        keys <span class="token operator">=</span> keys<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">getOwnPropertySymbols</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    len <span class="token operator">=</span> keys<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> callback <span class="token operator">!==</span> <span class="token string">&quot;function&quot;</span><span class="token punctuation">)</span> <span class="token function-variable function">callback</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        key <span class="token operator">=</span> keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        value <span class="token operator">=</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token function">callback</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token function">each</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="instanceof" tabindex="-1"><a class="header-anchor" href="#instanceof" aria-hidden="true">#</a> instanceof</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//==================</span>
<span class="token comment">// instanceof\uFF1A\u68C0\u6D4B\u67D0\u4E2A\u5B9E\u4F8B\u662F\u5426\u7387\u5C5E\u4E8E\u8FD9\u4E2A\u7C7B</span>
<span class="token comment">// console.log(result instanceof Fn); //-&gt;true</span>

<span class="token comment">// \u521B\u5EFA\u503C\u6709\u4E24\u79CD\u529E\u6CD5\uFF1A</span>
<span class="token comment">//    + \u5B57\u9762\u91CF\u65B9\u6848</span>
<span class="token comment">//    + \u6784\u9020\u51FD\u6570\u65B9\u6848</span>
<span class="token keyword">let</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> obj2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> n1 <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment">//Number\u7C7B\u7684\u4E00\u4E2A\u5B9E\u4F8B\u300C\u539F\u59CB\u503C\u300D</span>
<span class="token keyword">let</span> n2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Number</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Number\u7C7B\u7684\u4E00\u4E2A\u5B9E\u4F8B\u300C\u5BF9\u8C61\u300D</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>n2<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//-&gt;10.00</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>n1<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//-&gt;10.00  \u5185\u90E8\u5904\u7406\u673A\u5236\u201C\u88C5\u7BB1\u548C\u62C6\u7BB1\u201D\uFF1A10-&gt;Object(10) \u300C\u5BF9\u8C61\u5B9E\u4F8B\u300D</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>n1 <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//-&gt;20</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>n2 <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//-&gt;20  n2\u5BF9\u8C61Symbol.toPrimitive/valueOf</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>n2 <span class="token keyword">instanceof</span> <span class="token class-name">Number</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//-&gt;true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>n1 <span class="token keyword">instanceof</span> <span class="token class-name">Number</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//-&gt;false  instanceof\u5B83\u7684\u5C40\u9650\u6027\uFF1A\u4E0D\u80FD\u8BC6\u522B\u539F\u59CB\u503C</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7EC3\u4E60\u4E00\u4E0B" tabindex="-1"><a class="header-anchor" href="#\u7EC3\u4E60\u4E00\u4E0B" aria-hidden="true">#</a> \u7EC3\u4E60\u4E00\u4E0B</h2><p><strong>1. \u4E0B\u9762\u4EE3\u7801\u8F93\u51FA\u7ED3\u679C\u662F\u4EC0\u4E48\uFF1F\u4E3A\u5565\uFF1F</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token number">2</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token number">3</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
    <span class="token literal-property property">length</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token literal-property property">push</span><span class="token operator">:</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>push
<span class="token punctuation">}</span>
obj<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
obj<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">/*{2: 1, 3: 2, length: 4, push: \u0192}*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2. a\u7B49\u4E8E\u4EC0\u4E48\u503C\u4F1A\u8BA9\u4E0B\u9762\u6761\u4EF6\u6210\u7ACB</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token operator">?</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> a <span class="token operator">==</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> a <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;OK&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//\u601D\u8DEF\u4E00 \u5BF9\u8C61\u8F6C\u539F\u59CB\u7C7B\u578B\u7684&quot;\u8F6C\u6362\u673A\u5236&quot;</span>
<span class="token comment">/*\u5BF9\u8C61\u8F6C\u539F\u59CB\u7C7B\u578B\uFF0C\u4F1A\u8C03\u7528\u5185\u7F6E\u7684[ToPrimitive]\u51FD\u6570\uFF0C\u903B\u8F91\u5927\u81F4\u5982\u4E0B\uFF1A

\u5982\u679C\u6709Symbol.toPrimitive\u65B9\u6CD5\uFF0C\u4F18\u5148\u8C03\u7528\u518D\u8FD4\u56DE\uFF0C\u5426\u5219\u8FDB\u884C2\u3002
\u8C03\u7528valueOf\uFF0C\u5982\u679C\u53EF\u4EE5\u8F6C\u6362\u4E3A\u539F\u59CB\u7C7B\u578B\uFF0C\u5219\u8FD4\u56DE\uFF0C\u5426\u5219\u8FDB\u884C3\u3002
\u8C03\u7528toString\uFF0C\u5982\u679C\u53EF\u4EE5\u8F6C\u6362\u4E3A\u539F\u59CB\u7C7B\u578B\uFF0C\u5219\u8FD4\u56DE\uFF0C\u5426\u5219\u8FDB\u884C4\u3002
\u5982\u679C\u90FD\u6CA1\u6709\u8FD4\u56DE\u539F\u59CB\u7C7B\u578B\uFF0C\u4F1A\u62A5\u9519\u3002
*/</span>
<span class="token comment">/*\u89E3\u6CD51: Symbol.toPrimitive
\u6211\u4EEC\u53EF\u4EE5\u5229\u7528\u9690\u5F0F\u8F6C\u6362\u89C4\u5219\u5B8C\u6210\u9898\u76EE*/</span>
<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">i</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>toPrimitive<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>i<span class="token operator">++</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u6BCF\u6B21\u8FDB\u884Ca == xxx\u65F6\u90FD\u4F1A\u5148\u7ECF\u8FC7Symbol.toPrimitive\u51FD\u6570\uFF0C\u81EA\u7136\u4E5F\u5C31\u53EF\u4EE5\u5B9E\u73B0a\u4F9D\u6B21\u9012\u589E\u7684\u6548\u679C</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> a <span class="token operator">==</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> a <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;ok&#39;</span><span class="token punctuation">)</span> 
<span class="token punctuation">}</span>

<span class="token comment">//\u5F53\u7136\u4E5F\u53EF\u4EE5\u5229\u7528valueOf\u548CtoString</span>
<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">i</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token comment">// valueOf\u66FF\u6362\u6210toString\u6548\u679C\u662F\u4E00\u6837\u7684</span>
  <span class="token comment">// toString</span>
  <span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>i<span class="token operator">++</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> a <span class="token operator">==</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> a <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;ok&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u524D\u7AEF\u80D6\u5934\u9C7C</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u89E3\u6CD52</span>
<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>

a<span class="token punctuation">.</span>valueOf <span class="token operator">=</span> a<span class="token punctuation">.</span>shift

<span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> a <span class="token operator">==</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> a <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u{1F197}&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u524D\u7AEF\u80D6\u5934\u9C7C</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//3.\u6570\u636E\u52AB\u6301\u6CD5</span>
Object<span class="token punctuation">.</span>defineProperty
\u901A\u8FC7\u52AB\u6301window\u5BF9\u8C61\uFF0C\u6BCF\u6B21\u8BFB\u53D6a\u5C5E\u6027\u65F6\uFF0C\u90FD\u7ED9_a \u589E\u52A0<span class="token number">1</span>
<span class="token keyword">let</span> _a <span class="token operator">=</span> <span class="token number">1</span>
Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>window<span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> _a<span class="token operator">++</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> a <span class="token operator">==</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> a <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;ok&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3. \u5199\u51FA\u4E0B\u9762\u4EE3\u7801\u6267\u884C\u8F93\u51FA\u7684\u7ED3\u679C</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token constant">C1</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token constant">C2</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token constant">C3</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name <span class="token operator">||</span> <span class="token string">&#39;join&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">C1</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;Tom&#39;</span><span class="token punctuation">;</span>
<span class="token class-name">C2</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;Tom&#39;</span><span class="token punctuation">;</span>
<span class="token class-name">C3</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;Tom&#39;</span><span class="token punctuation">;</span>
<span class="token function">alert</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">C1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">C2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">C3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//&quot;Tomundefinedjoin&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>4. \u5199\u51FA\u4E0B\u9762\u4EE3\u7801\u6267\u884C\u8F93\u51FA\u7684\u7ED3\u679C</strong></p><blockquote><p>\u8FD0\u7B97\u7B26\u4F18\u5148\u7EA7https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Operator_Precedence</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">getName</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
Foo<span class="token punctuation">.</span><span class="token function-variable function">getName</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name">Foo</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">getName</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> <span class="token function-variable function">getName</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
Foo<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//2</span>
<span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//4</span>
<span class="token function">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//1</span>
<span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//1</span>

<span class="token comment">//\u4F18\u5148\u7EA7 \u6210\u5458\u8BBF\u95EE. 18  </span>
<span class="token comment">//		new\uFF08\u5E26\u53C2\u6570\u5217\u8868\uFF09 18</span>
<span class="token comment">//		\u51FD\u6570\u8C03\u7528() 18</span>
<span class="token comment">// 		new\uFF08\u65E0\u53C2\u6570\u5217\u8868\uFF0917 \u4ECE\u53F3\u5230\u5DE6</span>
<span class="token keyword">new</span> <span class="token class-name">Foo<span class="token punctuation">.</span>getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//2 new\u65E0\u53C2\u6570\u5217\u886817\uFF0C\u6240\u4EE5\u6267\u884C Foo.getName()</span>
<span class="token keyword">new</span> <span class="token class-name">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//3</span>
<span class="token keyword">new</span> <span class="token class-name">new</span> <span class="token function">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote>`,40);function d(v,m){const a=c("ExternalLinkIcon");return p(),e("div",null,[i,n("p",null,[n("a",u,[k,o(a)])]),r])}var y=t(l,[["render",d],["__file","9.\u521D\u63A2JS\u9762\u5411\u5BF9\u8C61\u7F16\u7A0B\uFF08OOP\uFF09.html.vue"]]);export{y as default};
