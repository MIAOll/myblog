import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{o as e,c as o,b as n,a,e as t,r as c}from"./app.a63c222e.js";const l={},i=t('<h1 id="js\u4E2D\u6570\u636E\u7C7B\u578B\u68C0\u6D4B\u7684\u529E\u6CD5" tabindex="-1"><a class="header-anchor" href="#js\u4E2D\u6570\u636E\u7C7B\u578B\u68C0\u6D4B\u7684\u529E\u6CD5" aria-hidden="true">#</a> JS\u4E2D\u6570\u636E\u7C7B\u578B\u68C0\u6D4B\u7684\u529E\u6CD5\uFF1F</h1><h2 id="_1-typeof-value" tabindex="-1"><a class="header-anchor" href="#_1-typeof-value" aria-hidden="true">#</a> 1.typeof [value]\uFF1A</h2><p>\u8FD4\u56DE\u4E00\u4E2A\u5B57\u7B26\u4E32\uFF0C\u5B57\u7B26\u4E32\u4E2D\u5305\u542B\u4E86\u5BF9\u5E94\u7684\u6570\u636E\u7C7B\u578B</p><ul><li>typeof null -&gt;&quot;object&quot;</li><li>typeof \u4E0D\u80FD\u7EC6\u5206\u5BF9\u8C61</li><li>typeof new Number(10) -&gt;&quot;object&quot; <ul><li>\u539F\u59CB\u503C\u6570\u636E\u7C7B\u578B(\u4E0D\u542Bnull)\u4EE5\u53CA\u51FD\u6570\u7B49\u503C\u7684\u68C0\u6D4B\uFF0C\u57FA\u4E8Etypeof\u5904\u7406\u8FD8\u662F\u5F88\u4E0D\u9519</li><li>\u539F\u7406\uFF1A\u6839\u636E\u8BA1\u7B97\u673A\u5E95\u5C42\u5B58\u50A8\u7684\u201C\u4E8C\u8FDB\u5236\u503C\u201D\u6765\u68C0\u6D4B\u7684\u300C\u6027\u80FD\u4F1A\u597D\u4E00\u4E9B\u300D typeof typeof [] -&gt; &quot;string&quot;</li></ul></li></ul><h2 id="_2-\u5B9E\u4F8B-instanceof-\u6784\u9020\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_2-\u5B9E\u4F8B-instanceof-\u6784\u9020\u51FD\u6570" aria-hidden="true">#</a> 2.[\u5B9E\u4F8B] instanceof [\u6784\u9020\u51FD\u6570]</h2><p>\u200B \u672C\u610F:\u4E0D\u662F\u68C0\u6D4B\u6570\u636E\u7C7B\u578B\uFF0C\u800C\u662F\u68C0\u6D4B\u5F53\u524D\u5B9E\u4F8B\u662F\u5426\u5C5E\u4E8E\u8FD9\u4E2A\u7C7B\uFF0C\u7528\u6765\u68C0\u6D4B\u6570\u636E\u7C7B\u578B\uFF0C\u4EC5\u662F\u201C\u4E34\u65F6\u62C9\u6765\u5F53\u58EE\u4E01\u201D\uFF0C\u6240\u4EE5\u5B58\u5728\u5F88\u591A\u5F0A\u7AEF\u300C\u53EF\u4EE5\u57FA\u4E8Einstanceof\u7EC6\u5206\u5BF9\u8C61\u7C7B\u578B\u300D</p><p>\u200B \u539F\u7406:\u9996\u5148\u6309\u7167 [\u6784\u9020\u51FD\u6570]<a href="%5B%E5%AE%9E%E4%BE%8B%5D">Symbol.hasInstance</a> \uFF0C\u5982\u679C\u5B58\u5728\u8FD9\u4E2A\u5C5E\u6027\u65B9\u6CD5\uFF0C\u5219\u65B9\u6CD5\u6267\u884C\u8FD4\u56DE\u7684\u503C\u5C31\u662F\u6700\u540E\u68C0\u6D4B\u7684\u7ED3\u679C\uFF1B\u5982\u679C\u4E0D\u5B58\u5728\u8FD9\u4E2A\u5C5E\u6027\u65B9\u6CD5\uFF0C\u5219\u4F1A\u67E5\u627E\u5F53\u524D[\u5B9E\u4F8B]\u7684\u539F\u578B\u94FE\uFF08\u4E00\u76F4\u627E\u5230Object.prototype\u4E3A\u6B62\uFF09\uFF0C\u5982\u679C\u67E5\u627E\u4E2D\u9014\uFF0C<strong>\u627E\u5230\u7684\u67D0\u4E2A\u539F\u578B\u7B49\u4E8E[\u6784\u9020\u51FD\u6570]\u7684\u539F\u578B\u300C\u5373\uFF1A\u6784\u9020\u51FD\u6570\u7684\u539F\u578B\u51FA\u73B0\u5728\u5176\u539F\u578B\u94FE\u4E0A\u300D\u5219\u8FD4\u56DE\u7ED3\u679C\u662Ftrue\uFF0C\u53CD\u4E4Bfalse\uFF01\uFF01</strong></p><h3 id="instance\u5E95\u5C42\u673A\u5236" tabindex="-1"><a class="header-anchor" href="#instance\u5E95\u5C42\u673A\u5236" aria-hidden="true">#</a> instance\u5E95\u5C42\u673A\u5236</h3>',8),u={href:"https://imgse.com/i/vyzw3F",target:"_blank",rel:"noopener noreferrer"},r=n("img",{src:"https://s1.ax1x.com/2022/08/22/vyzw3F.png",alt:"vyzw3F.png"},null,-1),k={href:"https://imgse.com/i/vyz0c4",target:"_blank",rel:"noopener noreferrer"},d=n("img",{src:"https://s1.ax1x.com/2022/08/22/vyz0c4.png",alt:"vyz0c4.png"},null,-1),v={href:"https://imgse.com/i/v6ples",target:"_blank",rel:"noopener noreferrer"},m=n("img",{src:"https://s1.ax1x.com/2022/08/22/v6ples.png",alt:"v6ples.png"},null,-1),b={href:"https://imgse.com/i/v6p3oq",target:"_blank",rel:"noopener noreferrer"},g=n("img",{src:"https://s1.ax1x.com/2022/08/22/v6p3oq.png",alt:"v6p3oq.png"},null,-1),f=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token operator">+</span> \u56E0\u4E3A\u539F\u578B\u53EF\u4EE5\u88AB\u91CD\u5B9A\u5411\uFF0C\u6240\u4EE5\u68C0\u6D4B\u7684\u7ED3\u679C\u4E0D\u4E00\u5B9A\u51C6\u786E
        <span class="token operator">+</span> \u539F\u59CB\u503C\u7C7B\u578B\u4F7F\u7528<span class="token keyword">instanceof</span>\u662F\u65E0\u6CD5\u68C0\u6D4B\u7684
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token number">1</span> <span class="token keyword">instanceof</span> <span class="token class-name">Number</span>
<span class="token comment">//false</span>
<span class="token keyword">new</span> <span class="token class-name">Number</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">instanceof</span> <span class="token class-name">Number</span>
<span class="token comment">//true</span>
<span class="token keyword">null</span> <span class="token keyword">instanceof</span> <span class="token class-name">Number</span>
<span class="token comment">//false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Fn</span><span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span>name<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token function">sayName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">static</span> <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>hasInstance<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> obj<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> f1<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Fn</span><span class="token punctuation">(</span><span class="token string">&#39;\u73E0\u5CF0&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f1 <span class="token keyword">instanceof</span> <span class="token class-name">Fn</span><span class="token punctuation">,</span>f1<span class="token punctuation">)</span>
<span class="token keyword">let</span> f2<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Fn</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f2 <span class="token keyword">instanceof</span> <span class="token class-name">Fn</span><span class="token punctuation">,</span>f2<span class="token punctuation">)</span>

<span class="token comment">// true Fn{name: &#39;\u73E0\u5CF0&#39;}</span>
<span class="token comment">// false Fn{}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-\u5BF9\u8C61-constructor-\u6784\u9020\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_3-\u5BF9\u8C61-constructor-\u6784\u9020\u51FD\u6570" aria-hidden="true">#</a> 3.[\u5BF9\u8C61].constructor===[\u6784\u9020\u51FD\u6570]</h2><p>\u200B \u672C\u610F:\u83B7\u53D6\u5BF9\u8C61\u7684\u6784\u9020\u51FD\u6570\uFF0C\u6240\u4EE5\u4ED6\u4E5F\u662F\u201C\u4E34\u65F6\u62C9\u6765\u5F53\u58EE\u4E01\u201D\uFF0C\u4E5F\u5B58\u5F88\u591A\u7684\u5F0A\u7AEF</p><pre><code>   + constructor\u662F\u53EF\u4EE5\u5141\u8BB8\u88AB\u8086\u610F\u66F4\u6539\u7684\uFF0C\u68C0\u6D4B\u7ED3\u679C\u662F\u4E0D\u51C6\u786E\u7684
</code></pre><h2 id="_4-object-prototype-tostring-call-value" tabindex="-1"><a class="header-anchor" href="#_4-object-prototype-tostring-call-value" aria-hidden="true">#</a> 4.Object.prototype.toString.call([value])</h2><p>\u200B <strong>\u63A8\u8350\u65B9\u6848\uFF1A\u9664\u4E86\u5199\u8D77\u6765\u9EBB\u70E6\u4E00\u4E9B\uFF0C\u6CA1\u6709\u5F0A\u7AEF</strong> \u200B \u539F\u7406:\u9996\u5148\u627E\u5230Object.prototype.toString\u65B9\u6CD5\uFF0C\u628AtoString\u6267\u884C\u7684\u4E4B\u540E\uFF0C\u8BA9\u65B9\u6CD5\u4E2D\u7684this\u53D8\u4E3A\u8981\u68C0\u6D4B\u7684\u8FD9\u4E2A\u503C\uFF0CtoString\u5185\u90E8\u4F1A\u8FD4\u56DE\u5BF9\u5E94this\u300C\u4E5F\u5C31\u662F\u8981\u68C0\u6D4B\u8FD9\u4E2A\u503C\u300D\u7684\u6570\u636E\u7C7B\u578B\u4FE1\u606F \u201C[object ?]\u201D</p><pre><code>    + \u8865\u5145:\u5927\u90E8\u5206\u503C(\u5B9E\u4F8B)\u6240\u5C5E\u7C7B\u7684\u539F\u578B\u4E0A\u90FD\u6709toString\u65B9\u6CD5,\u9664\u4E86Object.prototype.toString\u662F\u7528\u6765\u68C0\u6D4B\u6570\u636E\u7C7B\u578B\u7684\uFF0C\u5176\u4F59\u7684\u4E00\u822C\u90FD\u662F\u7528\u6765\u8F6C\u6362\u4E3A\u5B57\u7B26\u4E32\u7684...
            + \u201C[\`\`\`js
       &quot;[object Number/String/Boolean/Null/Undefined/Symbol/BigInt/Object/Array/RegExp/Date/Error/Function/GeneratorFunction/Math...]
       \`\`\`
</code></pre><p>\u200B<br> \u200B<br> \u200B + + ?\u662F\u5565\uFF0C\u9996\u5148\u770B<strong>value [Symbol.toStringTag]</strong> \uFF0C\u5982\u679C\u5B58\u5728\u8FD9\u4E2A\u5C5E\u6027\uFF0C\u5C5E\u6027\u503C\u662F\u5565\uFF0C\u201C?\u201D\u5C31\u662F\u5565\uFF1B\u5982\u679C\u6CA1\u6709\u8FD9\u4E2A\u5C5E\u6027\uFF0C\u4E00\u822C\u662F\u8FD4\u56DE\u6240\u5C5E\u7684\u6784\u9020\u51FD\u6570\u4FE1\u606F...</p><hr><h2 id="_5-\u7279\u6B8A\u7684" tabindex="-1"><a class="header-anchor" href="#_5-\u7279\u6B8A\u7684" aria-hidden="true">#</a> 5.\u7279\u6B8A\u7684</h2><p><strong>Array.isArray([value]):\u68C0\u6D4B[value]\u662F\u5426\u662F\u6570\u7EC4</strong><strong>isNaN([value]):\u68C0\u6D4B[value]\u662F\u5426\u4E3A\u6709\u6548\u6570\u5B57</strong> ...</p><h2 id="_6-tostring" tabindex="-1"><a class="header-anchor" href="#_6-tostring" aria-hidden="true">#</a> 6.toString</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u975E\u666E\u901A\u5BF9\u8C61.toString \uFF1A\u8C03\u53D6\u7684\u90FD\u662F\u81EA\u5DF1\u6240\u5C5E\u7C7B\u539F\u578B\u4E0A\u7684toString\uFF0C\u5E76\u4E0D\u662FObject.prototype.toString\uFF0C\u90FD\u662F\u8F6C\u6362\u4E3A\u5B57\u7B26\u4E32</span>
<span class="token comment">// \u666E\u901A\u5BF9\u8C61.toString \uFF1A\u8C03\u53D6Object.prototype.toString\u8FD9\u4E2A\u65B9\u6CD5\uFF0C\u6240\u4EE5\u662F\u68C0\u6D4B\u6570\u636E\u7C7B\u578B</span>
<span class="token comment">//    console.log(({}).toString()); //-&gt;&quot;[object Object]&quot;</span>
<span class="token comment">//    console.log(Object.prototype.toString.call({})); //-&gt;&quot;[object Object]&quot;</span>
<span class="token keyword">let</span> class2type <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    toString <span class="token operator">=</span> class2type<span class="token punctuation">.</span>toString<span class="token punctuation">;</span> <span class="token comment">//-&gt;Object.prototype.toString</span>

<span class="token keyword">let</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//-&gt;&quot;[object GeneratorFunction]&quot;</span>

<span class="token comment">//[Symbol.toStringTag]\u7684\u4F5C\u7528</span>
<span class="token keyword">function</span> <span class="token function">Fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">Fn</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">constructor</span><span class="token operator">:</span> Fn<span class="token punctuation">,</span>
    <span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// \u8FD9\u6837\u6240\u6709Fn\u7684\u5B9E\u4F8B(f)\u5C31\u62E5\u6709\u8FD9\u4E2A\u5C5E\u6027\uFF0C\u540E\u671F\u57FA\u4E8EtoString\u68C0\u6D4B\u7C7B\u578B\uFF0C\u8FD4\u56DE\u201C[object Fn]\u201D</span>
    <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>toStringTag<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&#39;Fn&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> f <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fn</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//-&gt;&quot;[object Fn]&quot;  \u9ED8\u8BA4\u662F\u201C[object Object]\u201D </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> value <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span>constructor <span class="token operator">===</span> Array<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//-&gt;true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span>constructor <span class="token operator">===</span> RegExp<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//-&gt;false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span>constructor <span class="token operator">===</span> Object<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//-&gt;false</span>

value <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span>constructor <span class="token operator">===</span> Number<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//-&gt;true </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//-&gt;true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">instanceof</span> <span class="token class-name">RegExp</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//-&gt;false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//-&gt;true </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token class-name">Fn</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> f <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fn</span><span class="token punctuation">;</span>
<span class="token comment">// \u6B63\u5E38\u7406\u89E3:f\u80AF\u5B9A\u4E0D\u662F\u6570\u7EC4</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f <span class="token keyword">instanceof</span> <span class="token class-name">Fn</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//-&gt;true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//-&gt;true </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">instanceof</span> <span class="token class-name">Number</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//-&gt;false  \u8FD9\u6837\u5904\u7406\u4E0D\u4F1A\u8F6C\u6362</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//-&gt;&#39;1.00&#39; \u6D4F\u89C8\u5668\u6709\u4E00\u4E2A\u628A1\u8F6C\u6362\u4E3A\u5BF9\u8C61\u683C\u5F0F1\u7684\u64CD\u4F5C&quot;Object(1)&quot; \u88C5\u7BB1 </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Fn</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u57FA\u4E8EES6\u8BBE\u7F6E\u9759\u6001\u79C1\u6709\u5C5E\u6027\u662F\u6709\u6548\u7684</span>
    <span class="token comment">// Symbol.hasInstance\u7528\u4E8E\u5224\u65AD\u67D0\u5BF9\u8C61\u662F\u5426\u4E3A\u67D0\u6784\u9020\u5668\u7684\u5B9E\u4F8B\u3002\u56E0\u6B64\u4F60\u53EF\u4EE5\u7528\u5B83\u81EA\u5B9A\u4E49 instanceof \u64CD\u4F5C\u7B26\u5728\u67D0\u4E2A\u7C7B\u4E0A\u7684\u884C\u4E3A\u3002</span>
    <span class="token keyword">static</span><span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>hasInstance<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">instanceof</span> <span class="token class-name">Fn</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token keyword">instanceof</span> <span class="token class-name">Fn</span><span class="token punctuation">)</span>
<span class="token comment">// []</span>
<span class="token comment">// true</span>
<span class="token comment">// 1</span>
<span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-\u81EA\u5DF1\u5B9E\u73B0\u4E00\u4E2Ainstance" tabindex="-1"><a class="header-anchor" href="#_7-\u81EA\u5DF1\u5B9E\u73B0\u4E00\u4E2Ainstance" aria-hidden="true">#</a> 7.\u81EA\u5DF1\u5B9E\u73B0\u4E00\u4E2Ainstance</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">instance_of</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> Ctor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6570\u636E\u683C\u5F0F\u51C6\u786E\u6027\u6821\u9A8C</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Ctor <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&quot;Right-hand side of &#39;instanceof&#39; is not an object&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">Ctor</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&quot;Function has non-object prototype &#39;undefined&#39; in instanceof check&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> Ctor <span class="token operator">!==</span> <span class="token string">&quot;function&quot;</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&quot;Right-hand side of &#39;instanceof&#39; is not callable&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u539F\u59CB\u7C7B\u578B\u76F4\u63A5\u5FFD\u7565</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>obj <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(object|function)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

    <span class="token comment">// \u5148\u68C0\u6D4B\u662F\u5426\u6709 Symbol.hasInstance \u8FD9\u4E2A\u5C5E\u6027</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> Ctor<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>hasInstance<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> Ctor<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>hasInstance<span class="token punctuation">]</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u6700\u540E\u624D\u4F1A\u6309\u7167\u539F\u578B\u94FE\u8FDB\u884C\u5904\u7406</span>
    <span class="token keyword">let</span> prototype <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>prototype<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>prototype <span class="token operator">===</span> <span class="token class-name">Ctor</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        prototype <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token function">instance_of</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">]</span><span class="token punctuation">,</span> Array<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//=&gt;true </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,22);function y(h,w){const s=c("ExternalLinkIcon");return e(),o("div",null,[i,n("p",null,[n("a",u,[r,a(s)])]),n("p",null,[n("a",k,[d,a(s)])]),n("p",null,[n("a",v,[m,a(s)])]),n("p",null,[n("a",b,[g,a(s)])]),f])}var x=p(l,[["render",y],["__file","12.JS\u4E2D\u6570\u636E\u7C7B\u578B\u68C0\u6D4B\u7684\u529E\u6CD5\uFF1F.html.vue"]]);export{x as default};
