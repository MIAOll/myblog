import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{o,c as e,b as n,a as t,e as s,r as c}from"./app.a63c222e.js";const l={},u=s(`<h1 id="\u5F02\u6B65\u7BA1\u63A7\u548C\u81EA\u5B9A\u4E49\u961F\u5217\u5904\u7406\u7684\u9762\u8BD5\u9898" tabindex="-1"><a class="header-anchor" href="#\u5F02\u6B65\u7BA1\u63A7\u548C\u81EA\u5B9A\u4E49\u961F\u5217\u5904\u7406\u7684\u9762\u8BD5\u9898" aria-hidden="true">#</a> \u5F02\u6B65\u7BA1\u63A7\u548C\u81EA\u5B9A\u4E49\u961F\u5217\u5904\u7406\u7684\u9762\u8BD5\u9898</h1><h2 id="_1-\u5B9E\u73B0\u4E00\u4E2Alazyman-\u53EF\u4EE5\u6309\u7167\u4EE5\u4E0B\u65B9\u5F0F\u8C03\u7528" tabindex="-1"><a class="header-anchor" href="#_1-\u5B9E\u73B0\u4E00\u4E2Alazyman-\u53EF\u4EE5\u6309\u7167\u4EE5\u4E0B\u65B9\u5F0F\u8C03\u7528" aria-hidden="true">#</a> 1.\u5B9E\u73B0\u4E00\u4E2ALazyMan,\u53EF\u4EE5\u6309\u7167\u4EE5\u4E0B\u65B9\u5F0F\u8C03\u7528</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">LazyMan</span><span class="token punctuation">(</span><span class="token string">&quot;Hank&quot;</span><span class="token punctuation">)</span>
<span class="token comment">//Hi\uFF01This is Hank1</span>
<span class="token function">LazyMan</span><span class="token punctuation">(</span><span class="token string">&quot;Hank&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eat</span><span class="token punctuation">(</span><span class="token string">&#39;dinner&#39;</span><span class="token punctuation">)</span>
<span class="token comment">/*
Hi\uFF01This is Hank1
10s\u540E
wake up after 10
eat dinner
*/</span>
<span class="token function">LazyMan</span><span class="token punctuation">(</span><span class="token string">&quot;Hank&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eat</span><span class="token punctuation">(</span><span class="token string">&#39;dinner&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eat</span><span class="token punctuation">(</span><span class="token string">&#39;supper&#39;</span><span class="token punctuation">)</span>
<span class="token comment">/*
Hi\uFF01This is Hank1
eat dinner
eat supper
*/</span>
<span class="token function">LazyMan</span><span class="token punctuation">(</span><span class="token string">&quot;Hank&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eat</span><span class="token punctuation">(</span><span class="token string">&#39;dinner&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sleepFirst</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
<span class="token comment">/*
\u7B49\u5F855\u79D2
Wake up after 5
Hi This is Hank
Eat supper*/</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u89E3\u51B3\u65B9\u6848</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">_LazyMan</span><span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//\u5F02\u6B65\u6267\u884C\u961F\u5217</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>listeners <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">//\u521D\u59CB\u5316\u4E8B\u4EF6</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>listeners<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Hi This is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">queueMicrotask</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token punctuation">{</span>listeners<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">,</span>
        index<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> <span class="token function-variable function">next</span><span class="token operator">=</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>index<span class="token operator">&gt;</span>listeners<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> task<span class="token operator">=</span>listeners<span class="token punctuation">[</span>index<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">await</span> <span class="token function">task</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">eat</span><span class="token punctuation">(</span><span class="token parameter">food</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>listeners<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Eat </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>food<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token parameter">time<span class="token punctuation">,</span>flag<span class="token operator">=</span><span class="token boolean">false</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>listeners<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Weap up at </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>time<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>time<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>listeners<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Weap up at </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>time<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>time<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">sleepFirst</span><span class="token punctuation">(</span><span class="token parameter">time</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">sleep</span><span class="token punctuation">(</span>time<span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">LazyMan</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">_LazyMan</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">LazyMan</span><span class="token punctuation">(</span><span class="token string">&quot;Hank&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eat</span><span class="token punctuation">(</span><span class="token string">&#39;dinner&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-\u6709ajax\u7684\u5F02\u6B65\u5E76\u53D1\u7BA1\u63A7" tabindex="-1"><a class="header-anchor" href="#_2-\u6709ajax\u7684\u5F02\u6B65\u5E76\u53D1\u7BA1\u63A7" aria-hidden="true">#</a> 2.\u6709ajax\u7684\u5F02\u6B65\u5E76\u53D1\u7BA1\u63A7</h2><p>\u9898\u76EE</p><p>\u73B0\u6709\u4E00\u4E2APOST\u63A5\u53E3\uFF1Ahttp://xxx.com/students,\u6BCF\u6B21\u8BF7\u6C42\u53EA\u80FD\u8FD4\u56DE10\u4E2A\u5B66\u751F\u7684\u8BFE\u7A0B\u6210\u7EE9\uFF0C\u5982\u4E0B</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">[</span>

 <span class="token punctuation">{</span>name<span class="token operator">:</span>&#39;\u5F20\u4E09&#39;<span class="token punctuation">,</span>score<span class="token operator">:</span><span class="token number">99</span><span class="token punctuation">,</span>time<span class="token operator">:</span>&#39;<span class="token number">2021</span><span class="token number">-12</span><span class="token number">-22</span>&#39;<span class="token punctuation">}</span><span class="token punctuation">,</span>

 <span class="token punctuation">{</span>name<span class="token operator">:</span>&#39;\u674E\u56DB&#39;<span class="token punctuation">,</span>score<span class="token operator">:</span><span class="token number">99</span><span class="token punctuation">,</span>time<span class="token operator">:</span>&#39;<span class="token number">2021</span><span class="token number">-12</span><span class="token number">-12</span>&#39;<span class="token punctuation">}</span><span class="token punctuation">,</span>

 ...

<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BE5\u63A5\u53E3\u6709\u4E00\u5B9A\u6982\u7387\u8BF7\u6C42\u5931\u8D25\uFF0C\u4E0D\u53EF\u5FFD\u7565</p><p>\u8981\u6C42\uFF0C\u5B9E\u73B0\u4E00\u4E2A\u51FD\u6570\uFF0C\u603B\u5171\u83B7\u53D6100\u4E2A\u6210\u7EE9\u5927\u4E8E90\uFF0C\u4E14\u65F6\u95F4\u57282021\u5E7412\u670803\u65E5\u4E4B\u540E\u7684\u5B66\u751F\u7684\u8BFE\u7A0B\u6210\u7EE9\uFF0C\u5E76\u6309\u4ECE\u5C0F\u5230\u5927\u987A\u5E8F\u6392\u5E8F\uFF0C\u8BF7\u6C42\u7528axios</p><p><strong>\u63D0\u793A\uFF1A</strong></p><p><strong>\u6D4F\u89C8\u5668\u6700\u591A\u67096\u4E2A\u5E76\u884C\u7684\u7F51\u7EDC\u8BF7\u6C42</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u6A21\u62DF\u6570\u636E\u8BF7\u6C42\u7684\u65B9\u6CD5</span>
<span class="token keyword">const</span> source<span class="token operator">=</span>axios<span class="token punctuation">.</span>CancelToken<span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">query</span><span class="token operator">=</span><span class="token keyword">function</span> <span class="token function">query</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;https://localhost:8080/students&#39;</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">cancelToken</span><span class="token operator">:</span>source<span class="token punctuation">.</span>token<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token operator">=&gt;</span>response<span class="token punctuation">.</span>data<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">fetchStudents</span><span class="token operator">=</span><span class="token keyword">function</span> <span class="token function">fetchStudents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//\u540C\u65F6\u5F00\u542F\u516D\u4E2A\u5DE5\u4F5C\u533A</span>
    <span class="token keyword">let</span> works<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        values<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    works<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>values<span class="token punctuation">.</span>length<span class="token operator">&gt;=</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
          <span class="token comment">//\u8BF7\u6C42\u7ED3\u675F:\u53D6\u6D88\u8FD8\u5728\u53D1\u9001\u7684\u8BF7\u6C42</span>
          source<span class="token punctuation">.</span><span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token function">resolve</span><span class="token punctuation">(</span>values<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span>b</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span>b<span class="token punctuation">.</span>score<span class="token operator">-</span>a<span class="token punctuation">.</span>score<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">try</span><span class="token punctuation">{</span>
          <span class="token keyword">let</span> value<span class="token operator">=</span><span class="token keyword">await</span> <span class="token function">query</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          value<span class="token operator">=</span>value<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token operator">=&gt;</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>score<span class="token operator">&gt;</span><span class="token number">90</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>time<span class="token punctuation">)</span><span class="token operator">-</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&#39;2012-12-03&#39;</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          values<span class="token operator">=</span>values<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-\u8BF4\u4E00\u8BF4-ajax-\u7684\u5E76\u884C\u548C\u4E32\u884C-\u591A\u4E2A\u5F02\u6B65\u7684ajax-fetch\u8BF7\u6C42\u5982\u4F55\u7BA1\u7406" tabindex="-1"><a class="header-anchor" href="#_3-\u8BF4\u4E00\u8BF4-ajax-\u7684\u5E76\u884C\u548C\u4E32\u884C-\u591A\u4E2A\u5F02\u6B65\u7684ajax-fetch\u8BF7\u6C42\u5982\u4F55\u7BA1\u7406" aria-hidden="true">#</a> 3.\u8BF4\u4E00\u8BF4 ajax \u7684\u5E76\u884C\u548C\u4E32\u884C\uFF1A\u591A\u4E2A\u5F02\u6B65\u7684ajax/fetch\u8BF7\u6C42\u5982\u4F55\u7BA1\u7406</h2><p>\u6BD4\u5982</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u6A21\u62DF\u6570\u636E\u8BF7\u6C42</span>
<span class="token keyword">const</span> <span class="token function-variable function">delay</span><span class="token operator">=</span><span class="token keyword">function</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token parameter">interval</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
   <span class="token function">resolve</span><span class="token punctuation">(</span>interval<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>interval<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u4EFB\u52A1\u5217\u8868</span>

<span class="token keyword">let</span> tasks<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1001</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">]</span>
<span class="token comment">//ajax \u7684\u5E76\u884C\u548C\u4E32\u884C\uFF1A\u591A\u4E2A\u5F02\u6B65\u7684ajax/fetch\u8BF7\u6C42\u5982\u4F55\u7BA1\u7406</span>
<span class="token comment">//\u5E76\u884C\uFF1A\u591A\u4E2A\u8BF7\u6C42\u95F4\u6CA1\u6709\u4F9D\u8D56\uFF0C\u53EF\u4EE5\u540C\u65F6\u8FDB\u884C</span>

<span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token operator">=&gt;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token operator">=&gt;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token operator">=&gt;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">values</span><span class="token operator">=&gt;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//\u4E32\u884C\uFF1A\u8BF7\u6C42\u4E4B\u95F4\u5B58\u5728\u4F9D\u8D56\uFF0C\u9700\u8981\u7B49\u5230\u4E0A\u4E00\u4E2A\u8BF7\u6C42\u6210\u529F\uFF0C\u624D\u80FD\u53D1\u9001\u4E0B\u4E00\u4E2A\u8BF7\u6C42</span>
<span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">let</span> value<span class="token operator">=</span><span class="token keyword">await</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  value<span class="token operator">=</span><span class="token keyword">await</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  value<span class="token operator">=</span><span class="token keyword">await</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17),i={href:"https://imgse.com/i/vyvkCD",target:"_blank",rel:"noopener noreferrer"},k=n("img",{src:"https://s1.ax1x.com/2022/08/22/vyvkCD.png",alt:"vyvkCD.png"},null,-1),r=s(`<p>\u95EE\u9898\u6765\u4E86\uFF0C\u4E00\u4E2A\u9875\u9762\u540C\u65F6\u5E76\u884C\u5F88\u591A\u8BF7\u6C42\uFF0C\u6D4F\u89C8\u5668\u6700\u591A\u652F\u63015~7\u4E2A\uFF0C\u600E\u4E48\u7BA1\u7406\uFF1F\uFF1F</p><h3 id="\u5E76\u53D1\u63A7\u5236\u7B80\u4ECB" tabindex="-1"><a class="header-anchor" href="#\u5E76\u53D1\u63A7\u5236\u7B80\u4ECB" aria-hidden="true">#</a> \u5E76\u53D1\u63A7\u5236\u7B80\u4ECB</h3><p>\u4F60\u53EF\u80FD\u4F1A\u9047\u5230\u5E76\u53D1\u63A7\u5236\u7684\u573A\u666F\uFF0C\u6BD4\u5982\u63A7\u5236\u8BF7\u6C42\u5E76\u53D1\u6570\u3002\u90A3\u4E48\u5728 JavaScript \u4E2D\u5982\u4F55\u5B9E\u73B0\u5E76\u53D1\u63A7\u5236\u5462\uFF1F\u5728\u56DE\u7B54\u8FD9\u4E2A\u95EE\u9898\u4E4B\u524D\uFF0C\u6211\u4EEC\u6765\u7B80\u5355\u4ECB\u7ECD\u4E00\u4E0B\u5E76\u53D1\u63A7\u5236\u3002</p><p>\u5047\u8BBE\u6709 6 \u4E2A\u5F85\u529E\u4EFB\u52A1\u8981\u6267\u884C\uFF0C\u800C\u6211\u4EEC\u5E0C\u671B\u9650\u5236\u540C\u65F6\u6267\u884C\u7684\u4EFB\u52A1\u4E2A\u6570\uFF0C\u5373\u6700\u591A\u53EA\u6709 2 \u4E2A\u4EFB\u52A1\u80FD\u540C\u65F6\u6267\u884C\u3002\u5F53 <strong>\u6B63\u5728\u6267\u884C\u4EFB\u52A1\u5217\u8868</strong> \u4E2D\u7684\u4EFB\u4F55 1 \u4E2A\u4EFB\u52A1\u5B8C\u6210\u540E\uFF0C\u7A0B\u5E8F\u4F1A\u81EA\u52A8\u4ECE <strong>\u5F85\u529E\u4EFB\u52A1\u5217\u8868</strong> \u4E2D\u83B7\u53D6\u65B0\u7684\u5F85\u529E\u4EFB\u52A1\u5E76\u628A\u8BE5\u4EFB\u52A1\u6DFB\u52A0\u5230 <strong>\u6B63\u5728\u6267\u884C\u4EFB\u52A1\u5217\u8868</strong> \u4E2D\u3002\u4E3A\u4E86\u8BA9\u5927\u5BB6\u80FD\u591F\u66F4\u76F4\u89C2\u5730\u7406\u89E3\u4E0A\u8FF0\u7684\u8FC7\u7A0B\uFF0C\u963F\u5B9D\u54E5\u7279\u610F\u753B\u4E86\u4EE5\u4E0B 3 \u5F20\u56FE\uFF1A</p><h4 id="_1-1-\u9636\u6BB5\u4E00" tabindex="-1"><a class="header-anchor" href="#_1-1-\u9636\u6BB5\u4E00" aria-hidden="true">#</a> 1.1 \u9636\u6BB5\u4E00</h4><p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/jQmwTIFl1V0LDFjJCPJAiatZLtChuoIMxibB29HC0Xu8P88QOfARd8sqb9pmibX3VkYJ5QiajiamFMhYBOKb2FwACNQ/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="\u56FE\u7247"></p><h4 id="_1-2-\u9636\u6BB5\u4E8C" tabindex="-1"><a class="header-anchor" href="#_1-2-\u9636\u6BB5\u4E8C" aria-hidden="true">#</a> 1.2 \u9636\u6BB5\u4E8C</h4><p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/jQmwTIFl1V0LDFjJCPJAiatZLtChuoIMxjaTMKKpx54byYaoR4Oxg5fju8TTXIeCqYsvSn9apJqDkny1ttM0bYw/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="\u56FE\u7247"></p><h4 id="_1-3-\u9636\u6BB5\u4E09" tabindex="-1"><a class="header-anchor" href="#_1-3-\u9636\u6BB5\u4E09" aria-hidden="true">#</a> 1.3 \u9636\u6BB5\u4E09</h4><p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/jQmwTIFl1V0LDFjJCPJAiatZLtChuoIMxH3G0lmALJHVTmnwxqCFQ8RuiawEfhRQm3MrcfRyyyAEh5ibBiazl9SffQ/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="\u56FE\u7247"></p><h3 id="\u65B9\u6CD51-\u4F7F\u7528asyncpool\u63D2\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u65B9\u6CD51-\u4F7F\u7528asyncpool\u63D2\u4EF6" aria-hidden="true">#</a> \u65B9\u6CD51.\u4F7F\u7528asyncpool\u63D2\u4EF6</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>
  <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">&quot;asyncpool.js&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>
    <span class="token keyword">let</span> tasks <span class="token operator">=</span> <span class="token punctuation">[</span>
      <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1001</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1002</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">//asyncpool\uFF1A\u5B9E\u73B0ajax\u7684\u5E76\u53D1\u9650\u5236</span>
    <span class="token keyword">let</span> values<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token function">aysncPool</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span>tasks<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">task<span class="token punctuation">,</span>next</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
      <span class="token comment">//task\u5F53\u524D\u9700\u8981\u53D1\u9001\u8BF7\u6C42\u7684\u4EFB\u52A1</span>
      <span class="token comment">//next\u6267\u884C\u4E0B\u4E00\u4E2A\u4EFB\u52A1</span>
      <span class="token keyword">let</span> value<span class="token operator">=</span><span class="token keyword">await</span> <span class="token function">task</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      values<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
      <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u6240\u6709\u8BF7\u6C42\u8C46\u6210\u529F1&quot;</span> <span class="token operator">+</span> values<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u65B9\u6CD52-\u57FA\u4E8E\u591A\u4E2A\u5DE5\u4F5C\u533A-\u5B9E\u73B0\u5E76\u53D1\u7BA1\u63A7" tabindex="-1"><a class="header-anchor" href="#\u65B9\u6CD52-\u57FA\u4E8E\u591A\u4E2A\u5DE5\u4F5C\u533A-\u5B9E\u73B0\u5E76\u53D1\u7BA1\u63A7" aria-hidden="true">#</a> \u65B9\u6CD52.\u57FA\u4E8E\u591A\u4E2A\u5DE5\u4F5C\u533A\uFF0C\u5B9E\u73B0\u5E76\u53D1\u7BA1\u63A7</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">createRequest</span><span class="token operator">=</span><span class="token keyword">function</span> <span class="token function">createRequest</span><span class="token punctuation">(</span><span class="token parameter">tasks<span class="token punctuation">,</span>limit</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>tasks<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;tasks must be an array&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  limit<span class="token operator">=</span><span class="token operator">+</span>limit<span class="token punctuation">;</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isNaN</span><span class="token punctuation">(</span>limit<span class="token punctuation">)</span><span class="token punctuation">)</span> limit<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token comment">//\u9650\u5236\u51E0\u4E2A\uFF0C\u6211\u4EEC\u5C31\u521B\u9020\u51E0\u4E2A\u5DE5\u4F5C\u533A(\u6BCF\u4E2A\u5DE5\u4F5C\u533A\u90FD\u8FD4\u56DEpromise)</span>
  <span class="token keyword">let</span> works<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>limit<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  works<span class="token operator">=</span>works<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token comment">//\u6240\u6709\u5DE5\u4F5C\u533Apromise \u90FD\u6210\u529F\uFF0C\u5219\u6574\u4F53\u6210\u529F</span>
  <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>works<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B8C\u6574\u4EE3\u7801</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token parameter">interval</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>interval<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> interval<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  
  <span class="token keyword">let</span> tasks <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1001</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1002</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>
  
  <span class="token keyword">function</span> <span class="token function">createRequest</span><span class="token punctuation">(</span><span class="token parameter">tasks<span class="token punctuation">,</span>limit</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>tasks<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;tasks must be an array&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    limit<span class="token operator">=</span><span class="token operator">+</span>limit<span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isNaN</span><span class="token punctuation">(</span>limit<span class="token punctuation">)</span><span class="token punctuation">)</span> limit<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> values<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> index<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token comment">//\u9650\u5236\u51E0\u4E2A\uFF0C\u6211\u4EEC\u5C31\u521B\u9020\u51E0\u4E2A\u5DE5\u4F5C\u533A(\u6BCF\u4E2A\u5DE5\u4F5C\u533A\u90FD\u8FD4\u56DEpromise)</span>
    <span class="token keyword">let</span> works<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>limit<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    works<span class="token operator">=</span>works<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token function-variable function">next</span><span class="token operator">=</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">let</span> prevIndex<span class="token operator">=</span>index<span class="token punctuation">,</span>
              task<span class="token operator">=</span>tasks<span class="token punctuation">[</span>index<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
              value<span class="token punctuation">;</span>
          <span class="token keyword">if</span><span class="token punctuation">(</span>index<span class="token operator">&gt;</span>tasks<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">try</span><span class="token punctuation">{</span>
            value<span class="token operator">=</span><span class="token keyword">await</span> <span class="token function">task</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            values<span class="token punctuation">[</span>prevIndex<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">{</span>
            values<span class="token punctuation">[</span>prevIndex<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
  
          <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  
    <span class="token comment">//\u6240\u6709\u5DE5\u4F5C\u533Apromise \u90FD\u6210\u529F\uFF0C\u5219\u6574\u4F53\u6210\u529F</span>
    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>works<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> values<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  
  <span class="token function">createRequest</span><span class="token punctuation">(</span>tasks<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>
  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u65B9\u6CD5\u4E09-\u5229\u7528\u961F\u5217\u548C\u8BB0\u5F55\u6B63\u5728\u8FD0\u884C\u7684\u4EFB\u52A1\u7684\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u65B9\u6CD5\u4E09-\u5229\u7528\u961F\u5217\u548C\u8BB0\u5F55\u6B63\u5728\u8FD0\u884C\u7684\u4EFB\u52A1\u7684\u65B9\u5F0F" aria-hidden="true">#</a> \u65B9\u6CD5\u4E09\uFF1A\u5229\u7528\u961F\u5217\u548C\u8BB0\u5F55\u6B63\u5728\u8FD0\u884C\u7684\u4EFB\u52A1\u7684\u65B9\u5F0F</h3>`,17),d={href:"https://imgse.com/i/vyvGvj",target:"_blank",rel:"noopener noreferrer"},v=n("img",{src:"https://s1.ax1x.com/2022/08/22/vyvGvj.png",alt:"vyvGvj.png"},null,-1),m=s(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token parameter">interval</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span>interval<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> interval<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> tasks <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1001</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">2002</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1003</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1004</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">3004</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">TaskQueue</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">tasks<span class="token punctuation">,</span> limit<span class="token punctuation">,</span> onComplete</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> self <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    self<span class="token punctuation">.</span>tasks <span class="token operator">=</span> tasks<span class="token punctuation">;</span>
    self<span class="token punctuation">.</span>limit <span class="token operator">=</span> limit<span class="token punctuation">;</span>
    self<span class="token punctuation">.</span>onComplete <span class="token operator">=</span> onComplete<span class="token punctuation">;</span>
    <span class="token comment">//\u6B63\u5728\u8FD0\u884C\u7684\u4EFB\u52A1\u6570\u91CF</span>
    self<span class="token punctuation">.</span>running <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token comment">//\u5F53\u524D\u53D6\u51FA\u4EFB\u52A1\u7684\u7D22\u5F15</span>
    self<span class="token punctuation">.</span>index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token comment">//\u7ED3\u679C</span>
    self<span class="token punctuation">.</span>values <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>limit<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        self<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token function">pushStack</span><span class="token punctuation">(</span><span class="token parameter">task</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>tasks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">async</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> self <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> result<span class="token punctuation">;</span>
    <span class="token comment">// let running=this.running;</span>
    <span class="token keyword">let</span> <span class="token punctuation">{</span> running<span class="token punctuation">,</span> limit<span class="token punctuation">,</span> index<span class="token punctuation">,</span> values<span class="token punctuation">,</span> tasks<span class="token punctuation">,</span> onComplete <span class="token punctuation">}</span> <span class="token operator">=</span> self<span class="token punctuation">;</span>
    <span class="token comment">// console.log(running)</span>
    <span class="token comment">// console.log(this.running, limit, index, values, tasks, onComplete);</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>running <span class="token operator">&lt;</span> limit <span class="token operator">&amp;&amp;</span> index <span class="token operator">&lt;=</span> tasks<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//\u6CA1\u8FD0\u884C\u6EE1</span>
      self<span class="token punctuation">.</span>running<span class="token operator">++</span><span class="token punctuation">;</span>
      <span class="token keyword">let</span> curIndex <span class="token operator">=</span> index<span class="token punctuation">;</span>
      <span class="token keyword">let</span> task <span class="token operator">=</span> tasks<span class="token punctuation">[</span>self<span class="token punctuation">.</span>index<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">task</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        values<span class="token punctuation">[</span>curIndex<span class="token punctuation">]</span> <span class="token operator">=</span> result<span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        values<span class="token punctuation">[</span>curIndex<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      self<span class="token punctuation">.</span>running<span class="token operator">--</span><span class="token punctuation">;</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;self&#39;</span><span class="token punctuation">,</span>self<span class="token punctuation">,</span>self<span class="token punctuation">.</span>index <span class="token punctuation">,</span>tasks<span class="token punctuation">.</span>length <span class="token punctuation">,</span>self<span class="token punctuation">.</span>running<span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>index <span class="token operator">==</span> tasks<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> self<span class="token punctuation">.</span>running <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u4EFB\u52A1\u90FD\u8FD0\u884C\u5B8C\u4E86</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;ok!&#39;</span><span class="token punctuation">,</span>onComplete<span class="token punctuation">,</span>values<span class="token punctuation">)</span>
        <span class="token function">onComplete</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      self<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">createRequest</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">createRequest</span><span class="token punctuation">(</span><span class="token parameter">tasks<span class="token punctuation">,</span> limit<span class="token punctuation">,</span> onComplete</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>tasks<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&quot;tasks must be an array of tasks&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> limit <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span><span class="token punctuation">)</span> onComplete <span class="token operator">=</span> limit<span class="token punctuation">;</span>
  limit <span class="token operator">=</span> <span class="token operator">+</span>limit<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isNaN</span><span class="token punctuation">(</span>limit<span class="token punctuation">)</span><span class="token punctuation">)</span> limit <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token comment">//Function.prototype =&gt; ()=&gt;{} \u4E00\u4E2A\u7A7A\u51FD\u6570</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> onComplete <span class="token operator">!==</span> <span class="token string">&quot;function&quot;</span><span class="token punctuation">)</span> onComplete <span class="token operator">=</span> <span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
  
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">TaskQueue</span><span class="token punctuation">(</span>tasks<span class="token punctuation">,</span> limit<span class="token punctuation">,</span> onComplete<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span>
<span class="token function">createRequest</span><span class="token punctuation">(</span>tasks<span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">values</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u6240\u6709\u8BF7\u6C42\u90FD\u6210\u529F&quot;</span> <span class="token operator">+</span> values<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">timeEnd</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u4F7F\u7528console.time(&#39;a&#39;)\u548Cconsole.timeEnd(&#39;a&#39;)\u6765\u9A8C\u8BC1\u65F6\u95F4</p><p>\u4E0A\u9762\u7684\u4F8B\u5B50\uFF0Climit\u8BBE\u7F6E\u4E3A1\u9700\u89819000ms \uFF0Climit\u4E3A5\u9700\u8981 4000ms</p>`,3);function b(f,y){const a=c("ExternalLinkIcon");return o(),e("div",null,[u,n("p",null,[n("a",i,[k,t(a)])]),r,n("p",null,[n("a",d,[v,t(a)])]),m])}var h=p(l,[["render",b],["__file","\u5F02\u6B65\u7BA1\u63A7\u548C\u81EA\u5B9A\u4E49\u961F\u5217\u5904\u7406\u7684\u9762\u8BD5\u9898.html.vue"]]);export{h as default};
